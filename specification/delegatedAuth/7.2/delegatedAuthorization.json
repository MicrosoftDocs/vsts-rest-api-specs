{
  "swagger": "2.0",
  "info": {
    "title": "DelegatedAuthorization",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "7.2-preview"
  },
  "host": "vssps.dev.azure.com",
  "x-ms-vss-area": "DelegatedAuthorization",
  "basePath": "/",
  "tags": [
    {
      "name": "Registration Secret"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/delegatedauth/registrationsecret/{registrationId}": {
      "post": {
        "tags": [
          "Registration Secret"
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "registrationSecret",
        "x-ms-vss-method": "CreateAlternativeSecret",
        "x-ms-preview": true,
        "description": "Create Alternative Secret for the ADO OAuth App Registration",
        "operationId": "Registration Secret_Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "registrationId",
            "description": "The registration id of the ADO OAuth App Registration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/JsonWebToken"
            }
          }
        },
        "security": [
          {
            "entra": [
              "vso.tokens"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Registration Secret"
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "registrationSecret",
        "x-ms-vss-method": "RotateSecret",
        "x-ms-preview": true,
        "description": "Rotate one of the two secrets for the ADO OAuth App Registration",
        "operationId": "Registration Secret_Rotate Secret",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "registrationId",
            "description": "The registration id of the ADO OAuth App Registration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "secretType",
            "description": "The secret type to rotate, either primary or alternative",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          }
        },
        "security": [
          {
            "entra": [
              "vso.tokens"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "AccessTokenResult": {
      "description": "",
      "type": "object",
      "properties": {
        "accessToken": {
          "$ref": "#/definitions/JsonWebToken"
        },
        "accessTokenError": {
          "enum": [
            "none",
            "grantTypeRequired",
            "authorizationGrantRequired",
            "clientSecretRequired",
            "redirectUriRequired",
            "invalidAuthorizationGrant",
            "invalidAuthorizationScopes",
            "invalidRefreshToken",
            "authorizationNotFound",
            "authorizationGrantExpired",
            "accessAlreadyIssued",
            "invalidRedirectUri",
            "accessTokenNotFound",
            "invalidAccessToken",
            "accessTokenAlreadyRefreshed",
            "invalidClientSecret",
            "clientSecretExpired",
            "serverError",
            "accessDenied",
            "accessTokenKeyRequired",
            "invalidAccessTokenKey",
            "failedToGetAccessToken",
            "invalidClientId",
            "invalidClient",
            "invalidValidTo",
            "invalidUserId",
            "failedToIssueAccessToken",
            "authorizationGrantScopeMissing",
            "invalidPublicAccessTokenKey",
            "invalidPublicAccessToken",
            "publicFeatureFlagNotEnabled",
            "sshPolicyDisabled",
            "hostAuthorizationNotFound",
            "hostAuthorizationIsNotValid",
            "invalidScope",
            "globalPatUsageDisabled"
          ],
          "x-ms-enum": {
            "name": "TokenError",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "grantTypeRequired",
                "description": ""
              },
              {
                "value": "authorizationGrantRequired",
                "description": ""
              },
              {
                "value": "clientSecretRequired",
                "description": ""
              },
              {
                "value": "redirectUriRequired",
                "description": ""
              },
              {
                "value": "invalidAuthorizationGrant",
                "description": ""
              },
              {
                "value": "invalidAuthorizationScopes",
                "description": ""
              },
              {
                "value": "invalidRefreshToken",
                "description": ""
              },
              {
                "value": "authorizationNotFound",
                "description": ""
              },
              {
                "value": "authorizationGrantExpired",
                "description": ""
              },
              {
                "value": "accessAlreadyIssued",
                "description": ""
              },
              {
                "value": "invalidRedirectUri",
                "description": ""
              },
              {
                "value": "accessTokenNotFound",
                "description": ""
              },
              {
                "value": "invalidAccessToken",
                "description": ""
              },
              {
                "value": "accessTokenAlreadyRefreshed",
                "description": ""
              },
              {
                "value": "invalidClientSecret",
                "description": ""
              },
              {
                "value": "clientSecretExpired",
                "description": ""
              },
              {
                "value": "serverError",
                "description": ""
              },
              {
                "value": "accessDenied",
                "description": ""
              },
              {
                "value": "accessTokenKeyRequired",
                "description": ""
              },
              {
                "value": "invalidAccessTokenKey",
                "description": ""
              },
              {
                "value": "failedToGetAccessToken",
                "description": ""
              },
              {
                "value": "invalidClientId",
                "description": ""
              },
              {
                "value": "invalidClient",
                "description": ""
              },
              {
                "value": "invalidValidTo",
                "description": ""
              },
              {
                "value": "invalidUserId",
                "description": ""
              },
              {
                "value": "failedToIssueAccessToken",
                "description": ""
              },
              {
                "value": "authorizationGrantScopeMissing",
                "description": ""
              },
              {
                "value": "invalidPublicAccessTokenKey",
                "description": ""
              },
              {
                "value": "invalidPublicAccessToken",
                "description": ""
              },
              {
                "value": "publicFeatureFlagNotEnabled",
                "description": ""
              },
              {
                "value": "sshPolicyDisabled",
                "description": ""
              },
              {
                "value": "hostAuthorizationNotFound",
                "description": ""
              },
              {
                "value": "hostAuthorizationIsNotValid",
                "description": ""
              },
              {
                "value": "invalidScope",
                "description": ""
              },
              {
                "value": "globalPatUsageDisabled",
                "description": ""
              }
            ]
          }
        },
        "authorizationId": {
          "type": "string",
          "format": "uuid"
        },
        "errorDescription": {
          "type": "string"
        },
        "hasError": {
          "type": "boolean"
        },
        "isFirstPartyClient": {
          "type": "boolean"
        },
        "refreshToken": {
          "$ref": "#/definitions/RefreshTokenGrant"
        },
        "scope": {
          "type": "string"
        },
        "tokenType": {
          "type": "string"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Authorization": {
      "description": "",
      "type": "object",
      "properties": {
        "accessIssued": {
          "type": "string",
          "format": "date-time"
        },
        "audience": {
          "type": "string"
        },
        "authorizationId": {
          "type": "string",
          "format": "uuid"
        },
        "identityId": {
          "type": "string",
          "format": "uuid"
        },
        "isAccessUsed": {
          "type": "boolean"
        },
        "isValid": {
          "type": "boolean"
        },
        "redirectUri": {
          "type": "string"
        },
        "registrationId": {
          "type": "string",
          "format": "uuid"
        },
        "scopes": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AuthorizationDecision": {
      "description": "",
      "type": "object",
      "properties": {
        "authorization": {
          "$ref": "#/definitions/Authorization"
        },
        "authorizationError": {
          "enum": [
            "none",
            "clientIdRequired",
            "invalidClientId",
            "responseTypeRequired",
            "responseTypeNotSupported",
            "scopeRequired",
            "invalidScope",
            "redirectUriRequired",
            "insecureRedirectUri",
            "invalidRedirectUri",
            "invalidUserId",
            "invalidUserType",
            "accessDenied"
          ],
          "x-ms-enum": {
            "name": "AuthorizationError",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "clientIdRequired",
                "description": ""
              },
              {
                "value": "invalidClientId",
                "description": ""
              },
              {
                "value": "responseTypeRequired",
                "description": ""
              },
              {
                "value": "responseTypeNotSupported",
                "description": ""
              },
              {
                "value": "scopeRequired",
                "description": ""
              },
              {
                "value": "invalidScope",
                "description": ""
              },
              {
                "value": "redirectUriRequired",
                "description": ""
              },
              {
                "value": "insecureRedirectUri",
                "description": ""
              },
              {
                "value": "invalidRedirectUri",
                "description": ""
              },
              {
                "value": "invalidUserId",
                "description": ""
              },
              {
                "value": "invalidUserType",
                "description": ""
              },
              {
                "value": "accessDenied",
                "description": ""
              }
            ]
          }
        },
        "authorizationGrant": {
          "$ref": "#/definitions/AuthorizationGrant"
        },
        "hasError": {
          "type": "boolean"
        },
        "isAuthorized": {
          "type": "boolean"
        }
      }
    },
    "AuthorizationDescription": {
      "description": "",
      "type": "object",
      "properties": {
        "clientRegistration": {
          "$ref": "#/definitions/Registration"
        },
        "hasError": {
          "type": "boolean"
        },
        "initiationError": {
          "enum": [
            "none",
            "clientIdRequired",
            "invalidClientId",
            "responseTypeRequired",
            "responseTypeNotSupported",
            "scopeRequired",
            "invalidScope",
            "redirectUriRequired",
            "insecureRedirectUri",
            "invalidRedirectUri"
          ],
          "x-ms-enum": {
            "name": "InitiationError",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "clientIdRequired",
                "description": ""
              },
              {
                "value": "invalidClientId",
                "description": ""
              },
              {
                "value": "responseTypeRequired",
                "description": ""
              },
              {
                "value": "responseTypeNotSupported",
                "description": ""
              },
              {
                "value": "scopeRequired",
                "description": ""
              },
              {
                "value": "invalidScope",
                "description": ""
              },
              {
                "value": "redirectUriRequired",
                "description": ""
              },
              {
                "value": "insecureRedirectUri",
                "description": ""
              },
              {
                "value": "invalidRedirectUri",
                "description": ""
              }
            ]
          }
        },
        "scopeDescriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationScopeDescription"
          }
        }
      }
    },
    "AuthorizationDetails": {
      "description": "",
      "type": "object",
      "properties": {
        "authorization": {
          "$ref": "#/definitions/Authorization"
        },
        "clientRegistration": {
          "$ref": "#/definitions/Registration"
        },
        "scopeDescriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationScopeDescription"
          }
        }
      }
    },
    "AuthorizationGrant": {
      "description": "",
      "type": "object",
      "properties": {
        "grantType": {
          "enum": [
            "none",
            "jwtBearer",
            "refreshToken",
            "implicit",
            "clientCredentials"
          ],
          "x-ms-enum": {
            "name": "GrantType",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "jwtBearer",
                "description": ""
              },
              {
                "value": "refreshToken",
                "description": ""
              },
              {
                "value": "implicit",
                "description": ""
              },
              {
                "value": "clientCredentials",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "AuthorizationScopeDescription": {
      "description": "",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "market": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "HostAuthorization": {
      "description": "",
      "type": "object",
      "properties": {
        "hostId": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isValid": {
          "type": "boolean"
        },
        "registrationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "HostAuthorizationDecision": {
      "description": "",
      "type": "object",
      "properties": {
        "clientType": {
          "enum": [
            "confidential",
            "public",
            "mediumTrust",
            "highTrust",
            "fullTrust",
            "application"
          ],
          "x-ms-enum": {
            "name": "ClientType",
            "values": [
              {
                "value": "confidential",
                "description": "Confidential App Registrations, this is the default type for Apps created using UI."
              },
              {
                "value": "public",
                "description": "Public App Registrations"
              },
              {
                "value": "mediumTrust",
                "description": "Medium Trust App Registrations"
              },
              {
                "value": "highTrust",
                "description": "High Trust App Registrations"
              },
              {
                "value": "fullTrust",
                "description": "Full Trust App Registrations"
              },
              {
                "value": "application",
                "description": "Application based OAuth App Registrations"
              }
            ]
          }
        },
        "hasError": {
          "type": "boolean"
        },
        "hostAuthorizationError": {
          "enum": [
            "none",
            "clientIdRequired",
            "accessDenied",
            "failedToAuthorizeHost",
            "clientIdNotFound",
            "invalidClientId"
          ],
          "x-ms-enum": {
            "name": "HostAuthorizationError",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "clientIdRequired",
                "description": ""
              },
              {
                "value": "accessDenied",
                "description": ""
              },
              {
                "value": "failedToAuthorizeHost",
                "description": ""
              },
              {
                "value": "clientIdNotFound",
                "description": ""
              },
              {
                "value": "invalidClientId",
                "description": ""
              }
            ]
          }
        },
        "hostAuthorizationId": {
          "type": "string",
          "format": "uuid"
        },
        "registrationId": {
          "type": "string",
          "format": "uuid"
        },
        "registrationName": {
          "type": "string"
        },
        "setupUri": {
          "type": "string"
        }
      }
    },
    "IssuedToken": {
      "description": "",
      "type": "object",
      "properties": {
        "isAuthenticated": {
          "type": "boolean"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "JsonWebToken": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IssuedToken"
        }
      ],
      "properties": {}
    },
    "RefreshTokenGrant": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AuthorizationGrant"
        }
      ],
      "properties": {
        "jwt": {
          "$ref": "#/definitions/JsonWebToken"
        }
      }
    },
    "Registration": {
      "description": "ADO OAuth App Registration",
      "type": "object",
      "properties": {
        "accessHash": {
          "type": "string"
        },
        "alternativeSecret": {
          "description": "Alternative Secret",
          "type": "string"
        },
        "alternativeSecretValidFrom": {
          "description": "Alternative Secret valid from",
          "type": "string",
          "format": "date-time"
        },
        "alternativeSecretValidTo": {
          "description": "Alternative Secret valid to",
          "type": "string",
          "format": "date-time"
        },
        "alternativeSecretVersionId": {
          "description": "Alternative Secret Version Id of the ADO OAuth App Registration",
          "type": "string",
          "format": "uuid"
        },
        "clientType": {
          "description": "Differentiate the different registration types",
          "enum": [
            "confidential",
            "public",
            "mediumTrust",
            "highTrust",
            "fullTrust",
            "application"
          ],
          "x-ms-enum": {
            "name": "ClientType",
            "values": [
              {
                "value": "confidential",
                "description": "Confidential App Registrations, this is the default type for Apps created using UI."
              },
              {
                "value": "public",
                "description": "Public App Registrations"
              },
              {
                "value": "mediumTrust",
                "description": "Medium Trust App Registrations"
              },
              {
                "value": "highTrust",
                "description": "High Trust App Registrations"
              },
              {
                "value": "fullTrust",
                "description": "Full Trust App Registrations"
              },
              {
                "value": "application",
                "description": "Application based OAuth App Registrations"
              }
            ]
          }
        },
        "identityId": {
          "description": "Identity Id of the owner of the ADO OAuth App Registration",
          "type": "string",
          "format": "uuid"
        },
        "issuer": {
          "type": "string"
        },
        "isValid": {
          "description": "Validity of the ADO OAuth App Registration",
          "type": "boolean"
        },
        "isWellKnown": {
          "type": "boolean"
        },
        "organizationLocation": {
          "description": "URL of the organization that that is registering the app to use OAuthURL of the organization that that is registering the app to use OAuth",
          "type": "string"
        },
        "organizationName": {
          "description": "Name of the organization that that is registering the app to use OAuth",
          "type": "string"
        },
        "publicKey": {
          "description": "Raw cert data string from public key. This will be used for authenticating medium trust clients.",
          "type": "string"
        },
        "redirectUris": {
          "description": "Redirect URIs of the ADO OAuth App Registration",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "registrationDescription": {
          "description": "Description of the ADO OAuth App Registration",
          "type": "string"
        },
        "registrationId": {
          "description": "Registration Id of the ADO OAuth App Registration",
          "type": "string",
          "format": "uuid"
        },
        "registrationLocation": {
          "description": "URL of the ADO OAuth App Registration",
          "type": "string"
        },
        "registrationLogoSecureLocation": {
          "description": "URL of the ADO OAuth App Registration Logo",
          "type": "string"
        },
        "registrationName": {
          "description": "Name of the ADO OAuth App Registration",
          "type": "string"
        },
        "registrationPrivacyStatementLocation": {
          "description": "URL of the ADO OAuth App Registration Privacy Statement",
          "type": "string"
        },
        "registrationTermsOfServiceLocation": {
          "description": "URL of the ADO OAuth App Registration Terms of Service",
          "type": "string"
        },
        "responseTypes": {
          "type": "string"
        },
        "scopes": {
          "description": "Scopes that the app will have access to in ADO on behalf of the users",
          "type": "string"
        },
        "secondaryHash": {
          "type": "string"
        },
        "secret": {
          "description": "Primary Secret",
          "type": "string"
        },
        "secretValidTo": {
          "description": "Primary Secret valid to",
          "type": "string",
          "format": "date-time"
        },
        "secretVersionId": {
          "description": "Primary Secret Version Id of the ADO OAuth App Registration",
          "type": "string",
          "format": "uuid"
        },
        "setupUri": {
          "description": "URL of the ADO OAuth App Registration Setup",
          "type": "string"
        },
        "tenantIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "validFrom": {
          "description": "Primary Secret valid from",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SessionToken": {
      "description": "Represents a session token used to access Azure DevOps resources",
      "type": "object",
      "properties": {
        "accessId": {
          "type": "string",
          "format": "uuid"
        },
        "alternateToken": {
          "description": "This is populated when user requests a compact token. The alternate token value is self describing token.",
          "type": "string"
        },
        "authorizationId": {
          "type": "string",
          "format": "uuid"
        },
        "claims": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string",
          "format": "uuid"
        },
        "crossCompanyCorrelatingId": {
          "description": "Hash of the Token conforming to the C3ID standard, used for PATs.",
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "hostAuthorizationId": {
          "type": "string",
          "format": "uuid"
        },
        "isPublic": {
          "type": "boolean"
        },
        "isValid": {
          "type": "boolean"
        },
        "publicData": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "targetAccounts": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "token": {
          "description": "This is computed and not returned in Get queries",
          "type": "string"
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialize collections as a single JSON object on the wire.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "description": "The serialized item.",
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "description": "The number of serialized items.",
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.2": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.tokens": "Grants the ability to manage delegated authorization tokens to users"
      }
    },
    "entra": {
      "type": "entra",
      "flow": "authorizationCode",
      "guide": "https://learn.microsoft.com/en-us/entra/identity-platform/v2-oauth2-auth-code-flow",
      "scopes": {
        "vso.tokens": "Grants the ability to manage delegated authorization tokens to users"
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  }
}