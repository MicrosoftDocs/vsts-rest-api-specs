{
  "swagger": "2.0",
  "info": {
    "title": "Environments",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "7.2-preview"
  },
  "host": "dev.azure.com",
  "x-ms-vss-area": "environments",
  "x-ms-vss-resource-area-id": "0a833654-df2a-437e-8253-fe6b63b82035",
  "basePath": "/",
  "tags": [
    {
      "name": "Environmentaccesstoken"
    },
    {
      "name": "Environmentdeploymentrecords"
    },
    {
      "name": "Environments"
    },
    {
      "name": "Kubernetes",
      "description": "Manage Kubernetes resources in environments."
    },
    {
      "name": "Pool"
    },
    {
      "name": "Vmresource",
      "description": "Manage Virtual Machine resources in environments."
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{organization}/{project}/_apis/pipelines/environments": {
      "post": {
        "tags": [
          "Environments"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "environments",
        "x-ms-vss-method": "AddEnvironment",
        "x-ms-preview": true,
        "description": "Create an environment.",
        "operationId": "Environments_Add",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Environment to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentCreateParameter"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EnvironmentInstance"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build_execute",
              "vso.environment_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Environments"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "environments",
        "x-ms-vss-method": "GetEnvironments",
        "x-ms-preview": true,
        "description": "Get all environments.",
        "operationId": "Environments_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentInstance"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build",
              "vso.environment_manage"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/pipelines/environments/{environmentId}": {
      "delete": {
        "tags": [
          "Environments"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "environments",
        "x-ms-vss-method": "DeleteEnvironment",
        "x-ms-preview": true,
        "description": "Delete the specified environment.",
        "operationId": "Environments_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "ID of the environment.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.environment_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Environments"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "environments",
        "x-ms-vss-method": "GetEnvironmentById",
        "x-ms-preview": true,
        "description": "Get an environment by its ID.",
        "operationId": "Environments_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "ID of the environment.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "expands",
            "description": "Include these additional details in the returned objects.",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "resourceReferences"
            ],
            "x-ms-enum": {
              "name": "EnvironmentExpands",
              "values": [
                {
                  "value": "none",
                  "description": "No additional properties"
                },
                {
                  "value": "resourceReferences",
                  "description": "Include resource references referring to the environment."
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EnvironmentInstance"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build",
              "vso.environment_manage"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Environments"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "environments",
        "x-ms-vss-method": "UpdateEnvironment",
        "x-ms-preview": true,
        "description": "Update the specified environment.",
        "operationId": "Environments_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Environment data to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentUpdateParameter"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "ID of the environment.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EnvironmentInstance"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.environment_manage"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/pipelines/environments/{environmentId}/environmentdeploymentrecords": {
      "get": {
        "tags": [
          "Environmentdeploymentrecords"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "environmentdeploymentrecords",
        "x-ms-vss-method": "GetEnvironmentDeploymentExecutionRecords",
        "x-ms-preview": true,
        "description": "Get environment deployment execution history",
        "operationId": "Environmentdeploymentrecords_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentDeploymentExecutionRecord"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build",
              "vso.environment_manage"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/pipelines/environments/{environmentId}/providers/kubernetes": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "kubernetes",
        "x-ms-vss-method": "AddKubernetesResource",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Kubernetes_Add",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesResourceCreateParametersExistingEndpoint"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesResource"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build_execute",
              "vso.environment_manage"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Kubernetes"
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "kubernetes",
        "x-ms-vss-method": "UpdateKubernetesResource",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Kubernetes_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesResourcePatchParameters"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesResource"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.environment_manage"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/pipelines/environments/{environmentId}/providers/kubernetes/{resourceId}": {
      "delete": {
        "tags": [
          "Kubernetes"
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "kubernetes",
        "x-ms-vss-method": "DeleteKubernetesResource",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Kubernetes_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "resourceId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.environment_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "kubernetes",
        "x-ms-vss-method": "GetKubernetesResource",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Kubernetes_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "resourceId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesResource"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build",
              "vso.environment_manage"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/pipelines/environments/{environmentId}/providers/virtualmachines": {
      "post": {
        "tags": [
          "Vmresource"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "vmresource",
        "x-ms-vss-method": "AddVirtualMachineResource",
        "x-ms-preview": true,
        "description": "Add Virtual Machine Resource",
        "operationId": "Vmresource_Add",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Properties to create Virtual Machine Resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualMachineResourceCreateParameters"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "Id of the Environment",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VirtualMachineResource"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build_execute",
              "vso.environment_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Vmresource"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "vmresource",
        "x-ms-vss-method": "GetVirtualMachineResources",
        "x-ms-preview": true,
        "description": "Get Virtual Machine Resources",
        "operationId": "Vmresource_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "Id of the Environment",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Virtual Machine Resource",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Tags of the Virtual Machine Resource",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Gets the Virtual Machine Resources after the continuation token provided.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Number of Virtual Machine Resources to get. Default is 1000.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VirtualMachineResource"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build",
              "vso.environment_manage"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Vmresource"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "vmresource",
        "x-ms-vss-method": "ReplaceVirtualMachineResource",
        "x-ms-preview": true,
        "description": "Replace Virtual Machine Resource",
        "operationId": "Vmresource_Replace Virtual Machine Resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Properties to replace Virtual Machine Resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualMachineResource"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "Id of the Environment",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VirtualMachineResource"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.environment_manage"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Vmresource"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "vmresource",
        "x-ms-vss-method": "UpdateVirtualMachineResource",
        "x-ms-preview": true,
        "description": "Update Virtual Machine Resource",
        "operationId": "Vmresource_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Properties to update Virtual Machine Resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualMachineResource"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "Id of the Environment",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VirtualMachineResource"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.environment_manage"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/pipelines/environments/{environmentId}/providers/virtualmachines/{resourceId}": {
      "delete": {
        "tags": [
          "Vmresource"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "vmresource",
        "x-ms-vss-method": "DeleteVirtualMachineResource",
        "x-ms-preview": true,
        "description": "Delete Virtual Machine Resource",
        "operationId": "Vmresource_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "Id of the Environment",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "resourceId",
            "description": "Id of the Virtual Machine Resource",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.environment_manage"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/pipelines/environments/{environmentId}/providers/virtualmachines/pool": {
      "get": {
        "tags": [
          "Pool"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "pool",
        "x-ms-vss-method": "GetLinkedPool",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Pool_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentPoolReference"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build",
              "vso.environment_manage"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/pipelines/environments/environmentaccesstoken/{environmentId}": {
      "post": {
        "tags": [
          "Environmentaccesstoken"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "environmentaccesstoken",
        "x-ms-vss-method": "GenerateEnvironmentAccessToken",
        "x-ms-preview": true,
        "description": "GET a PAT token for creating and deleting deployment targets in an environment.",
        "operationId": "Environmentaccesstoken_Generate Environment Access Token",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "ID of the environment in which deployment targets are managed.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build_execute",
              "vso.environment_manage"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "Demand": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "EnvironmentCreateParameter": {
      "description": "Properties to create Environment.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the environment.",
          "type": "string"
        },
        "name": {
          "description": "Name of the environment.",
          "type": "string"
        }
      }
    },
    "EnvironmentDeploymentExecutionRecord": {
      "description": "EnvironmentDeploymentExecutionRecord.",
      "type": "object",
      "properties": {
        "definition": {
          "description": "Definition of the environment deployment execution owner",
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "environmentId": {
          "description": "Id of the Environment",
          "type": "integer",
          "format": "int32"
        },
        "finishTime": {
          "description": "Finish time of the environment deployment execution",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "Id of the Environment deployment execution history record",
          "type": "integer",
          "format": "int64"
        },
        "jobAttempt": {
          "description": "Job Attempt",
          "type": "integer",
          "format": "int32"
        },
        "jobName": {
          "description": "Job name",
          "type": "string"
        },
        "owner": {
          "description": "Owner of the environment deployment execution record",
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "planId": {
          "description": "Plan Id",
          "type": "string",
          "format": "uuid"
        },
        "planType": {
          "description": "Plan type of the environment deployment execution record",
          "type": "string"
        },
        "queueTime": {
          "description": "Queue time of the environment deployment execution",
          "type": "string",
          "format": "date-time"
        },
        "requestIdentifier": {
          "description": "Request identifier of the Environment deployment execution history record",
          "type": "string"
        },
        "resourceId": {
          "description": "Resource Id",
          "type": "integer",
          "format": "int32"
        },
        "result": {
          "description": "Result of the environment deployment execution",
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned",
            "manuallyQueued",
            "dependentOnManualQueue"
          ],
          "x-ms-enum": {
            "name": "TaskResult",
            "values": [
              {
                "value": "succeeded",
                "description": ""
              },
              {
                "value": "succeededWithIssues",
                "description": ""
              },
              {
                "value": "failed",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              },
              {
                "value": "skipped",
                "description": ""
              },
              {
                "value": "abandoned",
                "description": ""
              },
              {
                "value": "manuallyQueued",
                "description": ""
              },
              {
                "value": "dependentOnManualQueue",
                "description": ""
              }
            ]
          }
        },
        "scopeId": {
          "description": "Project Id",
          "type": "string",
          "format": "uuid"
        },
        "serviceOwner": {
          "description": "Service owner Id",
          "type": "string",
          "format": "uuid"
        },
        "stageAttempt": {
          "description": "Stage Attempt",
          "type": "integer",
          "format": "int32"
        },
        "stageName": {
          "description": "Stage name",
          "type": "string"
        },
        "startTime": {
          "description": "Start time of the environment deployment execution",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EnvironmentInstance": {
      "description": "Environment.",
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "Identity reference of the user who created the Environment.",
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "description": "Creation time of the Environment",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Description of the Environment.",
          "type": "string"
        },
        "id": {
          "description": "Id of the Environment",
          "type": "integer",
          "format": "int32"
        },
        "lastModifiedBy": {
          "description": "Identity reference of the user who last modified the Environment.",
          "$ref": "#/definitions/IdentityRef"
        },
        "lastModifiedOn": {
          "description": "Last modified time of the Environment",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Name of the Environment.",
          "type": "string"
        },
        "project": {
          "description": "Project information for environment.",
          "$ref": "#/definitions/ProjectReference"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentResourceReference"
          }
        }
      }
    },
    "EnvironmentReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "EnvironmentResource": {
      "description": "",
      "type": "object",
      "properties": {
        "createdBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "environmentReference": {
          "$ref": "#/definitions/EnvironmentReference"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "lastModifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "tags": {
          "description": "Tags of the Environment Resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "Environment resource type",
          "enum": [
            "undefined",
            "generic",
            "virtualMachine",
            "kubernetes"
          ],
          "x-ms-enum": {
            "name": "EnvironmentResourceType",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "generic",
                "description": "Unknown resource type"
              },
              {
                "value": "virtualMachine",
                "description": "Virtual machine resource type"
              },
              {
                "value": "kubernetes",
                "description": "Kubernetes resource type"
              }
            ]
          }
        }
      }
    },
    "EnvironmentResourceReference": {
      "description": "EnvironmentResourceReference.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the resource.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Tags of the Environment Resource Reference.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "Type of the resource.",
          "enum": [
            "undefined",
            "generic",
            "virtualMachine",
            "kubernetes"
          ],
          "x-ms-enum": {
            "name": "EnvironmentResourceType",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "generic",
                "description": "Unknown resource type"
              },
              {
                "value": "virtualMachine",
                "description": "Virtual machine resource type"
              },
              {
                "value": "kubernetes",
                "description": "Kubernetes resource type"
              }
            ]
          }
        }
      }
    },
    "EnvironmentUpdateParameter": {
      "description": "Properties to update Environment.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the environment.",
          "type": "string"
        },
        "name": {
          "description": "Name of the environment.",
          "type": "string"
        }
      }
    },
    "GraphSubjectBase": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "descriptor": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "IdentityRef": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GraphSubjectBase"
        }
      ],
      "properties": {
        "directoryAlias": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "isDeletedInOrigin": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        }
      }
    },
    "KubernetesResource": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentResource"
        }
      ],
      "properties": {
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "serviceEndpointId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "KubernetesResourceCreateParameters": {
      "description": "",
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "tags": {
          "description": "Tags of the kubernetes resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "KubernetesResourceCreateParametersExistingEndpoint": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesResourceCreateParameters"
        }
      ],
      "properties": {
        "serviceEndpointId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "KubernetesResourcePatchParameters": {
      "description": "",
      "type": "object",
      "properties": {
        "authorizationParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "providerType": {
          "description": "Provider type (CustomProvider or AzureKubernetesServiceProvider) of the resource to be updated",
          "type": "string"
        },
        "resourceId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PackageVersion": {
      "description": "",
      "type": "object",
      "properties": {
        "major": {
          "type": "integer",
          "format": "int32"
        },
        "minor": {
          "type": "integer",
          "format": "int32"
        },
        "patch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProjectReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PropertiesCollection": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "item": {
          "type": "object"
        },
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReferenceLinks": {
      "description": "",
      "type": "object",
      "properties": {
        "links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "TaskAgent": {
      "description": "A task agent.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskAgentReference"
        }
      ],
      "properties": {
        "assignedAgentCloudRequest": {
          "description": "The agent cloud request that's currently associated with this agent.",
          "$ref": "#/definitions/TaskAgentCloudRequest"
        },
        "assignedRequest": {
          "description": "The request which is currently assigned to this agent.",
          "$ref": "#/definitions/TaskAgentJobRequest"
        },
        "authorization": {
          "description": "Authorization information for this agent.",
          "$ref": "#/definitions/TaskAgentAuthorization"
        },
        "createdOn": {
          "description": "Date on which this agent was created.",
          "type": "string",
          "format": "date-time"
        },
        "lastCompletedRequest": {
          "description": "The last request which was completed by this agent.",
          "$ref": "#/definitions/TaskAgentJobRequest"
        },
        "maxParallelism": {
          "description": "Maximum job parallelism allowed for this agent.",
          "type": "integer",
          "format": "int32"
        },
        "pendingUpdate": {
          "description": "Pending update for this agent.",
          "$ref": "#/definitions/TaskAgentUpdate"
        },
        "properties": {
          "$ref": "#/definitions/PropertiesCollection"
        },
        "statusChangedOn": {
          "description": "Date on which the last connectivity status change occurred.",
          "type": "string",
          "format": "date-time"
        },
        "systemCapabilities": {
          "description": "System-defined capabilities supported by this agent's host. Warning: To set capabilities use the PUT method, PUT will completely overwrite existing capabilities.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "userCapabilities": {
          "description": "User-defined capabilities supported by this agent's host. Warning: To set capabilities use the PUT method, PUT will completely overwrite existing capabilities.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TaskAgentAuthorization": {
      "description": "Provides data necessary for authorizing the agent using OAuth 2.0 authentication flows.",
      "type": "object",
      "properties": {
        "authorizationUrl": {
          "description": "Endpoint used to obtain access tokens from the configured token service.",
          "type": "string"
        },
        "clientId": {
          "description": "Client identifier for this agent.",
          "type": "string",
          "format": "uuid"
        },
        "publicKey": {
          "description": "Public key used to verify the identity of this agent.",
          "$ref": "#/definitions/TaskAgentPublicKey"
        }
      }
    },
    "TaskAgentCloudRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/TaskAgentReference"
        },
        "agentCloudId": {
          "type": "integer",
          "format": "int32"
        },
        "agentConnectedTime": {
          "type": "string",
          "format": "date-time"
        },
        "agentData": {
          "type": "string",
          "format": "JObject"
        },
        "agentSpecification": {
          "type": "string",
          "format": "JObject"
        },
        "pool": {
          "$ref": "#/definitions/TaskAgentPoolReference"
        },
        "poolProvidersTags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "provisionedTime": {
          "type": "string",
          "format": "date-time"
        },
        "provisionRequestTime": {
          "type": "string",
          "format": "date-time"
        },
        "releaseRequestTime": {
          "type": "string",
          "format": "date-time"
        },
        "requestId": {
          "type": "string",
          "format": "uuid"
        },
        "requestVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskAgentJobRequest": {
      "description": "A job request for an agent.",
      "type": "object",
      "properties": {
        "agentSpecification": {
          "type": "string",
          "format": "JObject"
        },
        "assignTime": {
          "description": "The date/time this request was assigned.",
          "type": "string",
          "format": "date-time"
        },
        "data": {
          "description": "Additional data about the request.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "definition": {
          "description": "The pipeline definition associated with this request",
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "demands": {
          "description": "A list of demands required to fulfill this request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Demand"
          }
        },
        "finishTime": {
          "description": "The date/time this request was finished.",
          "type": "string",
          "format": "date-time"
        },
        "hostId": {
          "description": "The host which triggered this request.",
          "type": "string",
          "format": "uuid"
        },
        "jobId": {
          "description": "ID of the job resulting from this request.",
          "type": "string",
          "format": "uuid"
        },
        "jobName": {
          "description": "Name of the job resulting from this request.",
          "type": "string"
        },
        "lockedUntil": {
          "description": "The deadline for the agent to renew the lock.",
          "type": "string",
          "format": "date-time"
        },
        "matchedAgents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskAgentReference"
          }
        },
        "matchesAllAgentsInPool": {
          "type": "boolean"
        },
        "orchestrationId": {
          "type": "string"
        },
        "owner": {
          "description": "The pipeline associated with this request",
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "planGroup": {
          "type": "string"
        },
        "planId": {
          "description": "Internal ID for the orchestration plan connected with this request.",
          "type": "string",
          "format": "uuid"
        },
        "planType": {
          "description": "Internal detail representing the type of orchestration plan.",
          "type": "string"
        },
        "poolId": {
          "description": "The ID of the pool this request targets",
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "queueId": {
          "description": "The ID of the queue this request targets",
          "type": "integer",
          "format": "int32"
        },
        "queueTime": {
          "description": "The date/time this request was queued.",
          "type": "string",
          "format": "date-time"
        },
        "receiveTime": {
          "description": "The date/time this request was receieved by an agent.",
          "type": "string",
          "format": "date-time"
        },
        "requestId": {
          "description": "ID of the request.",
          "type": "integer",
          "format": "int64"
        },
        "reservedAgent": {
          "description": "The agent allocated for this request.",
          "$ref": "#/definitions/TaskAgentReference"
        },
        "result": {
          "description": "The result of this request.",
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned",
            "manuallyQueued",
            "dependentOnManualQueue"
          ],
          "x-ms-enum": {
            "name": "TaskResult",
            "values": [
              {
                "value": "succeeded",
                "description": ""
              },
              {
                "value": "succeededWithIssues",
                "description": ""
              },
              {
                "value": "failed",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              },
              {
                "value": "skipped",
                "description": ""
              },
              {
                "value": "abandoned",
                "description": ""
              },
              {
                "value": "manuallyQueued",
                "description": ""
              },
              {
                "value": "dependentOnManualQueue",
                "description": ""
              }
            ]
          }
        },
        "scopeId": {
          "description": "Scope of the pipeline; matches the project ID.",
          "type": "string",
          "format": "uuid"
        },
        "serviceOwner": {
          "description": "The service which owns this request.",
          "type": "string",
          "format": "uuid"
        },
        "statusMessage": {
          "type": "string"
        },
        "userDelayed": {
          "type": "boolean"
        }
      }
    },
    "TaskAgentPoolReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "isHosted": {
          "description": "Gets or sets a value indicating whether or not this pool is managed by the service.",
          "type": "boolean"
        },
        "isLegacy": {
          "description": "Determines whether the pool is legacy.",
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "options": {
          "description": "Additional pool settings and details",
          "enum": [
            "none",
            "elasticPool",
            "singleUseAgents",
            "preserveAgentOnJobFailure"
          ],
          "x-ms-enum": {
            "name": "TaskAgentPoolOptions",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "elasticPool",
                "description": "TaskAgentPool backed by the Elastic pool service"
              },
              {
                "value": "singleUseAgents",
                "description": "Set to true if agents are re-imaged after each TaskAgentJobRequest"
              },
              {
                "value": "preserveAgentOnJobFailure",
                "description": "Set to true if agents are held for investigation after a TaskAgentJobRequest failure"
              }
            ]
          }
        },
        "poolType": {
          "description": "Gets or sets the type of the pool",
          "enum": [
            "automation",
            "deployment"
          ],
          "x-ms-enum": {
            "name": "TaskAgentPoolType",
            "values": [
              {
                "value": "automation",
                "description": "A typical pool of task agents"
              },
              {
                "value": "deployment",
                "description": "A deployment pool"
              }
            ]
          }
        },
        "scope": {
          "type": "string",
          "format": "uuid"
        },
        "size": {
          "description": "Gets the current size of the pool.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskAgentPublicKey": {
      "description": "Represents the public key portion of an RSA asymmetric key.",
      "type": "object",
      "properties": {
        "exponent": {
          "description": "Gets or sets the exponent for the public key.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "modulus": {
          "description": "Gets or sets the modulus for the public key.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "TaskAgentReference": {
      "description": "A reference to an agent.",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "accessPoint": {
          "description": "This agent's access point.",
          "type": "string"
        },
        "enabled": {
          "description": "Whether or not this agent should run jobs.",
          "type": "boolean"
        },
        "id": {
          "description": "Identifier of the agent.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name of the agent.",
          "type": "string"
        },
        "osDescription": {
          "description": "Agent OS.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of this agent.",
          "type": "string"
        },
        "status": {
          "description": "Whether or not the agent is online.",
          "enum": [
            "offline",
            "online"
          ],
          "x-ms-enum": {
            "name": "TaskAgentStatus",
            "values": [
              {
                "value": "offline",
                "description": ""
              },
              {
                "value": "online",
                "description": ""
              }
            ]
          }
        },
        "version": {
          "description": "Agent version.",
          "type": "string"
        }
      }
    },
    "TaskAgentUpdate": {
      "description": "Details about an agent update.",
      "type": "object",
      "properties": {
        "currentState": {
          "description": "Current state of this agent update.",
          "type": "string"
        },
        "reason": {
          "description": "Reason for this update.",
          "$ref": "#/definitions/TaskAgentUpdateReason"
        },
        "requestedBy": {
          "description": "Identity which requested this update.",
          "$ref": "#/definitions/IdentityRef"
        },
        "requestTime": {
          "description": "Date on which this update was requested.",
          "type": "string",
          "format": "date-time"
        },
        "sourceVersion": {
          "description": "Source agent version of the update.",
          "$ref": "#/definitions/PackageVersion"
        },
        "targetVersion": {
          "description": "Target agent version of the update.",
          "$ref": "#/definitions/PackageVersion"
        }
      }
    },
    "TaskAgentUpdateReason": {
      "description": "",
      "type": "object",
      "properties": {
        "code": {
          "enum": [
            "manual",
            "minAgentVersionRequired",
            "downgrade"
          ],
          "x-ms-enum": {
            "name": "TaskAgentUpdateReasonType",
            "values": [
              {
                "value": "manual",
                "description": ""
              },
              {
                "value": "minAgentVersionRequired",
                "description": ""
              },
              {
                "value": "downgrade",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "TaskOrchestrationOwner": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "VirtualMachine": {
      "description": "",
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/TaskAgent"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VirtualMachineGroup": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentResource"
        }
      ],
      "properties": {
        "poolId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VirtualMachineGroupCreateParameters": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "VirtualMachineResource": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentResource"
        }
      ],
      "properties": {
        "agent": {
          "$ref": "#/definitions/TaskAgent"
        }
      }
    },
    "VirtualMachineResourceCreateParameters": {
      "description": "",
      "type": "object",
      "properties": {
        "virtualMachineResource": {
          "$ref": "#/definitions/VirtualMachineResource"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialize collections as a single JSON object on the wire.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "description": "The serialized item.",
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "description": "The number of serialized items.",
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.2": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.build_execute": "Grants the ability to access build artifacts, including build results, definitions, and requests, and the ability to queue a build, update build properties, and the ability to receive notifications about build events via service hooks.",
        "vso.environment_manage": "Provides ability to manage environment",
        "vso.build": "Grants the ability to access build artifacts, including build results, definitions, and requests, and the ability to receive notifications about build events via service hooks."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  }
}