{
  "swagger": "2.0",
  "info": {
    "title": "Work",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "7.1"
  },
  "host": "dev.azure.com",
  "x-ms-vss-area": "Work",
  "x-ms-vss-resource-area-id": "1d4f49f9-02b9-4e26-b826-2cdb6195f2a9",
  "basePath": "/",
  "tags": [
    {
      "name": "Backlogconfiguration"
    },
    {
      "name": "Backlogs"
    },
    {
      "name": "Boardcolumns"
    },
    {
      "name": "Boardparents"
    },
    {
      "name": "Boardrows"
    },
    {
      "name": "Boards"
    },
    {
      "name": "Boardusersettings"
    },
    {
      "name": "Capacities"
    },
    {
      "name": "Cardrulesettings"
    },
    {
      "name": "Cardsettings"
    },
    {
      "name": "Chartimages"
    },
    {
      "name": "Charts"
    },
    {
      "name": "Columns"
    },
    {
      "name": "Deliverytimeline"
    },
    {
      "name": "Iterationcapacities"
    },
    {
      "name": "Iterations"
    },
    {
      "name": "Plans",
      "description": "Controller for the Scaled Agile plans REST API"
    },
    {
      "name": "Processconfiguration"
    },
    {
      "name": "Rows"
    },
    {
      "name": "Taskboard Columns"
    },
    {
      "name": "Taskboard Work Items"
    },
    {
      "name": "Teamdaysoff"
    },
    {
      "name": "Teamfieldvalues"
    },
    {
      "name": "Teamsettings"
    },
    {
      "name": "Workitemsorder"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{organization}/{project}/_apis/work/boardcolumns": {
      "get": {
        "tags": [
          "Boardcolumns"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "boardcolumns",
        "x-ms-vss-method": "GetColumnSuggestedValues",
        "description": "Get available board columns in a project",
        "operationId": "Boardcolumns_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardSuggestedValue"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get available board columns in a project": {
            "$ref": "./httpExamples/boardcolumns/GET__work_boardColumns_ByProject.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/work/boardrows": {
      "get": {
        "tags": [
          "Boardrows"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "boardrows",
        "x-ms-vss-method": "GetRowSuggestedValues",
        "description": "Get available board rows in a project",
        "operationId": "Boardrows_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardSuggestedValue"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get available board rows in a project": {
            "$ref": "./httpExamples/boardrows/GET__work_boardRows_ByProject.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/work/iterations/{iterationId}/iterationcapacities": {
      "get": {
        "tags": [
          "Iterationcapacities"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "iterationcapacities",
        "x-ms-vss-method": "GetTotalIterationCapacities",
        "description": "Get an iteration's capacity for all teams in iteration",
        "operationId": "Iterationcapacities_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "ID of the iteration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IterationCapacity"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/work/plans": {
      "post": {
        "tags": [
          "Plans"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "plans",
        "x-ms-vss-method": "CreatePlan",
        "description": "Add a new plan for the team",
        "operationId": "Plans_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Plan definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePlan"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Plans"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "plans",
        "x-ms-vss-method": "GetPlans",
        "description": "Get the information for all the plans configured for the given team",
        "operationId": "Plans_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/work/plans/{id}": {
      "delete": {
        "tags": [
          "Plans"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "plans",
        "x-ms-vss-method": "DeletePlan",
        "description": "Delete the specified plan",
        "operationId": "Plans_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Identifier of the plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Plans"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "plans",
        "x-ms-vss-method": "GetPlan",
        "description": "Get the information for the specified plan",
        "operationId": "Plans_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Identifier of the plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Plans"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "plans",
        "x-ms-vss-method": "UpdatePlan",
        "description": "Update the information for the specified plan",
        "operationId": "Plans_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Plan definition to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePlan"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Identifier of the plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/work/plans/{id}/deliverytimeline": {
      "get": {
        "tags": [
          "Deliverytimeline"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "deliverytimeline",
        "x-ms-vss-method": "GetDeliveryTimelineData",
        "description": "Get Delivery View Data",
        "operationId": "Deliverytimeline_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Identifier for delivery view",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "revision",
            "description": "Revision of the plan for which you want data. If the current plan is a different revision you will get an ViewRevisionMismatchException exception. If you do not supply a revision you will get data for the latest revision.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "The start date of timeline",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "The end date of timeline",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeliveryViewData"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/work/processconfiguration": {
      "get": {
        "tags": [
          "Processconfiguration"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "processconfiguration",
        "x-ms-vss-method": "GetProcessConfiguration",
        "description": "Get process configuration",
        "operationId": "Processconfiguration_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessConfiguration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get process configuration": {
            "$ref": "./httpExamples/processconfiguration/GET__work_processconfiguration.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/backlogconfiguration": {
      "get": {
        "tags": [
          "Backlogconfiguration"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "backlogconfiguration",
        "x-ms-vss-method": "GetBacklogConfigurations",
        "description": "Gets backlog configuration for a team",
        "operationId": "Backlogconfiguration_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BacklogConfiguration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get backlog configuration for a team": {
            "$ref": "./httpExamples/backlogconfiguration/GET__work_backlogconfiguration.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/backlogs": {
      "get": {
        "tags": [
          "Backlogs"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "backlogs",
        "x-ms-vss-method": "GetBacklogs",
        "description": "List all backlog levels",
        "operationId": "Backlogs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BacklogLevelConfiguration"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get backlogs": {
            "$ref": "./httpExamples/backlogs/GET__work_backlogs.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/backlogs/{backlogId}/workItems": {
      "get": {
        "tags": [
          "Backlogs"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "backlogs",
        "x-ms-vss-method": "GetBacklogLevelWorkItems",
        "description": "Get a list of work items within a backlog level",
        "operationId": "Backlogs_Get Backlog Level Work Items",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "backlogId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BacklogLevelWorkItems"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get backlog workitems": {
            "$ref": "./httpExamples/backlogs/GET__work_backlogs_backlogItems_byBacklogId.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/backlogs/{id}": {
      "get": {
        "tags": [
          "Backlogs"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "backlogs",
        "x-ms-vss-method": "GetBacklog",
        "description": "Get a backlog level",
        "operationId": "Backlogs_Get Backlog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id of the backlog level",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BacklogLevelConfiguration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get backlog": {
            "$ref": "./httpExamples/backlogs/GET__work_backlogs_byBacklogId.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/boards": {
      "get": {
        "tags": [
          "Boards"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "boards",
        "x-ms-vss-method": "GetBoards",
        "description": "Get boards",
        "operationId": "Boards_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardReference"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/boards/{board}/boardusersettings": {
      "get": {
        "tags": [
          "Boardusersettings"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "boardusersettings",
        "x-ms-vss-method": "GetBoardUserSettings",
        "description": "Get board user settings for a board id",
        "operationId": "Boardusersettings_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Board ID or Name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardUserSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get board user settings for a boardId": {
            "$ref": "./httpExamples/boardusersettings/GET__work_boards_boardId_boardUserSettings.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Boardusersettings"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "boardusersettings",
        "x-ms-vss-method": "UpdateBoardUserSettings",
        "description": "Update board user settings for the board id\n\nWe don't want stakeholders to update board settings (currently just autorefresh). The BacklogManagement feature check validates this.",
        "operationId": "Boardusersettings_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardUserSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Update a board's user settings": {
            "$ref": "./httpExamples/boardusersettings/PATCH__work_boards_boardId_boardUserSettings.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/boards/{board}/cardrulesettings": {
      "get": {
        "tags": [
          "Cardrulesettings"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "cardrulesettings",
        "x-ms-vss-method": "GetBoardCardRuleSettings",
        "description": "Get board card Rule settings for the board id or board by name",
        "operationId": "Cardrulesettings_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Cardrulesettings"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "cardrulesettings",
        "x-ms-vss-method": "UpdateBoardCardRuleSettings",
        "description": "Update board card Rule settings for the board id or board by name",
        "operationId": "Cardrulesettings_Update Board Card Rule Settings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/boards/{board}/cardsettings": {
      "get": {
        "tags": [
          "Cardsettings"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "cardsettings",
        "x-ms-vss-method": "GetBoardCardSettings",
        "description": "Get board card settings for the board id or board by name",
        "operationId": "Cardsettings_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Cardsettings"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "cardsettings",
        "x-ms-vss-method": "UpdateBoardCardSettings",
        "description": "Update board card settings for the board id or board by name",
        "operationId": "Cardsettings_Update Board Card Settings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/boards/{board}/chartimages/{name}": {
      "get": {
        "tags": [
          "Chartimages"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "chartimages",
        "x-ms-vss-method": "GetBoardChartImage",
        "description": "Get a board chart image.",
        "operationId": "Chartimages_Get Board Chart Image",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Identifier for board, either board's backlog level name (e.g. \"Issues\") or Id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The chart name. e.g. CumulativeFlow.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "width",
            "description": "The width of the chart in pixels. Must be greater than 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "height",
            "description": "The height of the chart in pixels. Must be greater than 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "showDetails",
            "description": "Whether or not the chart should include detailed information (e.g. axis labels, titles, trend lines, etc.).",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The title of the chart. Can only be dislayed if ShowLabels is true.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "StreamContent"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/boards/{board}/charts": {
      "get": {
        "tags": [
          "Charts"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "charts",
        "x-ms-vss-method": "GetBoardCharts",
        "description": "Get board charts",
        "operationId": "Charts_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardChartReference"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/boards/{board}/charts/{name}": {
      "get": {
        "tags": [
          "Charts"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "charts",
        "x-ms-vss-method": "GetBoardChart",
        "description": "Get a board chart",
        "operationId": "Charts_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The chart name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardChart"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Charts"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "charts",
        "x-ms-vss-method": "UpdateBoardChart",
        "description": "Update a board chart",
        "operationId": "Charts_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardChart"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The chart name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardChart"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/boards/{board}/columns": {
      "get": {
        "tags": [
          "Columns"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "columns",
        "x-ms-vss-method": "GetBoardColumns",
        "description": "Get columns on a board",
        "operationId": "Columns_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Name or ID of the specific board",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardColumn"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get board columns by boardId": {
            "$ref": "./httpExamples/columns/GET__work_boards__boardId__columns.json"
          },
          "Get board columns by boardName": {
            "$ref": "./httpExamples/columns/GET__work_boards__boardName__columns.json"
          }
        }
      },
      "put": {
        "tags": [
          "Columns"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "columns",
        "x-ms-vss-method": "UpdateBoardColumns",
        "description": "Update columns on a board",
        "operationId": "Columns_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "List of board columns to update",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardColumn"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Name or ID of the specific board",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardColumn"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Update columns on a board": {
            "$ref": "./httpExamples/columns/PUT__work_boards__boardName__columns.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/boards/{board}/rows": {
      "get": {
        "tags": [
          "Rows"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "rows",
        "x-ms-vss-method": "GetBoardRows",
        "description": "Get rows on a board",
        "operationId": "Rows_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Name or ID of the specific board",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardRow"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get a kanban board's rows by boardId": {
            "$ref": "./httpExamples/rows/GET__work_boards__boardId__rows.json"
          },
          "Get a kanban board's rows by boardName": {
            "$ref": "./httpExamples/rows/GET__work_boards__boardName__rows.json"
          }
        }
      },
      "put": {
        "tags": [
          "Rows"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "rows",
        "x-ms-vss-method": "UpdateBoardRows",
        "description": "Update rows on a board",
        "operationId": "Rows_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "List of board rows to update",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardRow"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Name or ID of the specific board",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardRow"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Update rows on a board": {
            "$ref": "./httpExamples/rows/PUT__work_boards__boardName__rows.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/boards/{id}": {
      "get": {
        "tags": [
          "Boards"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "boards",
        "x-ms-vss-method": "GetBoard",
        "description": "Get board",
        "operationId": "Boards_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Board"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Boards"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "boards",
        "x-ms-vss-method": "SetBoardOptions",
        "description": "Update board options",
        "operationId": "Boards_Set Board Options",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "options to updated",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "identifier for board, either category plural name (Eg:\"Stories\") or guid",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/boards/boardparents": {
      "get": {
        "tags": [
          "Boardparents"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "boardparents",
        "x-ms-vss-method": "GetBoardMappingParentItems",
        "description": "Returns the list of parent field filter model for the given list of workitem ids",
        "operationId": "Boardparents_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "childBacklogContextCategoryRefName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workitemIds",
            "description": "",
            "required": true,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParentChildWIMap"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/iterations/{iterationId}/chartimages/{name}": {
      "get": {
        "tags": [
          "Chartimages"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "chartimages",
        "x-ms-vss-method": "GetIterationChartImage",
        "description": "Get an iteration chart image.",
        "operationId": "Chartimages_Get Iteration Chart Image",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "ID of the iteration.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The chart name. e.g. Burndown.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "width",
            "description": "The width of the chart in pixels. Must be greater than 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "height",
            "description": "The height of the chart in pixels. Must be greater than 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "showDetails",
            "description": "Whether or not the chart should include detailed information (e.g. axis labels, titles, trend lines, etc.)",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The title of the chart. Can only be dislayed if ShowLabels is true.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "StreamContent"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/iterations/{iterationId}/workitemsorder": {
      "patch": {
        "tags": [
          "Workitemsorder"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "workitemsorder",
        "x-ms-vss-method": "ReorderIterationWorkItems",
        "description": "Reorder Sprint Backlog/Taskboard Work Items",
        "operationId": "Workitemsorder_Reorder Iteration Work Items",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReorderOperation"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "The id of the iteration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReorderResult"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Reorder Iteration Work Items": {
            "$ref": "./httpExamples/workitemsorder/PATCH__work_iterations_iterationId_workitemsorder.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/iterations/chartimages/{name}": {
      "get": {
        "tags": [
          "Chartimages"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "chartimages",
        "x-ms-vss-method": "GetIterationsChartImage",
        "description": "Get an iterations chart image.",
        "operationId": "Chartimages_Get Iterations Chart Image",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The chart name. e.g. Velocity.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "iterationsNumber",
            "description": "Number of iterations the chart is for.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "width",
            "description": "The width of the chart in pixels. Must be greater than 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "height",
            "description": "The height of the chart in pixels. Must be greater than 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "showDetails",
            "description": "Whether or not the chart should include detailed information (e.g. axis labels, titles, trend lines, etc.)",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The title of the chart. Can only be dislayed if ShowLabels is true.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "StreamContent"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/taskboard/cardrulesettings": {
      "patch": {
        "tags": [
          "Cardrulesettings"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "cardrulesettings",
        "x-ms-vss-method": "UpdateTaskboardCardRuleSettings",
        "description": "Update taskboard card Rule settings",
        "operationId": "Cardrulesettings_Update Taskboard Card Rule Settings",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/taskboard/cardsettings": {
      "put": {
        "tags": [
          "Cardsettings"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "cardsettings",
        "x-ms-vss-method": "UpdateTaskboardCardSettings",
        "description": "Update taskboard card settings",
        "operationId": "Cardsettings_Update Taskboard Card Settings",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/taskboardcolumns": {
      "get": {
        "tags": [
          "Taskboard Columns"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "taskboardColumns",
        "x-ms-vss-method": "GetColumns",
        "description": "",
        "operationId": "Taskboard Columns_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskboardColumns"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Taskboard Columns"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "taskboardColumns",
        "x-ms-vss-method": "UpdateColumns",
        "description": "",
        "operationId": "Taskboard Columns_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateTaskboardColumn"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskboardColumns"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/taskboardworkitems/{iterationId}": {
      "get": {
        "tags": [
          "Taskboard Work Items"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "taskboardWorkItems",
        "x-ms-vss-method": "GetWorkItemColumns",
        "description": "",
        "operationId": "Taskboard Work Items_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskboardWorkItemColumn"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/taskboardworkitems/{iterationId}/{workItemId}": {
      "patch": {
        "tags": [
          "Taskboard Work Items"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "taskboardWorkItems",
        "x-ms-vss-method": "UpdateWorkItemColumn",
        "description": "",
        "operationId": "Taskboard Work Items_Update",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTaskboardWorkItemColumn"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "workItemId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/{team}/_apis/work/teamsettings": {
      "get": {
        "tags": [
          "Teamsettings"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "teamsettings",
        "x-ms-vss-method": "GetTeamSettings",
        "description": "Get a team's settings",
        "operationId": "Teamsettings_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSetting"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get team settings for a team": {
            "$ref": "./httpExamples/teamsettings/GET__work_teamsettings.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Teamsettings"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "teamsettings",
        "x-ms-vss-method": "UpdateTeamSettings",
        "description": "Update a team's settings",
        "operationId": "Teamsettings_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "TeamSettings changes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamSettingsPatch"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSetting"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Update team settings. Example 1": {
            "$ref": "./httpExamples/teamsettings/PATCH__work_teamsettings.json"
          },
          "Update team settings. Example 2": {
            "$ref": "./httpExamples/teamsettings/PATCH__work_teamsettings2.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations": {
      "get": {
        "tags": [
          "Iterations"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "iterations",
        "x-ms-vss-method": "GetTeamIterations",
        "description": "Get a team's iterations using timeframe filter",
        "operationId": "Iterations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$timeframe",
            "description": "A filter for which iterations are returned based on relative time. Only Current is supported currently.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamSettingsIteration"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get a team's iterations using timeframe filter": {
            "$ref": "./httpExamples/iterations/GET__work_teamsettings_iterations__timeframe-_timeframe_.json"
          }
        }
      },
      "post": {
        "tags": [
          "Iterations"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "iterations",
        "x-ms-vss-method": "PostTeamIteration",
        "description": "Add an iteration to the team",
        "operationId": "Iterations_Post Team Iteration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Iteration to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamSettingsIteration"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsIteration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Add an iteration to the team": {
            "$ref": "./httpExamples/iterations/POST__work_teamsettings_iterations.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{id}": {
      "delete": {
        "tags": [
          "Iterations"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "iterations",
        "x-ms-vss-method": "DeleteTeamIteration",
        "description": "Delete a team's iteration by iterationId",
        "operationId": "Iterations_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID of the iteration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Delete a team's iteration by iterationId": {
            "$ref": "./httpExamples/iterations/DELETE__work_teamsettings_iterations__iterationId_.json"
          }
        }
      },
      "get": {
        "tags": [
          "Iterations"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "iterations",
        "x-ms-vss-method": "GetTeamIteration",
        "description": "Get team's iteration by iterationId",
        "operationId": "Iterations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID of the iteration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsIteration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get a team's iteration by iterationId": {
            "$ref": "./httpExamples/iterations/GET__work_teamsettings_iterations__iterationId_.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/capacities": {
      "get": {
        "tags": [
          "Capacities"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "capacities",
        "x-ms-vss-method": "GetCapacitiesWithIdentityRefAndTotals",
        "description": "Get a team's capacity including total capacity and days off",
        "operationId": "Capacities_Get Capacities With Identity Ref And Totals",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "ID of the iteration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamCapacity"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Capacities"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "capacities",
        "x-ms-vss-method": "ReplaceCapacitiesWithIdentityRef",
        "description": "Replace a team's capacity",
        "operationId": "Capacities_Replace Capacities With Identity Ref",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Team capacity to replace",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamMemberCapacityIdentityRef"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "ID of the iteration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamMemberCapacityIdentityRef"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Replace a team's capacity": {
            "$ref": "./httpExamples/capacities/PUT__work_teamsettings_iterations_iterationId_capacities.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/capacities/{teamMemberId}": {
      "get": {
        "tags": [
          "Capacities"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "capacities",
        "x-ms-vss-method": "GetCapacityWithIdentityRef",
        "description": "Get a team member's capacity",
        "operationId": "Capacities_Get Capacity With Identity Ref",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "ID of the iteration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "teamMemberId",
            "description": "ID of the team member",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamMemberCapacityIdentityRef"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get a team member's capacity": {
            "$ref": "./httpExamples/capacities/GET__work_teamsettings_iterations__iterationId__capacities__teammemberId_.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Capacities"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "capacities",
        "x-ms-vss-method": "UpdateCapacityWithIdentityRef",
        "description": "Update a team member's capacity",
        "operationId": "Capacities_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated capacity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CapacityPatch"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "ID of the iteration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "teamMemberId",
            "description": "ID of the team member",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamMemberCapacityIdentityRef"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Update a team member's capacity": {
            "$ref": "./httpExamples/capacities/PATCH__work_teamsettings_iterations__iterationId__capacities__teammemberId_.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/teamdaysoff": {
      "get": {
        "tags": [
          "Teamdaysoff"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "teamdaysoff",
        "x-ms-vss-method": "GetTeamDaysOff",
        "description": "Get team's days off for an iteration",
        "operationId": "Teamdaysoff_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "ID of the iteration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsDaysOff"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get team's days off for an iteration": {
            "$ref": "./httpExamples/teamdaysoff/GET__work_teamsettings_iterations__iterationId__teamdaysoff.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Teamdaysoff"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "teamdaysoff",
        "x-ms-vss-method": "UpdateTeamDaysOff",
        "description": "Set a team's days off for an iteration",
        "operationId": "Teamdaysoff_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Team's days off patch containing a list of start and end dates",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamSettingsDaysOffPatch"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "ID of the iteration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsDaysOff"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Set a team's days off for an iteration. Example 1": {
            "$ref": "./httpExamples/teamdaysoff/PATCH__work_teamsettings_iterations__iterationId__teamdaysoff.json"
          },
          "Set a team's days off for an iteration. Example 2": {
            "$ref": "./httpExamples/teamdaysoff/PATCH__work_teamsettings_iterations__iterationId__teamdaysoff2.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/workitems": {
      "get": {
        "tags": [
          "Iterations"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "workitems",
        "x-ms-vss-method": "GetIterationWorkItems",
        "description": "Get work items for iteration",
        "operationId": "Iterations_Get Iteration Work Items",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "ID of the iteration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IterationWorkItems"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get workitems": {
            "$ref": "./httpExamples/workitems/GET__work_teamsettings_iterations__iterationId__workitems.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/teamsettings/teamfieldvalues": {
      "get": {
        "tags": [
          "Teamfieldvalues"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "teamfieldvalues",
        "x-ms-vss-method": "GetTeamFieldValues",
        "description": "Get a collection of team field values",
        "operationId": "Teamfieldvalues_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamFieldValues"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get team field values": {
            "$ref": "./httpExamples/teamfieldvalues/GET__work_teamsettings_teamfieldvalues.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Teamfieldvalues"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "teamfieldvalues",
        "x-ms-vss-method": "UpdateTeamFieldValues",
        "description": "Update team field values",
        "operationId": "Teamfieldvalues_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamFieldValuesPatch"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamFieldValues"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Update team field values. Example 1": {
            "$ref": "./httpExamples/teamfieldvalues/PATCH__work_teamsettings_teamfieldvalues.json"
          },
          "Update team field values. Example 2": {
            "$ref": "./httpExamples/teamfieldvalues/PATCH__work_teamsettings_teamfieldvalues2.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/work/workitemsorder": {
      "patch": {
        "tags": [
          "Workitemsorder"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "workitemsorder",
        "x-ms-vss-method": "ReorderBacklogWorkItems",
        "description": "Reorder Product Backlog/Boards Work Items",
        "operationId": "Workitemsorder_Reorder Backlog Work Items",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReorderOperation"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReorderResult"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Reorder Backlog Work Items": {
            "$ref": "./httpExamples/workitemsorder/PATCH__work_workitemsorder.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Activity": {
      "description": "",
      "type": "object",
      "properties": {
        "capacityPerDay": {
          "type": "number",
          "format": "float"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "attribute": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      ],
      "properties": {}
    },
    "BacklogColumn": {
      "description": "",
      "type": "object",
      "properties": {
        "columnFieldReference": {
          "$ref": "#/definitions/WorkItemFieldReference"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BacklogConfiguration": {
      "description": "",
      "type": "object",
      "properties": {
        "backlogFields": {
          "description": "Behavior/type field mapping",
          "$ref": "#/definitions/BacklogFields"
        },
        "bugsBehavior": {
          "description": "Bugs behavior",
          "enum": [
            "off",
            "asRequirements",
            "asTasks"
          ],
          "x-ms-enum": {
            "name": "BugsBehavior",
            "values": [
              {
                "value": "off",
                "description": ""
              },
              {
                "value": "asRequirements",
                "description": ""
              },
              {
                "value": "asTasks",
                "description": ""
              }
            ]
          }
        },
        "hiddenBacklogs": {
          "description": "Hidden Backlog",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isBugsBehaviorConfigured": {
          "description": "Is BugsBehavior Configured in the process",
          "type": "boolean"
        },
        "portfolioBacklogs": {
          "description": "Portfolio backlog descriptors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BacklogLevelConfiguration"
          }
        },
        "requirementBacklog": {
          "description": "Requirement backlog",
          "$ref": "#/definitions/BacklogLevelConfiguration"
        },
        "taskBacklog": {
          "description": "Task backlog",
          "$ref": "#/definitions/BacklogLevelConfiguration"
        },
        "url": {
          "type": "string"
        },
        "workItemTypeMappedStates": {
          "description": "Mapped states for work item types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeStateInfo"
          }
        }
      }
    },
    "BacklogFields": {
      "description": "",
      "type": "object",
      "properties": {
        "typeFields": {
          "description": "Field Type (e.g. Order, Activity) to Field Reference Name map",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BacklogLevel": {
      "description": "Contract representing a backlog level",
      "type": "object",
      "properties": {
        "categoryReferenceName": {
          "description": "Reference name of the corresponding WIT category",
          "type": "string"
        },
        "pluralName": {
          "description": "Plural name for the backlog level",
          "type": "string"
        },
        "workItemStates": {
          "description": "Collection of work item states that are included in the plan. The server will filter to only these work item types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workItemTypes": {
          "description": "Collection of valid workitem type names for the given backlog level",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BacklogLevelConfiguration": {
      "description": "",
      "type": "object",
      "properties": {
        "addPanelFields": {
          "description": "List of fields to include in Add Panel",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemFieldReference"
          }
        },
        "color": {
          "description": "Color for the backlog level",
          "type": "string"
        },
        "columnFields": {
          "description": "Default list of columns for the backlog",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BacklogColumn"
          }
        },
        "defaultWorkItemType": {
          "description": "Default Work Item Type for the backlog",
          "$ref": "#/definitions/WorkItemTypeReference"
        },
        "id": {
          "description": "Backlog Id (for Legacy Backlog Level from process config it can be categoryref name)",
          "type": "string"
        },
        "isHidden": {
          "description": "Indicates whether the backlog level is hidden",
          "type": "boolean"
        },
        "name": {
          "description": "Backlog Name",
          "type": "string"
        },
        "rank": {
          "description": "Backlog Rank (Taskbacklog is 0)",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "The type of this backlog level",
          "enum": [
            "portfolio",
            "requirement",
            "task"
          ],
          "x-ms-enum": {
            "name": "BacklogType",
            "values": [
              {
                "value": "portfolio",
                "description": "Portfolio backlog level"
              },
              {
                "value": "requirement",
                "description": "Requirement backlog level"
              },
              {
                "value": "task",
                "description": "Task backlog level"
              }
            ]
          }
        },
        "workItemCountLimit": {
          "description": "Max number of work items to show in the given backlog",
          "type": "integer",
          "format": "int32"
        },
        "workItemTypes": {
          "description": "Work Item types participating in this backlog as known by the project/Process, can be overridden by team settings for bugs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeReference"
          }
        }
      }
    },
    "BacklogLevelWorkItems": {
      "description": "Represents work items in a backlog level",
      "type": "object",
      "properties": {
        "workItems": {
          "description": "A list of work items within a backlog level",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemLink"
          }
        }
      }
    },
    "Board": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BoardReference"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "allowedMappings": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "canEdit": {
          "type": "boolean"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoardColumn"
          }
        },
        "fields": {
          "$ref": "#/definitions/BoardFields"
        },
        "isValid": {
          "type": "boolean"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoardRow"
          }
        }
      }
    },
    "BoardBadge": {
      "description": "Represents a board badge.",
      "type": "object",
      "properties": {
        "boardId": {
          "description": "The ID of the board represented by this badge.",
          "type": "string",
          "format": "uuid"
        },
        "imageUrl": {
          "description": "A link to the SVG resource.",
          "type": "string"
        }
      }
    },
    "BoardCardRuleSettings": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "rules": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Rule"
            }
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "BoardCardSettings": {
      "description": "",
      "type": "object",
      "properties": {
        "cards": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/FieldSetting"
            }
          }
        }
      }
    },
    "BoardChart": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BoardChartReference"
        }
      ],
      "properties": {
        "_links": {
          "description": "The links for the resource",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "settings": {
          "description": "The settings for the resource",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "BoardChartReference": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "url": {
          "description": "Full http link to the resource",
          "type": "string"
        }
      }
    },
    "BoardColumn": {
      "description": "",
      "type": "object",
      "properties": {
        "columnType": {
          "enum": [
            "incoming",
            "inProgress",
            "outgoing"
          ],
          "x-ms-enum": {
            "name": "BoardColumnType",
            "values": [
              {
                "value": "incoming",
                "description": ""
              },
              {
                "value": "inProgress",
                "description": ""
              },
              {
                "value": "outgoing",
                "description": ""
              }
            ]
          }
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isSplit": {
          "type": "boolean"
        },
        "itemLimit": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "stateMappings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BoardFields": {
      "description": "",
      "type": "object",
      "properties": {
        "columnField": {
          "$ref": "#/definitions/FieldReference"
        },
        "doneField": {
          "$ref": "#/definitions/FieldReference"
        },
        "rowField": {
          "$ref": "#/definitions/FieldReference"
        }
      }
    },
    "BoardReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the resource",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "url": {
          "description": "Full http link to the resource",
          "type": "string"
        }
      }
    },
    "BoardRow": {
      "description": "",
      "type": "object",
      "properties": {
        "color": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "BoardSuggestedValue": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "BoardUserSettings": {
      "description": "",
      "type": "object",
      "properties": {
        "autoRefreshState": {
          "type": "boolean"
        }
      }
    },
    "CapacityContractBase": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "activities": {
          "description": "Collection of capacities associated with the team member",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        },
        "daysOff": {
          "description": "The days off associated with the team member",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateRange"
          }
        }
      }
    },
    "CapacityPatch": {
      "description": "Expected data from PATCH",
      "type": "object",
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        },
        "daysOff": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateRange"
          }
        }
      }
    },
    "CardFieldSettings": {
      "description": "Card settings, such as fields and rules",
      "type": "object",
      "properties": {
        "additionalFields": {
          "description": "A collection of field information of additional fields on cards. The index in the collection signifies the order of the field among the additional fields. Currently unused. Should be used with User Story 691539: Card setting: additional fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldInfo"
          }
        },
        "assignedToDisplayFormat": {
          "description": "Display format for the assigned to field",
          "enum": [
            "avatarOnly",
            "fullName",
            "avatarAndFullName"
          ],
          "x-ms-enum": {
            "name": "IdentityDisplayFormat",
            "values": [
              {
                "value": "avatarOnly",
                "description": "Display avatar only"
              },
              {
                "value": "fullName",
                "description": "Display Full name only"
              },
              {
                "value": "avatarAndFullName",
                "description": "Display Avatar and Full name"
              }
            ]
          }
        },
        "coreFields": {
          "description": "A collection of field information of rendered core fields on cards.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldInfo"
          }
        },
        "showAssignedTo": {
          "description": "Flag indicating whether to show assigned to field on cards. When true, AssignedToDisplayFormat will determine how the field will be displayed",
          "type": "boolean"
        },
        "showChildRollup": {
          "description": "Flag indicating whether to show child rollup on cards",
          "type": "boolean"
        },
        "showEmptyFields": {
          "description": "Flag indicating whether to show empty fields on cards",
          "type": "boolean"
        },
        "showId": {
          "description": "Flag indicating whether to show ID on cards",
          "type": "boolean"
        },
        "showParent": {
          "description": "Flag indicating whether to show parent field on cards",
          "type": "boolean"
        },
        "showState": {
          "description": "Flag indicating whether to show state field on cards",
          "type": "boolean"
        },
        "showTags": {
          "description": "Flag indicating whether to show tags on cards",
          "type": "boolean"
        }
      }
    },
    "CardSettings": {
      "description": "Card settings, such as fields and rules",
      "type": "object",
      "properties": {
        "fields": {
          "description": "A collection of settings related to rendering of fields on cards",
          "$ref": "#/definitions/CardFieldSettings"
        }
      }
    },
    "CategoryConfiguration": {
      "description": "Details about a given backlog category",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "referenceName": {
          "description": "Category Reference Name",
          "type": "string"
        },
        "workItemTypes": {
          "description": "Work item types for the backlog category",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeReference"
          }
        }
      }
    },
    "CreatePlan": {
      "description": "",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the plan",
          "type": "string"
        },
        "name": {
          "description": "Name of the plan to create.",
          "type": "string"
        },
        "properties": {
          "description": "Plan properties.",
          "type": "object"
        },
        "type": {
          "description": "Type of plan to create.",
          "enum": [
            "deliveryTimelineView"
          ],
          "x-ms-enum": {
            "name": "PlanType",
            "values": [
              {
                "value": "deliveryTimelineView",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "DateRange": {
      "description": "",
      "type": "object",
      "properties": {
        "end": {
          "description": "End of the date range.",
          "type": "string",
          "format": "date-time"
        },
        "start": {
          "description": "Start of the date range.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DeliveryViewData": {
      "description": "Data contract for Data of Delivery View",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PlanViewData"
        }
      ],
      "properties": {
        "childIdToParentIdMap": {
          "description": "Work item child id to parent id map",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "criteriaStatus": {
          "description": "Filter criteria status of the timeline",
          "$ref": "#/definitions/TimelineCriteriaStatus"
        },
        "endDate": {
          "description": "The end date of the delivery view data",
          "type": "string",
          "format": "date-time"
        },
        "maxExpandedTeams": {
          "description": "Max number of teams that can be configured for a delivery plan",
          "type": "integer",
          "format": "int32"
        },
        "parentItemMaps": {
          "description": "Mapping between parent id, title and all the child work item ids",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParentChildWIMap"
          }
        },
        "startDate": {
          "description": "The start date for the delivery view data",
          "type": "string",
          "format": "date-time"
        },
        "teams": {
          "description": "All the team data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimelineTeamData"
          }
        },
        "workItemDependencies": {
          "description": "List of all work item ids that have a dependency but not a violation",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "workItemViolations": {
          "description": "List of all work item ids that have a violation",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "DeliveryViewPropertyCollection": {
      "description": "Collection of properties, specific to the DeliveryTimelineView",
      "type": "object",
      "properties": {
        "cardSettings": {
          "description": "Card settings",
          "$ref": "#/definitions/CardSettings"
        },
        "criteria": {
          "description": "Field criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterClause"
          }
        },
        "markers": {
          "description": "Markers. Will be missing/null if there are no markers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Marker"
          }
        },
        "styleSettings": {
          "description": "Card style settings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          }
        },
        "tagStyleSettings": {
          "description": "tag style settings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          }
        },
        "teamBacklogMappings": {
          "description": "Team backlog mappings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamBacklogMapping"
          }
        }
      }
    },
    "FieldInfo": {
      "description": "Object bag storing the set of permissions relevant to this plan",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The additional field display name",
          "type": "string"
        },
        "fieldType": {
          "description": "The additional field type",
          "enum": [
            "string",
            "plainText",
            "integer",
            "dateTime",
            "treePath",
            "boolean",
            "double"
          ],
          "x-ms-enum": {
            "name": "FieldType",
            "values": [
              {
                "value": "string",
                "description": ""
              },
              {
                "value": "plainText",
                "description": ""
              },
              {
                "value": "integer",
                "description": ""
              },
              {
                "value": "dateTime",
                "description": ""
              },
              {
                "value": "treePath",
                "description": ""
              },
              {
                "value": "boolean",
                "description": ""
              },
              {
                "value": "double",
                "description": ""
              }
            ]
          }
        },
        "isIdentity": {
          "description": "Indicates if the field definition is for an identity field.",
          "type": "boolean"
        },
        "referenceName": {
          "description": "The additional field reference name",
          "type": "string"
        }
      }
    },
    "FieldReference": {
      "description": "An abstracted reference to a field",
      "type": "object",
      "properties": {
        "referenceName": {
          "description": "fieldRefName for the field",
          "type": "string"
        },
        "url": {
          "description": "Full http link to more information about the field",
          "type": "string"
        }
      }
    },
    "FieldSetting": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      ],
      "properties": {}
    },
    "FilterClause": {
      "description": "",
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "logicalOperator": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "FilterGroup": {
      "description": "",
      "type": "object",
      "properties": {
        "end": {
          "type": "integer",
          "format": "int32"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GraphSubjectBase": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "description": "This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional relationships or more detailed information about this graph subject.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "descriptor": {
          "description": "The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations.",
          "type": "string"
        },
        "displayName": {
          "description": "This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.",
          "type": "string"
        },
        "url": {
          "description": "This url is the full route to the source resource of this graph subject.",
          "type": "string"
        }
      }
    },
    "IdentityRef": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GraphSubjectBase"
        }
      ],
      "properties": {
        "directoryAlias": {
          "description": "Deprecated - Can be retrieved by querying the Graph user referenced in the \"self\" entry of the IdentityRef \"_links\" dictionary",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "description": "Deprecated - Available in the \"avatar\" entry of the IdentityRef \"_links\" dictionary",
          "type": "string"
        },
        "inactive": {
          "description": "Deprecated - Can be retrieved by querying the Graph membership state referenced in the \"membershipState\" entry of the GraphUser \"_links\" dictionary",
          "type": "boolean"
        },
        "isAadIdentity": {
          "description": "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsAadUserType/Descriptor.IsAadGroupType)",
          "type": "boolean"
        },
        "isContainer": {
          "description": "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsGroupType)",
          "type": "boolean"
        },
        "isDeletedInOrigin": {
          "type": "boolean"
        },
        "profileUrl": {
          "description": "Deprecated - not in use in most preexisting implementations of ToIdentityRef",
          "type": "string"
        },
        "uniqueName": {
          "description": "Deprecated - use Domain+PrincipalName instead",
          "type": "string"
        }
      }
    },
    "ITaskboardColumnMapping": {
      "description": "",
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "workItemType": {
          "type": "string"
        }
      }
    },
    "IterationCapacity": {
      "description": "Capacity and teams for all teams in an iteration",
      "type": "object",
      "properties": {
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamCapacityTotals"
          }
        },
        "totalIterationCapacityPerDay": {
          "type": "number",
          "format": "double"
        },
        "totalIterationDaysOff": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "IterationWorkItems": {
      "description": "Represents work items in an iteration backlog",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "workItemRelations": {
          "description": "Work item relations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemLink"
          }
        }
      }
    },
    "Link": {
      "description": "Link description.",
      "type": "object",
      "properties": {
        "attributes": {
          "description": "Collection of link attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "rel": {
          "description": "Relation type.",
          "type": "string"
        },
        "url": {
          "description": "Link url.",
          "type": "string"
        }
      }
    },
    "Marker": {
      "description": "Client serialization contract for Delivery Timeline Markers.",
      "type": "object",
      "properties": {
        "color": {
          "description": "Color associated with the marker.",
          "type": "string"
        },
        "date": {
          "description": "Where the marker should be displayed on the timeline.",
          "type": "string",
          "format": "date-time"
        },
        "label": {
          "description": "Label/title for the marker.",
          "type": "string"
        }
      }
    },
    "Member": {
      "description": "",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "imageUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ParentChildWIMap": {
      "description": "",
      "type": "object",
      "properties": {
        "childWorkItemIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "workItemTypeName": {
          "type": "string"
        }
      }
    },
    "Plan": {
      "description": "Data contract for the plan definition",
      "type": "object",
      "properties": {
        "createdByIdentity": {
          "description": "Identity that created this plan. Defaults to null for records before upgrading to ScaledAgileViewComponent4.",
          "$ref": "#/definitions/IdentityRef"
        },
        "createdDate": {
          "description": "Date when the plan was created",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Description of the plan",
          "type": "string"
        },
        "id": {
          "description": "Id of the plan",
          "type": "string",
          "format": "uuid"
        },
        "lastAccessed": {
          "description": "Date when the plan was last accessed. Default is null.",
          "type": "string",
          "format": "date-time"
        },
        "modifiedByIdentity": {
          "description": "Identity that last modified this plan. Defaults to null for records before upgrading to ScaledAgileViewComponent4.",
          "$ref": "#/definitions/IdentityRef"
        },
        "modifiedDate": {
          "description": "Date when the plan was last modified. Default to CreatedDate when the plan is first created.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Name of the plan",
          "type": "string"
        },
        "properties": {
          "description": "The PlanPropertyCollection instance associated with the plan. These are dependent on the type of the plan. For example, DeliveryTimelineView, it would be of type DeliveryViewPropertyCollection.",
          "type": "object"
        },
        "revision": {
          "description": "Revision of the plan. Used to safeguard users from overwriting each other's changes.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Type of the plan",
          "enum": [
            "deliveryTimelineView"
          ],
          "x-ms-enum": {
            "name": "PlanType",
            "values": [
              {
                "value": "deliveryTimelineView",
                "description": ""
              }
            ]
          }
        },
        "url": {
          "description": "The resource url to locate the plan via rest api",
          "type": "string"
        },
        "userPermissions": {
          "description": "Bit flag indicating set of permissions a user has to the plan.",
          "enum": [
            "none",
            "view",
            "edit",
            "delete",
            "manage",
            "allPermissions"
          ],
          "x-ms-enum": {
            "name": "PlanUserPermissions",
            "values": [
              {
                "value": "none",
                "description": "None"
              },
              {
                "value": "view",
                "description": "Permission to view this plan."
              },
              {
                "value": "edit",
                "description": "Permission to update this plan."
              },
              {
                "value": "delete",
                "description": "Permission to delete this plan."
              },
              {
                "value": "manage",
                "description": "Permission to manage this plan."
              },
              {
                "value": "allPermissions",
                "description": "Full control permission for this plan."
              }
            ]
          }
        }
      }
    },
    "PlanMetadata": {
      "description": "Metadata about a plan definition that is stored in favorites service",
      "type": "object",
      "properties": {
        "createdByIdentity": {
          "description": "Identity of the creator of the plan",
          "$ref": "#/definitions/IdentityRef"
        },
        "description": {
          "description": "Description of plan",
          "type": "string"
        },
        "modifiedDate": {
          "description": "Last modified date of the plan",
          "type": "string",
          "format": "date-time"
        },
        "userPermissions": {
          "description": "Bit flag indicating set of permissions a user has to the plan.",
          "enum": [
            "none",
            "view",
            "edit",
            "delete",
            "manage",
            "allPermissions"
          ],
          "x-ms-enum": {
            "name": "PlanUserPermissions",
            "values": [
              {
                "value": "none",
                "description": "None"
              },
              {
                "value": "view",
                "description": "Permission to view this plan."
              },
              {
                "value": "edit",
                "description": "Permission to update this plan."
              },
              {
                "value": "delete",
                "description": "Permission to delete this plan."
              },
              {
                "value": "manage",
                "description": "Permission to manage this plan."
              },
              {
                "value": "allPermissions",
                "description": "Full control permission for this plan."
              }
            ]
          }
        }
      }
    },
    "PlanViewData": {
      "description": "Base class for plan view data contracts. Anything common goes here.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PredefinedQuery": {
      "description": "Represents a single pre-defined query.",
      "type": "object",
      "properties": {
        "hasMore": {
          "description": "Whether or not the query returned the complete set of data or if the data was truncated.",
          "type": "boolean"
        },
        "id": {
          "description": "Id of the query",
          "type": "string"
        },
        "name": {
          "description": "Localized name of the query",
          "type": "string"
        },
        "results": {
          "description": "The results of the query.  This will be a set of WorkItem objects with only the 'id' set.  The client is responsible for paging in the data as needed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItem"
          }
        },
        "url": {
          "description": "REST API Url to use to retrieve results for this query",
          "type": "string"
        },
        "webUrl": {
          "description": "Url to use to display a page in the browser with the results of this query",
          "type": "string"
        }
      }
    },
    "ProcessConfiguration": {
      "description": "Process Configurations for the project",
      "type": "object",
      "properties": {
        "bugWorkItems": {
          "description": "Details about bug work items",
          "$ref": "#/definitions/CategoryConfiguration"
        },
        "portfolioBacklogs": {
          "description": "Details about portfolio backlogs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryConfiguration"
          }
        },
        "requirementBacklog": {
          "description": "Details of requirement backlog",
          "$ref": "#/definitions/CategoryConfiguration"
        },
        "taskBacklog": {
          "description": "Details of task backlog",
          "$ref": "#/definitions/CategoryConfiguration"
        },
        "typeFields": {
          "description": "Type fields for the process configuration",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/WorkItemFieldReference"
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ReorderOperation": {
      "description": "Represents a reorder request for one or more work items.",
      "type": "object",
      "properties": {
        "ids": {
          "description": "IDs of the work items to be reordered.  Must be valid WorkItem Ids.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "iterationPath": {
          "description": "IterationPath for reorder operation. This is only used when we reorder from the Iteration Backlog",
          "type": "string"
        },
        "nextId": {
          "description": "ID of the work item that should be after the reordered items. Can use 0 to specify the end of the list.",
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "description": "Parent ID for all of the work items involved in this operation. Can use 0 to indicate the items don't have a parent.",
          "type": "integer",
          "format": "int32"
        },
        "previousId": {
          "description": "ID of the work item that should be before the reordered items. Can use 0 to specify the beginning of the list.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReorderResult": {
      "description": "Represents a reorder result for a work item.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the work item that was reordered.",
          "type": "integer",
          "format": "int32"
        },
        "order": {
          "description": "The updated order value of the work item that was reordered.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "Rule": {
      "description": "",
      "type": "object",
      "properties": {
        "clauses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterClause"
          }
        },
        "filter": {
          "type": "string"
        },
        "isEnabled": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/attribute"
        }
      }
    },
    "TaskboardColumn": {
      "description": "Represents the taskbord column",
      "type": "object",
      "properties": {
        "id": {
          "description": "Column ID",
          "type": "string",
          "format": "uuid"
        },
        "mappings": {
          "description": "Work item type states mapped to this column to support auto state update when column is updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ITaskboardColumnMapping"
          }
        },
        "name": {
          "description": "Column name",
          "type": "string"
        },
        "order": {
          "description": "Column position relative to other columns in the same board",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskboardColumnMapping": {
      "description": "Represents the state to column mapping per work item type This allows auto state update when the column changes",
      "type": "object",
      "properties": {
        "state": {
          "description": "State of the work item type mapped to the column",
          "type": "string"
        },
        "workItemType": {
          "description": "Work Item Type name who's state is mapped to the column",
          "type": "string"
        }
      }
    },
    "TaskboardColumns": {
      "description": "",
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskboardColumn"
          }
        },
        "isCustomized": {
          "description": "Are the columns cutomized for this team",
          "type": "boolean"
        },
        "isValid": {
          "description": "Specifies if the referenced WIT and State is valid",
          "type": "boolean"
        },
        "validationMesssage": {
          "description": "Details of validation failure if the state to column mapping is invalid",
          "type": "string"
        }
      }
    },
    "TaskboardWorkItemColumn": {
      "description": "Column value of a work item in the taskboard",
      "type": "object",
      "properties": {
        "column": {
          "description": "Work item column value in the taskboard",
          "type": "string"
        },
        "columnId": {
          "description": "Work item column id in the taskboard",
          "type": "string",
          "format": "uuid"
        },
        "state": {
          "description": "Work Item state value",
          "type": "string"
        },
        "workItemId": {
          "description": "Work item id",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TeamBacklogMapping": {
      "description": "Mapping of teams to the corresponding work item category",
      "type": "object",
      "properties": {
        "categoryReferenceName": {
          "type": "string"
        },
        "teamId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TeamCapacity": {
      "description": "Represents team member capacity with totals aggregated",
      "type": "object",
      "properties": {
        "teamMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamMemberCapacityIdentityRef"
          }
        },
        "totalCapacityPerDay": {
          "type": "number",
          "format": "double"
        },
        "totalDaysOff": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TeamCapacityTotals": {
      "description": "Team information with total capacity and days off",
      "type": "object",
      "properties": {
        "teamCapacityPerDay": {
          "type": "number",
          "format": "double"
        },
        "teamId": {
          "type": "string",
          "format": "uuid"
        },
        "teamTotalDaysOff": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TeamContext": {
      "description": "The Team Context for an operation.",
      "type": "object",
      "properties": {
        "project": {
          "description": "The team project Id or name.  Ignored if ProjectId is set.",
          "type": "string"
        },
        "projectId": {
          "description": "The Team Project ID.  Required if Project is not set.",
          "type": "string",
          "format": "uuid"
        },
        "team": {
          "description": "The Team Id or name.  Ignored if TeamId is set.",
          "type": "string"
        },
        "teamId": {
          "description": "The Team Id",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TeamFieldValue": {
      "description": "Represents a single TeamFieldValue",
      "type": "object",
      "properties": {
        "includeChildren": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "TeamFieldValues": {
      "description": "Essentially a collection of team field values",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "defaultValue": {
          "description": "The default team field value",
          "type": "string"
        },
        "field": {
          "description": "Shallow ref to the field being used as a team field",
          "$ref": "#/definitions/FieldReference"
        },
        "values": {
          "description": "Collection of all valid team field values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamFieldValue"
          }
        }
      }
    },
    "TeamFieldValuesPatch": {
      "description": "Expected data from PATCH",
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamFieldValue"
          }
        }
      }
    },
    "TeamIterationAttributes": {
      "description": "",
      "type": "object",
      "properties": {
        "finishDate": {
          "description": "Finish date of the iteration. Date-only, correct unadjusted at midnight in UTC.",
          "type": "string",
          "format": "date-time"
        },
        "startDate": {
          "description": "Start date of the iteration. Date-only, correct unadjusted at midnight in UTC.",
          "type": "string",
          "format": "date-time"
        },
        "timeFrame": {
          "description": "Time frame of the iteration, such as past, current or future.",
          "enum": [
            "past",
            "current",
            "future"
          ],
          "x-ms-enum": {
            "name": "TimeFrame",
            "values": [
              {
                "value": "past",
                "description": ""
              },
              {
                "value": "current",
                "description": ""
              },
              {
                "value": "future",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "TeamMemberCapacity": {
      "description": "Represents capacity for a specific team member",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CapacityContractBase"
        }
      ],
      "properties": {
        "teamMember": {
          "description": "Shallow Ref to the associated team member",
          "$ref": "#/definitions/Member"
        }
      }
    },
    "TeamMemberCapacityIdentityRef": {
      "description": "Represents capacity for a specific team member",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CapacityContractBase"
        }
      ],
      "properties": {
        "teamMember": {
          "description": "Identity ref of the associated team member",
          "$ref": "#/definitions/IdentityRef"
        }
      }
    },
    "TeamSetting": {
      "description": "Data contract for TeamSettings",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "backlogIteration": {
          "description": "Backlog Iteration",
          "$ref": "#/definitions/TeamSettingsIteration"
        },
        "backlogVisibilities": {
          "description": "Information about categories that are visible on the backlog.",
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "bugsBehavior": {
          "description": "BugsBehavior (Off, AsTasks, AsRequirements, ...)",
          "enum": [
            "off",
            "asRequirements",
            "asTasks"
          ],
          "x-ms-enum": {
            "name": "BugsBehavior",
            "values": [
              {
                "value": "off",
                "description": ""
              },
              {
                "value": "asRequirements",
                "description": ""
              },
              {
                "value": "asTasks",
                "description": ""
              }
            ]
          }
        },
        "defaultIteration": {
          "description": "Default Iteration, the iteration used when creating a new work item on the queries page.",
          "$ref": "#/definitions/TeamSettingsIteration"
        },
        "defaultIterationMacro": {
          "description": "Default Iteration macro (if any)",
          "type": "string"
        },
        "workingDays": {
          "description": "Days that the team is working",
          "type": "array",
          "items": {
            "enum": [
              "sunday",
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday"
            ],
            "x-ms-enum": {
              "name": "DayOfWeek",
              "values": [
                {
                  "value": "sunday",
                  "description": ""
                },
                {
                  "value": "monday",
                  "description": ""
                },
                {
                  "value": "tuesday",
                  "description": ""
                },
                {
                  "value": "wednesday",
                  "description": ""
                },
                {
                  "value": "thursday",
                  "description": ""
                },
                {
                  "value": "friday",
                  "description": ""
                },
                {
                  "value": "saturday",
                  "description": ""
                }
              ]
            }
          }
        }
      }
    },
    "TeamSettingsDataContractBase": {
      "description": "Base class for TeamSettings data contracts. Anything common goes here.",
      "type": "object",
      "properties": {
        "_links": {
          "description": "Collection of links relevant to resource",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "url": {
          "description": "Full http link to the resource",
          "type": "string"
        }
      }
    },
    "TeamSettingsDaysOff": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "daysOff": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateRange"
          }
        }
      }
    },
    "TeamSettingsDaysOffPatch": {
      "description": "",
      "type": "object",
      "properties": {
        "daysOff": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateRange"
          }
        }
      }
    },
    "TeamSettingsIteration": {
      "description": "Represents a shallow ref for a single iteration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "attributes": {
          "description": "Attributes of the iteration such as start and end date.",
          "$ref": "#/definitions/TeamIterationAttributes"
        },
        "id": {
          "description": "Id of the iteration.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Name of the iteration.",
          "type": "string"
        },
        "path": {
          "description": "Relative path of the iteration.",
          "type": "string"
        }
      }
    },
    "TeamSettingsPatch": {
      "description": "Data contract for what we expect to receive when PATCH",
      "type": "object",
      "properties": {
        "backlogIteration": {
          "type": "string",
          "format": "uuid"
        },
        "backlogVisibilities": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "bugsBehavior": {
          "enum": [
            "off",
            "asRequirements",
            "asTasks"
          ],
          "x-ms-enum": {
            "name": "BugsBehavior",
            "values": [
              {
                "value": "off",
                "description": ""
              },
              {
                "value": "asRequirements",
                "description": ""
              },
              {
                "value": "asTasks",
                "description": ""
              }
            ]
          }
        },
        "defaultIteration": {
          "type": "string",
          "format": "uuid"
        },
        "defaultIterationMacro": {
          "type": "string"
        },
        "workingDays": {
          "type": "array",
          "items": {
            "enum": [
              "sunday",
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday"
            ],
            "x-ms-enum": {
              "name": "DayOfWeek",
              "values": [
                {
                  "value": "sunday",
                  "description": ""
                },
                {
                  "value": "monday",
                  "description": ""
                },
                {
                  "value": "tuesday",
                  "description": ""
                },
                {
                  "value": "wednesday",
                  "description": ""
                },
                {
                  "value": "thursday",
                  "description": ""
                },
                {
                  "value": "friday",
                  "description": ""
                },
                {
                  "value": "saturday",
                  "description": ""
                }
              ]
            }
          }
        }
      }
    },
    "TimelineCriteriaStatus": {
      "description": "",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ok",
            "invalidFilterClause",
            "unknown"
          ],
          "x-ms-enum": {
            "name": "TimelineCriteriaStatusCode",
            "values": [
              {
                "value": "ok",
                "description": "No error - filter is good."
              },
              {
                "value": "invalidFilterClause",
                "description": "One of the filter clause is invalid."
              },
              {
                "value": "unknown",
                "description": "Unknown error."
              }
            ]
          }
        }
      }
    },
    "TimelineIterationStatus": {
      "description": "",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ok",
            "isOverlapping"
          ],
          "x-ms-enum": {
            "name": "TimelineIterationStatusCode",
            "values": [
              {
                "value": "ok",
                "description": "No error - iteration data is good."
              },
              {
                "value": "isOverlapping",
                "description": "This iteration overlaps with another iteration, no data is returned for this iteration."
              }
            ]
          }
        }
      }
    },
    "TimelineTeamData": {
      "description": "",
      "type": "object",
      "properties": {
        "backlog": {
          "description": "Backlog matching the mapped backlog associated with this team.",
          "$ref": "#/definitions/BacklogLevel"
        },
        "fieldReferenceNames": {
          "description": "The field reference names of the work item data",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "The id of the team",
          "type": "string",
          "format": "uuid"
        },
        "isExpanded": {
          "description": "Was iteration and work item data retrieved for this team. <remarks> Teams with IsExpanded false have not had their iteration, work item, and field related data queried and will never contain this data. If true then these items are queried and, if there are items in the queried range, there will be data. </remarks>",
          "type": "boolean"
        },
        "iterations": {
          "description": "The iteration data, including the work items, in the queried date range.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimelineTeamIteration"
          }
        },
        "name": {
          "description": "The name of the team",
          "type": "string"
        },
        "orderByField": {
          "description": "The order by field name of this team",
          "type": "string"
        },
        "partiallyPagedFieldReferenceNames": {
          "description": "The field reference names of the partially paged work items, such as ID, WorkItemType",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "partiallyPagedWorkItems": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "projectId": {
          "description": "The project id the team belongs team",
          "type": "string",
          "format": "uuid"
        },
        "rollupWorkItemTypes": {
          "description": "Work item types for which we will collect roll up data on the client side",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "Status for this team.",
          "$ref": "#/definitions/TimelineTeamStatus"
        },
        "teamFieldDefaultValue": {
          "description": "The team field default value",
          "type": "string"
        },
        "teamFieldName": {
          "description": "The team field name of this team",
          "type": "string"
        },
        "teamFieldValues": {
          "description": "The team field values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamFieldValue"
          }
        },
        "workItems": {
          "description": "Work items associated with the team that are not under any of the team's iterations",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "workItemTypeColors": {
          "description": "Colors for the work item types.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemColor"
          }
        }
      }
    },
    "TimelineTeamIteration": {
      "description": "",
      "type": "object",
      "properties": {
        "cssNodeId": {
          "description": "The iteration CSS Node Id",
          "type": "string"
        },
        "finishDate": {
          "description": "The end date of the iteration",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "The iteration name",
          "type": "string"
        },
        "partiallyPagedWorkItems": {
          "description": "All the partially paged workitems in this iteration.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "path": {
          "description": "The iteration path",
          "type": "string"
        },
        "startDate": {
          "description": "The start date of the iteration",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "The status of this iteration",
          "$ref": "#/definitions/TimelineIterationStatus"
        },
        "workItems": {
          "description": "The work items that have been paged in this iteration",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      }
    },
    "TimelineTeamStatus": {
      "description": "",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ok",
            "doesntExistOrAccessDenied",
            "maxTeamsExceeded",
            "maxTeamFieldsExceeded",
            "backlogInError",
            "missingTeamFieldValue",
            "noIterationsExist"
          ],
          "x-ms-enum": {
            "name": "TimelineTeamStatusCode",
            "values": [
              {
                "value": "ok",
                "description": "No error - all data for team is good."
              },
              {
                "value": "doesntExistOrAccessDenied",
                "description": "Team does not exist or access is denied."
              },
              {
                "value": "maxTeamsExceeded",
                "description": "Maximum number of teams was exceeded. No team data will be returned for this team."
              },
              {
                "value": "maxTeamFieldsExceeded",
                "description": "Maximum number of team fields (ie Area paths) have been exceeded. No team data will be returned for this team."
              },
              {
                "value": "backlogInError",
                "description": "Backlog does not exist or is missing crucial information."
              },
              {
                "value": "missingTeamFieldValue",
                "description": "Team field value is not set for this team. No team data will be returned for this team"
              },
              {
                "value": "noIterationsExist",
                "description": "Team does not have a single iteration with date range."
              }
            ]
          }
        }
      }
    },
    "UpdatePlan": {
      "description": "",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the plan",
          "type": "string"
        },
        "name": {
          "description": "Name of the plan to create.",
          "type": "string"
        },
        "properties": {
          "description": "Plan properties.",
          "type": "object"
        },
        "revision": {
          "description": "Revision of the plan that was updated - the value used here should match the one the server gave the client in the Plan.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Type of the plan",
          "enum": [
            "deliveryTimelineView"
          ],
          "x-ms-enum": {
            "name": "PlanType",
            "values": [
              {
                "value": "deliveryTimelineView",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "UpdateTaskboardColumn": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "description": "Column ID, keep it null for new column",
          "type": "string",
          "format": "uuid"
        },
        "mappings": {
          "description": "Work item type states mapped to this column to support auto state update when column is updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskboardColumnMapping"
          }
        },
        "name": {
          "description": "Column name is required",
          "type": "string"
        },
        "order": {
          "description": "Column position relative to other columns in the same board",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UpdateTaskboardWorkItemColumn": {
      "description": "",
      "type": "object",
      "properties": {
        "newColumn": {
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialize collections as a single JSON object on the wire.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "description": "The serialized item.",
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "description": "The number of serialized items.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WorkItem": {
      "description": "Describes a work item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "commentVersionRef": {
          "description": "Reference to a specific version of the comment added/edited/deleted in this revision.",
          "$ref": "#/definitions/WorkItemCommentVersionRef"
        },
        "fields": {
          "description": "Map of field and values for the work item.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "id": {
          "description": "The work item ID.",
          "type": "integer",
          "format": "int32"
        },
        "relations": {
          "description": "Relations of the work item.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemRelation"
          }
        },
        "rev": {
          "description": "Revision number of the work item.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WorkItemColor": {
      "description": "Work item color and icon.",
      "type": "object",
      "properties": {
        "icon": {
          "type": "string"
        },
        "primaryColor": {
          "type": "string"
        },
        "workItemTypeName": {
          "type": "string"
        }
      }
    },
    "WorkItemCommentVersionRef": {
      "description": "Represents the reference to a specific version of a comment on a Work Item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResourceReference"
        }
      ],
      "properties": {
        "commentId": {
          "description": "The id assigned to the comment.",
          "type": "integer",
          "format": "int32"
        },
        "createdInRevision": {
          "description": "[Internal] The work item revision where this comment was originally added.",
          "type": "integer",
          "format": "int32"
        },
        "isDeleted": {
          "description": "[Internal] Specifies whether comment was deleted.",
          "type": "boolean"
        },
        "text": {
          "description": "[Internal] The text of the comment.",
          "type": "string"
        },
        "version": {
          "description": "The version number.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WorkItemFieldReference": {
      "description": "Reference to a field in a work item",
      "type": "object",
      "properties": {
        "name": {
          "description": "The friendly name of the field.",
          "type": "string"
        },
        "referenceName": {
          "description": "The reference name of the field.",
          "type": "string"
        },
        "url": {
          "description": "The REST URL of the resource.",
          "type": "string"
        }
      }
    },
    "WorkItemLink": {
      "description": "A link between two work items.",
      "type": "object",
      "properties": {
        "rel": {
          "description": "The type of link.",
          "type": "string"
        },
        "source": {
          "description": "The source work item.",
          "$ref": "#/definitions/WorkItemReference"
        },
        "target": {
          "description": "The target work item.",
          "$ref": "#/definitions/WorkItemReference"
        }
      }
    },
    "WorkItemReference": {
      "description": "Contains reference to a work item.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Work item ID.",
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "description": "REST API URL of the resource",
          "type": "string"
        }
      }
    },
    "WorkItemRelation": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Link"
        }
      ],
      "properties": {}
    },
    "WorkItemTrackingResource": {
      "description": "Base class for WIT REST resources.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResourceReference"
        }
      ],
      "properties": {
        "_links": {
          "description": "Link references to related REST resources.",
          "$ref": "#/definitions/ReferenceLinks"
        }
      }
    },
    "WorkItemTrackingResourceReference": {
      "description": "Base class for work item tracking resource references.",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "WorkItemTypeReference": {
      "description": "Reference to a work item type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResourceReference"
        }
      ],
      "properties": {
        "name": {
          "description": "Name of the work item type.",
          "type": "string"
        }
      }
    },
    "WorkItemTypeStateInfo": {
      "description": "",
      "type": "object",
      "properties": {
        "states": {
          "description": "State name to state category map",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "workItemTypeName": {
          "description": "Work Item type name",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.work": "Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries, search work items and to receive notifications about work item events via service hooks.",
        "vso.work_write": "Grants the ability to read, create, and update work items and queries, update board metadata, read area and iterations paths other work item tracking related metadata, execute queries, and to receive notifications about work item events via service hooks."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  }
}