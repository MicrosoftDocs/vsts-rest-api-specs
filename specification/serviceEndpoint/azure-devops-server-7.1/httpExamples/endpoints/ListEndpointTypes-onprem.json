{
  "x-ms-vss-request-method": "GET",
  "x-ms-vss-request-url": "https://fabrikam:8080/_apis/serviceendpoint/types",
  "parameters": {
    "api-version": "6.0-preview.1",
    "account": "fabrikam"
  },
  "responses": {
    "200": {
      "headers": {},
      "body": {
        "count": 24,
        "value": [
          {
            "inputDescriptors": [
              {
                "id": "displayName",
                "name": "DisplayName",
                "description": "Owner login displayname.",
                "type": null,
                "properties": null,
                "inputMode": "none",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              },
              {
                "id": "avatarUrl",
                "name": "Avatar URL",
                "description": "Owner login avatar URL.",
                "type": null,
                "properties": null,
                "inputMode": "none",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              }
            ],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "ConfigurationId",
                    "name": "OAuth Configuration",
                    "description": "Configuration for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "combo",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "guid",
                      "isRequired": true
                    },
                    "hasDynamicValueInformation": true
                  }
                ],
                "scheme": "OAuth2",
                "displayName": "Grant authorization",
                "authorizationUrl": "{{{configuration.Url}}}/site/oauth2/authorize?client_id={{{configuration.ClientId}}}&response_type=code",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [
                  {
                    "dataSourceName": "AccessToken",
                    "parameters": {},
                    "target": "AccessToken",
                    "resultTemplate": "{\"Access_Token\" : \"{{{access_token}}}\", \"Error\" : \"{{{error}}}\", \"Error_Description\" : \"{{{error_description}}}\"}",
                    "requestVerb": "Post",
                    "requestContent": "client_id={{{configuration.ClientId}}}&client_secret={{{configuration.ClientSecret}}}&code={{{AuthorizationCode}}}&grant_type=authorization_code",
                    "endpointUrl": "{{{configuration.url}}}/site/oauth2/access_token/site",
                    "resultSelector": "jsonpath:$"
                  },
                  {
                    "dataSourceName": "RevokeOAuthToken",
                    "parameters": {},
                    "target": "RevokeOAuthToken",
                    "requestVerb": "GET",
                    "resultSelector": "jsonpath:$"
                  }
                ],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{ #base64 \"token\" \":\" endpoint.AccessToken }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {
                  "provider": "bitbucket"
                }
              },
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Username",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "Password",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Basic Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "dataSources": [
              {
                "name": "TestConnection",
                "endpointUrl": "{{{endpoint.url}}}2.0/repositories?role=member",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.values[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Repositories",
                "endpointUrl": "{{{endpoint.url}}}2.0/repositories?role=member&pagelen=500",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.values[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Branches",
                "endpointUrl": "{{{endpoint.url}}}2.0/repositories/{{{definition}}}/refs/branches",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.values[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Commits",
                "endpointUrl": "{{{endpoint.url}}}2.0/repositories/{{{definition}}}/commits/{{{branch}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.values[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "LatestCommit",
                "endpointUrl": "{{{endpoint.url}}}2.0/repositories/{{{definition}}}/commits/{{{branch}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.values[0]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              }
            ],
            "name": "bitbucket",
            "displayName": "Bitbucket Cloud",
            "description": "Service connection type for all Bitbucket Cloud connections",
            "endpointUrl": {
              "displayName": "Server Url",
              "helpText": "",
              "value": "https://api.bitbucket.org/",
              "isVisible": "false"
            },
            "helpMarkDown": "<a href=\"https://msdn.microsoft.com/Library/vs/alm/Release/author-release-definition/understanding-tasks#serviceconnections\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/icons/icon-bitbucket-endpoint.svg"
          },
          {
            "inputDescriptors": [],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "apitoken",
                    "name": "Personal Access Token",
                    "description": "Personal access tokens are applicable only for connections targeting Azure DevOps collections or TFS 2017 (and higher). Click <a href=\"https://www.visualstudio.com/en-us/docs/setup-admin/team-services/use-personal-access-tokens-to-authenticate\" target=_blank>here</a>. for information on how to create a personal access token.",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  }
                ],
                "scheme": "Token",
                "displayName": "Token Based Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 \"token\" \":\" endpoint.apitoken }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Username for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "Password for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Basic Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "dataSources": [
              {
                "name": "TestConnection",
                "endpointUrl": "{{endpoint.url}}/_apis/projects",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.state=='wellFormed')]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Projects",
                "endpointUrl": "{{endpoint.url}}/_apis/projects?$top=1000",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.state=='wellFormed')]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Definitions",
                "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/definitions?api-version=3.0-preview",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.quality=='definition')]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "DefinitionsPaged",
                "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/definitions?api-version=3.0-preview&$top=500&continuationToken={{{continuationToken}}}&queryOrder=2",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.quality=='definition')]",
                "callbackContextTemplate": "{\"continuationToken\" : \"{{{headers.x-ms-continuationtoken}}}\"}",
                "callbackRequiredTemplate": "{{{#headers.x-ms-continuationtoken}}}true{{{/headers.x-ms-continuationtoken}}}",
                "initialContextTemplate": "{\"continuationToken\" : \"{{{system.utcNow}}}\"}",
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "DefinitionSearch",
                "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/definitions?name=*{{{name}}}*&api-version=3.0-preview&$top=500&queryOrder=2",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.quality=='definition')]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Builds",
                "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/builds?definitions={{definition}}&resultFilter=succeeded,partiallySucceeded&$top=200",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "LatestBuild",
                "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/builds?maxBuildsPerDefinition=1&definitions={{definition}}&resultFilter=succeeded",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[0]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Artifacts",
                "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/builds/{{version}}/artifacts",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "ArtifactItems",
                "endpointUrl": "{{endpoint.url}}/_apis/resources/Containers/{{containerId}}?ItemPath={{itemPath}}&isShallow=true",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "BranchName",
                "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/builds/{{version}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.sourceBranch",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "XamlProjects",
                "endpointUrl": "{{endpoint.url}}/_apis/projects?api-version=1.0",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "XamlDefinitions",
                "endpointUrl": "{{endpoint.url}}/_apis/build/definitions?api-version=1.0&projectname={{project}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "XamlBuilds",
                "endpointUrl": "{{endpoint.url}}/_apis/build/builds?definition={{definition}}&status=Succeeded&api-version=1.0",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "LatestXamlBuild",
                "endpointUrl": "{{endpoint.url}}/_apis/build/builds?definition={{definition}}&status=Succeeded&$top=1&api-version=1.0",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[0]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "XamlBuild",
                "endpointUrl": "{{endpoint.url}}/_apis/build/builds/{{version}}?api-version=1.0",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "TfvcProjects",
                "endpointUrl": "{{endpoint.url}}/_apis/tfvc/{{project}}/projectinfo",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "TfvcChangesets",
                "endpointUrl": "{{endpoint.url}}/_apis/tfvc/changesets?api-version=1.0",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "TfvcLatestChangeset",
                "endpointUrl": "{{endpoint.url}}/_apis/tfvc/changesets?$orderby=id dsc&api-version=1.0",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[0]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "TfvcArtifacts",
                "endpointUrl": "{{endpoint.url}}/_apis/tfvc/items?scopepath=$/{{project}}&recursionlevel=OneLevel&api-version=1.0-preview.1",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[1:]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "TfvcArtifactItems",
                "endpointUrl": "{{endpoint.url}}/_apis/tfvc/items?scopepath=$/{{project}}/{{itemPath}}&recursionlevel=OneLevel&api-version=1.0-preview.1",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[1:]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Repositories",
                "endpointUrl": "{{endpoint.url}}/_apis/git/{{project}}/repositories",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Branches",
                "endpointUrl": "{{endpoint.url}}/_apis/git/repositories/{{definition}}/stats/branches",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "GitCommits",
                "endpointUrl": "{{endpoint.url}}/_apis/git/{{project}}/repositories/{{definition}}/commits?itemVersion[versionType]=Branch&itemVersion[version]={{branch}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "GitLatestCommit",
                "endpointUrl": "{{endpoint.url}}/_apis/git/{{project}}/repositories/{{definition}}/commits?itemVersion[versionType]=Branch&itemVersion[version]={{branch}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[0]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "GitArtifacts",
                "endpointUrl": "{{endpoint.url}}/_apis/git/repositories/{{definition}}/items?versionType=branch&version={{branch}}&scopePath=%2F&recursionLevel=1",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[1:]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "GitArtifactItems",
                "endpointUrl": "{{endpoint.url}}/_apis/git/repositories/{{definition}}/items?versionType=branch&version={{branch}}&scopePath=%2F{{itemPath}}&recursionLevel=1",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[1:]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "DeploymentGroups",
                "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/distributedtask/deploymentgroups?actionFilter=Manage",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              }
            ],
            "name": "externaltfs",
            "displayName": "Azure Repos/Team Foundation Server",
            "description": "Service connection type for all External TFS connections",
            "endpointUrl": {
              "displayName": "Connection URL",
              "helpText": "URL of the Azure DevOps collection or the TFS Project Collection to connect to."
            },
            "helpMarkDown": "<a href=\"https://go.microsoft.com/fwlink/?linkid=875423\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/Microsoft.VisualStudio.Services.Icons.Default"
          },
          {
            "inputDescriptors": [],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "ConfigurationId",
                    "name": "OAuth Configuration",
                    "description": "Configuration for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "combo",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "guid",
                      "isRequired": true
                    },
                    "hasDynamicValueInformation": true
                  }
                ],
                "scheme": "OAuth2",
                "displayName": "Grant authorization",
                "authorizationUrl": "{{{configuration.Url}}}/login/oauth/authorize?client_id={{{configuration.ClientId}}}",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [
                  {
                    "dataSourceName": "AccessToken",
                    "parameters": {},
                    "target": "AccessToken",
                    "resultTemplate": "{\"Access_Token\" : \"{{{access_token}}}\", \"Error\" : \"{{{error}}}\", \"Error_Description\" : \"{{{error_description}}}\"}",
                    "requestVerb": "Post",
                    "requestContent": "{\"client_id\":\"{{{configuration.ClientId}}}\",\"client_secret\":\"{{{configuration.ClientSecret}}}\",\"code\":\"{{{AuthorizationCode}}}\"}",
                    "resultSelector": "jsonpath:$"
                  },
                  {
                    "dataSourceName": "RevokeOAuthToken",
                    "parameters": {},
                    "target": "RevokeOAuthToken",
                    "requestVerb": "GET",
                    "resultSelector": "jsonpath:$"
                  }
                ],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 \"token\" \":\" endpoint.AccessToken }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {
                  "provider": "github"
                }
              },
              {
                "inputDescriptors": [
                  {
                    "id": "ConfigurationId",
                    "name": "Auth Configuration Id",
                    "description": "Configuration for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "none",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null
                  }
                ],
                "scheme": "InstallationToken",
                "displayName": "Azure Pipelines App",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Token {{endpoint.InstallationAccessToken}}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "AccessToken",
                    "name": "Personal access token",
                    "description": "Visit <a href=\"https://github.com/settings/tokens\" target=_blank>https://github.com/settings/tokens</a> to create personal access tokens. <br><br> <b>Recommended scopes -- repo, user, admin:repo_hook</b>",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "apitoken",
                    "name": "API Token",
                    "description": "API Token for connection to endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 2000
                    },
                    "values": {
                      "inputId": "apiToken",
                      "defaultValue": "",
                      "isDisabled": true
                    }
                  }
                ],
                "scheme": "Token",
                "displayName": "Personal Access Token",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 \"token\" \":\" endpoint.AccessToken }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "dataSources": [
              {
                "name": "TestConnection",
                "endpointUrl": "https://api.github.com/user/repos",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AccessToken",
                "endpointUrl": "{{{configuration.Url}}}login/oauth/access_token",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": null,
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": {
                  "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
                  "inputs": null
                }
              },
              {
                "name": "UserRepositories",
                "endpointUrl": "https://api.github.com/user/repos?per_page=100",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "InstallationRepos",
                "endpointUrl": "https://api.github.com/installation/repositories",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "UserRepositoriesAsOwner",
                "endpointUrl": "https://api.github.com/user/repos?type=owner&per_page=100",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "UserRepositoriesForGitHubArtifact",
                "endpointUrl": "https://api.github.com/user/repos?per_page=100",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "RepoBranches",
                "endpointUrl": "https://api.github.com/repos/{{{repositoryName}}}/branches",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "SearchRepositoriesByName",
                "endpointUrl": "https://api.github.com/search/repositories?q={{{searchText}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "SearchRepositoriesByNameForTasks",
                "endpointUrl": "https://api.github.com/search/repositories?q={{{searchText}}}+in:name+fork:true",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$['items'][*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "SearchRepositoriesByNameWithinOrg",
                "endpointUrl": "https://api.github.com/search/repositories?q={{{searchText}}}+in:name+org:{{{orgName}}}+fork:true",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$['items'][*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Repository",
                "endpointUrl": "https://api.github.com/repos/{{{repositoryName}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Commits",
                "endpointUrl": "https://api.github.com/repos/{{{repositoryName}}}/commits?sha={{{head}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "CommitDetails",
                "endpointUrl": "https://api.github.com/repos/{{{repositoryName}}}/commits/{{{sha}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "CommitsDiff",
                "endpointUrl": "https://api.github.com/repos/{{{repositoryName}}}/compare/{{{base}}}...{{{head}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Contents",
                "endpointUrl": "https://api.github.com/repos/{{{repositoryName}}}/contents/{{{path}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "ContentsBranch",
                "endpointUrl": "https://api.github.com/repos/{{{repositoryName}}}/contents?ref={{{branchName}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Releases",
                "endpointUrl": "https://api.github.com/repos/{{{repositoryName}}}/releases",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.[?(@.draft==false)]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Release",
                "endpointUrl": "https://api.github.com/repos/{{{repositoryName}}}/releases/{{{releaseId}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "TaggedRelease",
                "endpointUrl": "https://api.github.com/repos/{{{repositoryName}}}/releases/tags/{{{tag}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "LatestRelease",
                "endpointUrl": "https://api.github.com/repos/{{{repositoryName}}}/releases/latest",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "ReleaseAssets",
                "endpointUrl": "https://api.github.com/repos/{{{repositoryName}}}/releases/{{{releaseId}}}/assets",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              }
            ],
            "trustedHosts": [
              "api.github.com",
              "github.com"
            ],
            "name": "github",
            "displayName": "GitHub",
            "description": "Service connection type for all GitHub connections",
            "endpointUrl": {
              "helpText": "",
              "value": "https://github.com",
              "isVisible": "false"
            },
            "helpMarkDown": "",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/icons/icon-github-endpoint.svg"
          },
          {
            "inputDescriptors": [
              {
                "id": "acceptUntrustedCerts",
                "name": "Accept untrusted SSL certificates",
                "description": "Allows the GitHub Enterprise Server clients to accept self-signed SSL server certificates without installing them into the TFS service role and/or Build Agent computers.",
                "type": null,
                "properties": null,
                "inputMode": "checkBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "boolean"
                }
              }
            ],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "apitoken",
                    "name": "Personal access token",
                    "description": "Visit <a href=\"https://enterprise.github.com/security/\" target=_blank>https://enterprise.github.com/security/</a> to learn about how to create personal access tokens. <br><br> <b>Recommended scopes -- repo, user, admin:repo_hook</b>",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "pattern": "^[^\\r\\n]+$",
                      "patternMismatchErrorMessage": "Value cannot contain newline or carriage-return characters",
                      "maxLength": 300
                    }
                  }
                ],
                "scheme": "Token",
                "displayName": "Personal Access Token",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 \"token\" \":\" endpoint.apiToken }}"
                  },
                  {
                    "name": "Accept",
                    "value": "application/json"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Username for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "Password for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Username and Password",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Accept",
                    "value": "application/json"
                  },
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "ConfigurationId",
                    "name": "OAuth Configuration",
                    "description": "Configuration for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "combo",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "guid",
                      "isRequired": true
                    },
                    "hasDynamicValueInformation": true
                  }
                ],
                "scheme": "OAuth2",
                "displayName": "OAuth2",
                "authorizationUrl": "{{{configuration.Url}}}/login/oauth/authorize?client_id={{{configuration.ClientId}}}&scope=repo,user,admin:repo_hook",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [
                  {
                    "parameters": {},
                    "target": "AccessToken",
                    "resultTemplate": "{\"AccessToken\" : \"{{{access_token}}}\", \"Error\" : \"{{{error}}}\", \"ErrorDescription\" : \"{{{error_description}}}\"}",
                    "requestVerb": "Post",
                    "requestContent": "{\"client_id\":\"{{{configuration.ClientId}}}\",\"client_secret\":\"{{{configuration.ClientSecret}}}\",\"code\":\"{{{AuthorizationCode}}}\"}",
                    "endpointUrl": "{{{configuration.Url}}}/login/oauth/access_token",
                    "resultSelector": "jsonpath:$"
                  },
                  {
                    "dataSourceName": "RevokeOAuthToken",
                    "parameters": {},
                    "target": "RevokeOAuthToken",
                    "requestVerb": "GET",
                    "resultSelector": "jsonpath:$"
                  }
                ],
                "authorizationHeaders": [
                  {
                    "name": "Accept",
                    "value": "application/json"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "dataSources": [
              {
                "name": "TestConnection",
                "endpointUrl": "{{endpoint.url}}api/v3",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "RevokeOAuthToken",
                "endpointUrl": "{{{configuration.Url}}}api/v3/applications/{{{configuration.ClientId}}}/tokens/{{{configuration.AccessToken}}}",
                "requestVerb": "Delete",
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": {
                  "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
                  "inputs": {
                    "username": "{{{configuration.ClientId}}}",
                    "password": "{{{configuration.ClientSecret}}}"
                  }
                }
              },
              {
                "name": "Repositories",
                "endpointUrl": "{{endpoint.url}}api/v3/user/repos",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "RepoBranches",
                "endpointUrl": "{{endpoint.url}}api/v3/repos/{{{definition}}}/branches",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Commits",
                "endpointUrl": "{{endpoint.url}}api/v3/repos/{{{definition}}}/commits?sha={{branch}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "LatestCommit",
                "endpointUrl": "{{{endpoint.url}}}api/v3/repos/{{{definition}}}/commits?sha={{version}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.[0]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Artifacts",
                "endpointUrl": "{{endpoint.url}}api/v3/repos/{{{definition}}}/contents?ref={{#equals defaultVersionType 'specificVersionType'}}{{version}}{{else}}{{branch}}{{/equals}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "ArtifactItems",
                "endpointUrl": "{{endpoint.url}}api/v3/repos/{{{definition}}}/contents/{{itemPath}}?ref={{#equals defaultVersionType 'specificVersionType'}}{{version}}{{else}}{{branch}}{{/equals}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              }
            ],
            "name": "githubenterprise",
            "displayName": "GitHub Enterprise Server",
            "description": "Service connection type for all GitHub Enterprise Server connections",
            "helpMarkDown": "<a href=\"https://go.microsoft.com/fwlink/?linkid=875419\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/icons/icon-github-endpoint.svg"
          },
          {
            "inputDescriptors": [],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "configurationId",
                    "name": "Jira Configuration",
                    "description": "Configuration for connecting to the jira endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "guid",
                      "isRequired": true
                    },
                    "values": {
                      "inputId": "configurationId",
                      "defaultValue": "",
                      "isDisabled": true
                    }
                  }
                ],
                "scheme": "JiraConnectApp",
                "displayName": "Jira Connect App",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "jira",
            "displayName": "Jira",
            "description": "Service connection type for all Jira connections",
            "helpMarkDown": "",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/icons/icon-jira-endpoint.png"
          },
          {
            "inputDescriptors": [
              {
                "id": "RepositoryId",
                "name": "Repository Id",
                "description": "This is the ID of the server that matches the id element of the repository/mirror that Maven tries to connect to.",
                "type": null,
                "properties": null,
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true,
                  "maxLength": 50
                }
              }
            ],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Username for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "Password for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Username and Password",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "apitoken",
                    "name": "Personal Access Token",
                    "description": "Personal access token is applicable only for Maven repositories that support them and for Azure DevOps collections.",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  }
                ],
                "scheme": "Token",
                "displayName": "Authentication Token",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "{{endpoint.apitoken}}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "externalmavenrepository",
            "displayName": "Maven",
            "description": "Service connection type for a Maven repository",
            "endpointUrl": {
              "displayName": "Repository URL",
              "helpText": "URL for the repository."
            },
            "helpMarkDown": "<a href=\"https://go.microsoft.com/fwlink/?linkid=849455\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/icons/icon-maven-endpoint.png"
          },
          {
            "inputDescriptors": [],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Username for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "Password for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Username and Password",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "apitoken",
                    "name": "Personal Access Token",
                    "description": "Personal access token is applicable for registries which support them (e.g. https://registry.npmjs.org) and for Team Services collections or TFS 2017 Update 1 or later.",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  }
                ],
                "scheme": "Token",
                "displayName": "Authentication Token",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 \"token\" \":\" endpoint.apitoken }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "externalnpmregistry",
            "displayName": "npm",
            "description": "Service connection type for an npm registry",
            "endpointUrl": {
              "displayName": "Registry URL",
              "helpText": "URL for the registry. For npmjs.com, use https://registry.npmjs.org"
            },
            "helpMarkDown": "<a href=\"https://go.microsoft.com/fwlink/?linkid=849455\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/icons/icon-npm-endpoint.png"
          },
          {
            "inputDescriptors": [],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "nugetkey",
                    "name": "ApiKey",
                    "description": "ApiKey (only for push).",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  }
                ],
                "scheme": "None",
                "displayName": "ApiKey",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "apitoken",
                    "name": "Personal Access Token",
                    "description": "Personal access token is applicable only for NuGet feeds hosted on other Team Services collections or TFS 2017.",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  }
                ],
                "scheme": "Token",
                "displayName": "External Azure DevOps Server",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 \"token\" \":\" endpoint.apitoken }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Username for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "Password for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 900
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Basic Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "externalnugetfeed",
            "displayName": "NuGet",
            "description": "Service connection type for a NuGet feed",
            "endpointUrl": {
              "displayName": "Feed URL",
              "helpText": "URL for the feed. This will generally end with 'index.json'. For nuget.org, use https://api.nuget.org/v3/index.json"
            },
            "helpMarkDown": "<a href=\"https://go.microsoft.com/fwlink/?linkid=849454\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/icons/icon-nuget-endpoint.png"
          },
          {
            "inputDescriptors": [],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Username for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "Password for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Username and Password",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "apitoken",
                    "name": "Personal Access Token",
                    "description": "Personal access token is applicable only for python feeds which supports them and for hosted Azure Devops collections.",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  }
                ],
                "scheme": "Token",
                "displayName": "Authentication Token",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 \"token\" \":\" endpoint.apitoken }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "externalPythonDownloadFeed",
            "displayName": "Python package download",
            "description": "Service connection type for python package download",
            "endpointUrl": {
              "displayName": "Python repository url for download",
              "helpText": "Download url for the python feed."
            },
            "helpMarkDown": "<a href=\"https://go.microsoft.com/fwlink/?linkid=2026435\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/icons/icon-pypi-endpoint.png"
          },
          {
            "inputDescriptors": [
              {
                "id": "EndpointName",
                "name": "EndpointName",
                "description": "Unique repository name used for twine upload. Spaces and special characters are not allowed.",
                "type": null,
                "properties": null,
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true,
                  "maxLength": 50
                }
              }
            ],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Username for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "Password for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Username and Password",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "apitoken",
                    "name": "Personal Access Token",
                    "description": "Personal access token is applicable only for python feeds which supports them and for hosted Azure Devops collections.",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  }
                ],
                "scheme": "Token",
                "displayName": "Authentication Token",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 \"token\" \":\" endpoint.apitoken }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "externalPythonUploadFeed",
            "displayName": "Python package upload",
            "description": "Service connection type for Python package upload",
            "endpointUrl": {
              "displayName": "Python repository url for upload",
              "helpText": "Upload url for the python feed. For pypi.org this should look like https://upload.pypi.org/legacy"
            },
            "helpMarkDown": "<a href=\"https://go.microsoft.com/fwlink/?linkid=2026435\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/icons/icon-pypi-endpoint.png"
          },
          {
            "inputDescriptors": [
              {
                "id": "acceptUntrustedCerts",
                "name": "Accept untrusted SSL certificates",
                "description": "Allows the SVN client to accept self-signed SSL server certificates without installing them into the Azure DevOps service role and/or Build Agent computers. <br><br> Same as the `--trust-server-cert` option of the `svn` command line utility.",
                "type": null,
                "properties": null,
                "inputMode": "checkBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "boolean"
                },
                "values": {
                  "inputId": "acceptUntrustedCertsInput",
                  "defaultValue": "false"
                }
              },
              {
                "id": "realmName",
                "name": "Realm name",
                "description": "If you use multiple credentials in a build pipeline to download a complete set of the source from Subversion,\r\nyou should specify the `Realm name` in each of them. The `Realm name` represents a sort of &quot;authentication namespace&quot; used\r\nby the Subversion repository to select the appropriate Subversion identity database. Along with the repository server's schema, hostname, and port it forms\r\na key that the build agent uses to select the specific credential from the set provided in the build pipeline.  <br><br>\r\nTo find out the `Realm name`, you could do any of the following:\r\n<ul>\r\n<li>\r\nIf you access the repository via `HTTP` or `HTTPS`: Open the repo in a web browser without saved credentials. It will use the `Realm Name` in the authentication dialog.\r\n</li>\r\n<li>\r\nUse the command line `svn` program. If you don't have stored the credentials, run e.g. <code>`svn info https://svnserver/repo`</code>.\r\nYou will see the `Realm name` when it asks you to enter a password.\r\n</li>\r\n<li>\r\nIf you have already stored the credentials to access the repository, look for the `Realm name` in one of the files in the Subversion authentication cache section of your user profile,\r\ne.g. in <code>`~/.subversion/auth/svn/simple`</code> or <code>`C:\\Users\\yourname\\Application Data\\Subversion\\auth\\svn.simple`</code>.\r\n</li>\r\n</ul>",
                "type": null,
                "properties": null,
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              }
            ],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Username for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "Password for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Basic Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "subversion",
            "displayName": "Subversion",
            "description": "Service connection type for all Subversion connections",
            "endpointUrl": {
              "displayName": "Subversion repository URL",
              "helpText": "If you use this authentication credential as a main Subversion repository service connection, you should specify the full repository URL,\r\ne.g. <code>`https://svnserver/repo`</code> or <code>`svn://svnserver:3690/repositories/myrepo`</code>.\r\nThe `Realm name` parameter is optional in this case.\r\n<br><br>\r\nIf you use this authentication credential as an additional service connection for Subversion externals, you may specify the schema, hostname, and port only,\r\ne.g. <code>`https://svnserver:443`</code> or <code>`svn://svnserver:3690`</code>.\r\nThe `Realm name` parameter is required in this case."
            },
            "helpMarkDown": "",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/Microsoft.VisualStudio.Services.Icons.Default"
          },
          {
            "inputDescriptors": [
              {
                "id": "Host",
                "name": "Host name",
                "description": "Host name or IP address of the remote machine.",
                "type": null,
                "properties": null,
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true
                }
              },
              {
                "id": "Port",
                "name": "Port number",
                "description": "Port number on the remote machine to use for connecting.",
                "type": null,
                "properties": null,
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "number"
                }
              },
              {
                "id": "PrivateKey",
                "name": "Private Key",
                "description": "Private Key for connecting to the endpoint",
                "type": null,
                "properties": null,
                "inputMode": "textArea",
                "isConfidential": true,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              }
            ],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Username for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "Password for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Basic Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "ssh",
            "displayName": "SSH",
            "description": "Service connection type for all SSH connections",
            "endpointUrl": {
              "displayName": "Server Url",
              "helpText": "",
              "isVisible": "false",
              "format": "ssh://{{endpoint.Host}}:{{endpoint.Port}}"
            },
            "helpMarkDown": "",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/Microsoft.VisualStudio.Services.Icons.Default"
          },
          {
            "inputDescriptors": [
              {
                "id": "accessExternalGitServer",
                "name": "Attempt accessing this Git server from Azure Pipelines",
                "description": "",
                "type": null,
                "properties": null,
                "inputMode": "checkBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "boolean"
                },
                "values": {
                  "inputId": "accessExternalGitServerInput",
                  "defaultValue": "true"
                }
              }
            ],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Username for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password/Token",
                    "description": "Password or token for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Basic Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "git",
            "displayName": "Other Git",
            "description": "Service connection type for all Other Git connections",
            "endpointUrl": {
              "displayName": "Git repository URL",
              "helpText": ""
            },
            "helpMarkDown": "",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/Microsoft.VisualStudio.Services.Icons.Default"
          },
          {
            "inputDescriptors": [],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Username for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password/Token Key",
                    "description": "Password/Token Key for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Basic Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "generic",
            "displayName": "Generic",
            "description": "Service connection type for all Generic connections",
            "helpMarkDown": "",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-endpoint/18.166.0.51719591/Assets/Microsoft.VisualStudio.Services.Icons.Default"
          },
          {
            "inputDescriptors": [
              {
                "id": "environment",
                "name": "Environment",
                "description": "Microsoft Azure Environment for the subscription",
                "type": null,
                "properties": null,
                "inputMode": "combo",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "maxLength": 300
                },
                "values": {
                  "inputId": "environmentValues",
                  "defaultValue": "AzureCloud",
                  "possibleValues": [
                    {
                      "value": "AzureCloud",
                      "displayValue": "Azure Cloud"
                    },
                    {
                      "value": "AzureChinaCloud",
                      "displayValue": "Azure China Cloud"
                    },
                    {
                      "value": "AzureUSGovernment",
                      "displayValue": "Azure US Government"
                    },
                    {
                      "value": "AzureGermanCloud",
                      "displayValue": "Azure German Cloud"
                    }
                  ]
                }
              },
              {
                "id": "subscriptionId",
                "name": "Subscription Id",
                "description": "Subscription Id from the <a href=\"https://go.microsoft.com/fwlink/?LinkID=312990\" target=_blank>publish settings file</a>",
                "type": null,
                "properties": null,
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "guid",
                  "isRequired": true,
                  "maxLength": 38
                }
              },
              {
                "id": "subscriptionName",
                "name": "Subscription Name",
                "description": "Subscription Name from the <a href=\"https://go.microsoft.com/fwlink/?LinkID=312990\" target=_blank>publish settings file</a>",
                "type": null,
                "properties": null,
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true,
                  "maxLength": 255
                }
              }
            ],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Specify a work or school account (for example <b>@fabrikam.com</b>). Microsoft accounts (for example <b>@live</b> or <b>@hotmail</b>) are not supported. Not recommended if Multi-Factored Authentication is enabled.",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "Password for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Credentials",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "certificate",
                    "name": "Management Certificate",
                    "description": "Management Certificate from the <a href=\"https://go.microsoft.com/fwlink/?LinkID=312990\" target=_blank>publish settings file</a>",
                    "type": null,
                    "properties": null,
                    "inputMode": "textArea",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  }
                ],
                "scheme": "Certificate",
                "displayName": "Certificate Based",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "dataSources": [
              {
                "name": "TestConnection",
                "endpointUrl": "$(endpoint.url)/$(endpoint.subscriptionId)/services/WebSpaces?properties=georegions",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "xpath://Name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureWebSiteNames",
                "endpointUrl": "$(endpoint.url)/$(endpoint.subscriptionId)/services/webspaces/{{{ #stringReplace ' ' '' WebSiteLocation}}}Webspace/sites",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "xpath://Site/Name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureHostedServiceNames",
                "endpointUrl": "$(endpoint.url)/$(endpoint.subscriptionId)/services/hostedservices",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "xpath://ServiceName",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureStorageServiceNames",
                "endpointUrl": "$(endpoint.url)/$(endpoint.subscriptionId)/services/storageservices",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "xpath://ServiceName",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureLocations",
                "endpointUrl": "$(endpoint.url)/$(endpoint.subscriptionId)/locations",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "xpath://Name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureWebsiteLocations",
                "endpointUrl": "$(endpoint.url)/$(endpoint.subscriptionId)/services/WebSpaces?properties=georegions",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "xpath://Name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureAffinityGroups",
                "endpointUrl": "$(endpoint.url)/$(endpoint.subscriptionId)/affinitygroups",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "xpath://Name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              }
            ],
            "name": "azure",
            "displayName": "Azure Classic",
            "description": "Service connection type for all Azure connections",
            "endpointUrl": {
              "displayName": "Server Url",
              "helpText": "",
              "value": "https://management.core.windows.net/",
              "isVisible": "false",
              "dependsOn": {
                "input": "environment",
                "map": [
                  {
                    "key": "AzureCloud",
                    "value": "https://management.core.windows.net/"
                  },
                  {
                    "key": "AzureChinaCloud",
                    "value": "https://management.core.chinacloudapi.cn/"
                  },
                  {
                    "key": "AzureUSGovernment",
                    "value": "https://management.core.usgovcloudapi.net/"
                  },
                  {
                    "key": "AzureGermanCloud",
                    "value": "https://management.core.cloudapi.de/"
                  }
                ]
              }
            },
            "helpMarkDown": "For certificate: download <a href=\"https://go.microsoft.com/fwlink/?LinkID=312990\" target=_blank><b>publish settings file</b></a>. <a href=\"https://go.microsoft.com/fwlink/?linkid=2002800&amp;clcid=0x409\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-services-azure/18.166.0.653816409/Assets/icons/azure-endpoint-icon.png"
          },
          {
            "inputDescriptors": [
              {
                "id": "environment",
                "name": "Environment",
                "description": "Microsoft Azure Environment for the subscription",
                "type": null,
                "properties": {
                  "updatesNotAllowed": true
                },
                "inputMode": "combo",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true,
                  "maxLength": 300
                },
                "values": {
                  "inputId": "environmentValues",
                  "defaultValue": "AzureCloud",
                  "possibleValues": [
                    {
                      "value": "AzureCloud",
                      "displayValue": "Azure Cloud"
                    },
                    {
                      "value": "AzureChinaCloud",
                      "displayValue": "Azure China Cloud"
                    },
                    {
                      "value": "AzureUSGovernment",
                      "displayValue": "Azure US Government"
                    },
                    {
                      "value": "AzureGermanCloud",
                      "displayValue": "Azure German Cloud"
                    },
                    {
                      "value": "AzureStack",
                      "displayValue": "Azure Stack"
                    }
                  ]
                }
              },
              {
                "id": "scopeLevel",
                "name": "Scope Level",
                "description": "Scope Level for endpoint",
                "type": null,
                "properties": {
                  "updatesNotAllowed": true
                },
                "inputMode": "radioButtons",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "isRequired": true
                },
                "values": {
                  "inputId": "scopeValues",
                  "defaultValue": "Subscription",
                  "possibleValues": [
                    {
                      "value": "Subscription",
                      "displayValue": "Subscription"
                    },
                    {
                      "value": "ManagementGroup",
                      "displayValue": "Management Group"
                    },
                    {
                      "value": "AzureMLWorkspace",
                      "displayValue": "Machine Learning Workspace"
                    }
                  ]
                }
              },
              {
                "id": "subscriptionId",
                "name": "Subscription Id",
                "description": "Subscription Id from the <a href=\"https://go.microsoft.com/fwlink/?LinkID=312990\" target=_blank>publish settings file</a>",
                "type": null,
                "properties": {
                  "visibleRule": "scopeLevel == Subscription || scopeLevel == AzureMLWorkspace",
                  "updatesNotAllowed": true
                },
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "guid",
                  "isRequired": true,
                  "maxLength": 38
                }
              },
              {
                "id": "subscriptionName",
                "name": "Subscription Name",
                "description": "Subscription Name from the <a href=\"https://go.microsoft.com/fwlink/?LinkID=312990\" target=_blank>publish settings file</a>",
                "type": null,
                "properties": {
                  "visibleRule": "scopeLevel == Subscription || scopeLevel == AzureMLWorkspace",
                  "updatesNotAllowed": true
                },
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true,
                  "maxLength": 255
                }
              },
              {
                "id": "resourceGroupName",
                "name": "Resource Group",
                "description": "Resource Group for connecting to the endpoint.\nRefer to <a href=\"https://docs.microsoft.com/en-us/azure/azure-resource-manager/manage-resource-groups-portal#create-resource-groups\" target=_blank>link</a> on how to create a resource group.",
                "type": null,
                "properties": {
                  "visibleRule": "scopeLevel == AzureMLWorkspace"
                },
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true,
                  "maxLength": 255
                }
              },
              {
                "id": "mlWorkspaceName",
                "name": "ML Workspace Name",
                "description": "Machine Learning Workspace name for connecting to the endpoint.\nRefer to <a href=\"https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-manage-workspace\" target=_blank>link</a> on how to create a ML workspace.",
                "type": null,
                "properties": {
                  "visibleRule": "scopeLevel == AzureMLWorkspace"
                },
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true,
                  "maxLength": 255
                }
              },
              {
                "id": "mlWorkspaceLocation",
                "name": "ML Workspace Location",
                "description": "Machine Learning Workspace location for connecting to the endpoint.\nRefer to <a href=\"https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-manage-workspace\" target=_blank>link</a> on how to create a ML workspace.",
                "type": null,
                "properties": {
                  "visibleRule": "scopeLevel == AzureMLWorkspace"
                },
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true,
                  "maxLength": 255
                }
              },
              {
                "id": "managementGroupId",
                "name": "Management Group ID",
                "description": "Management Group ID for connecting to the endpoint.\nRefer to <a href=\"https://docs.microsoft.com/en-us/azure/governance/management-groups/create\" target=_blank>link</a> on how to create a management group.",
                "type": null,
                "properties": {
                  "visibleRule": "scopeLevel == ManagementGroup",
                  "updatesNotAllowed": true
                },
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true,
                  "maxLength": 255
                }
              },
              {
                "id": "managementGroupName",
                "name": "Management Group Name",
                "description": "Management Group name for connecting to the endpoint.\nRefer to <a href=\"https://docs.microsoft.com/en-us/azure/governance/management-groups/create\" target=_blank>link</a> on how to create a management group.",
                "type": null,
                "properties": {
                  "visibleRule": "scopeLevel == ManagementGroup",
                  "updatesNotAllowed": true
                },
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true,
                  "maxLength": 255
                }
              },
              {
                "id": "oboAuthorization",
                "name": "Execute on behalf of (OBO) users",
                "description": "Use credentials of deployment submitter or approver for execution. Service principal stored with the endpoint is used for read only operations.",
                "type": null,
                "properties": null,
                "inputMode": "none",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "boolean"
                }
              },
              {
                "id": "creationMode",
                "name": "Creation Mode",
                "description": "Endpoint creation can be Automatic or Manual.",
                "type": null,
                "properties": null,
                "inputMode": "none",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "maxLength": 255
                }
              },
              {
                "id": "azureSpnRoleAssignmentId",
                "name": "Role Assignment Id",
                "description": "Id for contributor role in Azure subscription.",
                "type": null,
                "properties": null,
                "inputMode": "none",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "maxLength": 255
                }
              },
              {
                "id": "azureSpnPermissions",
                "name": "Azure permissions",
                "description": "Serialized list of azure permissions.",
                "type": null,
                "properties": null,
                "inputMode": "none",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "maxLength": 8192
                }
              },
              {
                "id": "spnObjectId",
                "name": "Service Principal Object Id",
                "description": "Id  for service principal object in Azure Active Directory.",
                "type": null,
                "properties": null,
                "inputMode": "none",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "maxLength": 255
                }
              },
              {
                "id": "appObjectId",
                "name": "Application Object Id",
                "description": "Id for application object in Azure Active Directory.",
                "type": null,
                "properties": null,
                "inputMode": "none",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "maxLength": 255
                }
              },
              {
                "id": "resourceId",
                "name": "Azure Resource Identifier",
                "description": " Resource Identifier for the azure resource",
                "type": null,
                "properties": null,
                "inputMode": "none",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "maxLength": 512
                }
              }
            ],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "accessToken",
                    "name": "Access Token",
                    "description": "Access token to be used for creating the service principal",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 256
                    },
                    "values": {
                      "inputId": "accessTokenInput",
                      "isDisabled": true
                    }
                  },
                  {
                    "id": "role",
                    "name": "Role",
                    "description": "Role to be assigned to the service principal",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 256
                    },
                    "values": {
                      "inputId": "roleInput",
                      "isDisabled": true
                    }
                  },
                  {
                    "id": "scope",
                    "name": "Scope",
                    "description": "Scope on which the role should be assigned to the service principal",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 1024
                    },
                    "values": {
                      "inputId": "scopeInput",
                      "isDisabled": true
                    }
                  },
                  {
                    "id": "accessTokenFetchingMethod",
                    "name": "Access Fetching Method",
                    "description": "How the Access Token is fetched",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 128
                    },
                    "values": {
                      "inputId": "accessTokenFetchingMethodInput",
                      "isDisabled": true
                    }
                  },
                  {
                    "id": "serviceprincipalid",
                    "name": "Service Principal Id",
                    "description": "Client Id for connecting to the endpoint.\nRefer to <a href=\"https://go.microsoft.com/fwlink/?LinkID=623000\" target=_blank>link</a> on how to create Azure Service Principal.",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "authenticationType",
                    "name": "Credential",
                    "description": "Choose credential type.",
                    "type": null,
                    "properties": null,
                    "inputMode": "radioButtons",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    },
                    "values": {
                      "inputId": "authenticationType",
                      "defaultValue": "spnKey",
                      "possibleValues": [
                        {
                          "value": "spnKey",
                          "displayValue": "Service principal key"
                        },
                        {
                          "value": "spnCertificate",
                          "displayValue": "Certificate"
                        }
                      ]
                    }
                  },
                  {
                    "id": "serviceprincipalkey",
                    "name": "Service principal key",
                    "description": "Service Principal Key for connecting to the endpoint.\nRefer to <a href=\"https://go.microsoft.com/fwlink/?LinkID=623000\" target=_blank>link</a> on how to create Azure Service Principal. Ignore this field if the authentication type is spnCertificate.",
                    "type": null,
                    "properties": {
                      "visibleRule": "authenticationType == spnKey"
                    },
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "servicePrincipalCertificate",
                    "name": "Certificate",
                    "description": "Provide PEM file content. Include both certificate and private key content.  Ignore this field if the authentication type is spnKey.",
                    "type": null,
                    "properties": {
                      "visibleRule": "authenticationType == spnCertificate"
                    },
                    "inputMode": "textArea",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "tenantid",
                    "name": "Tenant ID",
                    "description": "Tenant Id for connecting to the endpoint.\nRefer to <a href=\"https://go.microsoft.com/fwlink/?LinkID=623000\" target=_blank>link</a> on how to create Azure Service Principal.",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "guid",
                      "isRequired": true
                    }
                  }
                ],
                "scheme": "ServicePrincipal",
                "displayName": "Service Principal Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "tenantid",
                    "name": "Tenant Id",
                    "description": " Tenant Id of the subscription for which the MSI VM has access to",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "guid",
                      "isRequired": true
                    }
                  }
                ],
                "scheme": "ManagedServiceIdentity",
                "displayName": "Managed Identity Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [],
                "clientCertificates": [],
                "properties": {
                  "isVerifiable": "False"
                }
              },
              {
                "inputDescriptors": [
                  {
                    "id": "publishProfile",
                    "name": "Publish Profile",
                    "description": "Publish profile for connection to endpoint in XML format",
                    "type": null,
                    "properties": null,
                    "inputMode": "none",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 2000
                    }
                  },
                  {
                    "id": "accessTokenFetchingMethod",
                    "name": "Access Fetching Method",
                    "description": "How the Access Token is fetched",
                    "type": null,
                    "properties": null,
                    "inputMode": "none",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 128
                    }
                  },
                  {
                    "id": "accessToken",
                    "name": "Access Token",
                    "description": "Access token to be used for fetching publish profile",
                    "type": null,
                    "properties": null,
                    "inputMode": "none",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 256
                    }
                  },
                  {
                    "id": "tenantid",
                    "name": "Tenant Id",
                    "description": "Tenant Id for connecting to the endpoint.",
                    "type": null,
                    "properties": null,
                    "inputMode": "none",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "guid"
                    }
                  }
                ],
                "scheme": "PublishProfile",
                "displayName": "Publish Profile Based Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "dataSources": [
              {
                "name": "TestConnection",
                "endpointUrl": "{{{endpoint.url}}}{{#equals endpoint.scopeLevel 'ManagementGroup'}}providers/Microsoft.Management/managementGroups/{{{endpoint.managementGroupId}}}?api-version=2018-01-01-preview{{else}}subscriptions/{{{endpoint.subscriptionId}}}?api-version=2016-06-01{{/equals}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "TestConnectionManagementGroup",
                "endpointUrl": "{{{endpoint.url}}}/providers/Microsoft.Management/managementGroups/{{{endpoint.managementGroupId}}}?api-version=2018-01-01-preview",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureResourceGroups",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourcegroups?api-version=2016-02-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureResourceGroupsByExplicitSubscription",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{subscriptionId}}}/resourcegroups?api-version=2016-02-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureSubscriptions",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions?api-version=2016-06-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureMachineLearningWorkspaces",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourcegroups/{{{endpoint.resourceGroupName}}}/providers/Microsoft.MachineLearningServices/workspaces?api-version=2018-11-19",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Models",
                "endpointUrl": "https://{{endpoint.mlWorkspaceLocation}}.modelmanagement.azureml.net/api/subscriptions/{{endpoint.subscriptionId}}/resourceGroups/{{endpoint.resourceGroupName}}/providers/Microsoft.MachineLearningServices/workspaces/{{endpoint.mlWorkspaceName}}/models?count=50&api-version=2018-03-01-preview",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "ModelVersion",
                "endpointUrl": "https://{{endpoint.mlWorkspaceLocation}}.modelmanagement.azureml.net/api/subscriptions/{{endpoint.subscriptionId}}/resourceGroups/{{endpoint.resourceGroupName}}/providers/Microsoft.MachineLearningServices/workspaces/{{endpoint.mlWorkspaceName}}/models?count=50&api-version=2018-03-01-preview&name={{{definition}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "MachineLearningPipelinesList",
                "endpointUrl": "https://{{endpoint.mlWorkspaceLocation}}.aether.ms/api/v1.0/subscriptions/{{endpoint.subscriptionId}}/resourceGroups/{{endpoint.resourceGroupName}}/providers/Microsoft.MachineLearningServices/workspaces/{{endpoint.mlWorkspaceName}}/Pipelines/View",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$[*].PipelineEntity",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "MachineLearningPipelineRestEndpointsList",
                "endpointUrl": "https://{{endpoint.mlWorkspaceLocation}}.aether.ms/api/v1.0/subscriptions/{{endpoint.subscriptionId}}/resourceGroups/{{endpoint.resourceGroupName}}/providers/Microsoft.MachineLearningServices/workspaces/{{endpoint.mlWorkspaceName}}/PipelineEndpoints",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AKSComputeTargets",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{endpoint.subscriptionId}}/resourceGroups/{{endpoint.resourceGroupName}}/providers/Microsoft.MachineLearningServices/workspaces/{{endpoint.mlWorkspaceName}}/computes?api-version=2018-11-19",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.properties.computeType == 'AKS')]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AMLComputeTargets",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{endpoint.subscriptionId}}/resourceGroups/{{endpoint.resourceGroupName}}/providers/Microsoft.MachineLearningServices/workspaces/{{endpoint.mlWorkspaceName}}/computes?api-version=2018-11-19",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.properties.computeType == 'AmlCompute')]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AllComputeTargets",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{endpoint.subscriptionId}}/resourceGroups/{{endpoint.resourceGroupName}}/providers/Microsoft.MachineLearningServices/workspaces/{{endpoint.mlWorkspaceName}}/computes?api-version=2018-11-19",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "CreateWebhook",
                "endpointUrl": "https://{{endpoint.mlWorkspaceLocation}}.experiments.azureml.net/webhook/v1.0/subscriptions/{{endpoint.subscriptionId}}/resourceGroups/{{endpoint.resourceGroupName}}/providers/Microsoft.MachineLearningServices/workspaces/{{endpoint.mlWorkspaceName}}/webhooks/{{{webHookName}}}_{{{definition}}}",
                "requestVerb": "PUT",
                "requestContent": "{\"EventType\":\"ModelRegistered\", \"Id\": \"{{{webHookName}}}_{{{definition}}}\", \"CallbackUrl\":\"{{{payloadUrl}}}\", \"Filters\": {\"ModelName\": \"{{{definition}}}\"} }",
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "DeleteWebhook",
                "endpointUrl": "https://{{endpoint.mlWorkspaceLocation}}.experiments.azureml.net/webhook/v1.0/subscriptions/{{endpoint.subscriptionId}}/resourceGroups/{{endpoint.resourceGroupName}}/providers/Microsoft.MachineLearningServices/workspaces/{{endpoint.mlWorkspaceName}}/webhooks/{{{webHookName}}}_{{{definition}}}",
                "requestVerb": "DELETE",
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "ListWebhook",
                "endpointUrl": "https://{{endpoint.mlWorkspaceLocation}}.experiments.azureml.net/webhook/v1.0/subscriptions/{{endpoint.subscriptionId}}/resourceGroups/{{endpoint.resourceGroupName}}/providers/Microsoft.MachineLearningServices/workspaces/{{endpoint.mlWorkspaceName}}/webhooks",
                "requestVerb": "Get",
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "LinkWebhook",
                "endpointUrl": "https://{{endpoint.mlWorkspaceLocation}}.experiments.azureml.net/webhook/v1.0/subscriptions/{{endpoint.subscriptionId}}/resourceGroups/{{endpoint.resourceGroupName}}/providers/Microsoft.MachineLearningServices/workspaces/{{endpoint.mlWorkspaceName}}/webhooks/{{{webHookName}}}_{{{definition}}}",
                "requestVerb": "PUT",
                "requestContent": "{\"EventType\":\"ModelRegistered\", \"Id\": \"{{{webHookName}}}_{{{definition}}}\", \"CallbackUrl\":\"{{{payloadUrl}}}\", \"Filters\": {\"ModelName\": \"{{{definition}}}\"} }",
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "UnlinkWebhook",
                "endpointUrl": "https://{{endpoint.mlWorkspaceLocation}}.experiments.azureml.net/webhook/v1.0/subscriptions/{{endpoint.subscriptionId}}/resourceGroups/{{endpoint.resourceGroupName}}/providers/Microsoft.MachineLearningServices/workspaces/{{endpoint.mlWorkspaceName}}/webhooks/{{{webHookName}}}_{{{definition}}}",
                "requestVerb": "PUT",
                "requestContent": "{\"EventType\":\"ModelRegistered\", \"Id\": \"{{{webHookName}}}_{{{definition}}}\", \"CallbackUrl\":\"{{{payloadUrl}}}\", \"Filters\": {\"ModelName\": \"{{{definition}}}\"} }",
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureStorageAccountRM",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.Storage/storageAccounts?api-version=2015-06-15",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureStorageAccountRMandClassic",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resources?api-version=2014-04-01-preview&%24filter=(resourceType%20eq%20'microsoft.storage%2Fstorageaccounts'%20or%20resourceType%20eq%20'microsoft.classicstorage%2Fstorageaccounts')",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMStorageAccountByLocation",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.Storage/storageAccounts?api-version=2015-06-15",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.location =='{{location}}')].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMStorageAccountIdByName",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.Storage/storageAccounts?api-version=2015-06-15",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.name =='{{storageAccountName}}')].id",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureVirtualMachinesV2Id",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.Compute/virtualMachines?api-version=2015-06-15",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].id",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMWebAppNames",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.Web/sites?api-version=2015-08-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMWebAppNamesByResourceGroup",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/{{{endpoint.resourceGroups}}}/providers/Microsoft.Web/sites?api-version=2015-08-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMWebAppByResourceGroup",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/{{{endpoint.resourceGroupName}}}/providers/Microsoft.Web/sites?api-version=2016-08-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMWebAppSlots",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/{{{endpoint.resourceGroupName}}}/providers/Microsoft.Web/sites/{{{endpoint.webApp}}}/slots?api-version=2016-08-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMWebAppNamesByType",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.Web/sites?api-version=2015-08-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.kind=='{{{ #stringReplace 'linux' ',linux' WebAppKind}}}' || @.kind=='{{{ #stringReplace 'linux' 'app,linux' WebAppKind}}}' || @.kind=='{{{ #stringReplace 'linux' ',linux,container' WebAppKind}}}')].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMWebAppNamesByAppType",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resources?$filter=resourceType EQ 'Microsoft.Web/Sites'&$top=100&$skipToken={{{skipToken}}}&api-version=2016-07-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.kind=='{{{ #stringReplace ['web','functionAppLinux','Linux','Container','App','apiapp'] ['','functionapp,linux,container',',linux',',linux,container','app','api'] WebAppKind}}}')].name",
                "callbackContextTemplate": "{\"skipToken\": \"{{#getTokenValue response.nextLink}}{{extractUrlQueryParameter %24skipToken}}{{/getTokenValue}}\"}",
                "callbackRequiredTemplate": "{{isTokenPresent response.nextLink}}",
                "initialContextTemplate": "{\"skipToken\": \"\"}",
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureFunctionAppNamesByAppType",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resources?$filter=resourceType EQ 'Microsoft.Web/Sites'&$top=100&$skipToken={{{skipToken}}}&api-version=2016-07-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.kind=='{{{ #stringReplace 'functionAppLinux' 'functionapp,linux' WebAppKind}}}' || @.kind=='{{{ #stringReplace 'functionAppLinux' 'functionapp,linux,container' WebAppKind}}}' || @.kind=='{{{ #stringReplace 'functionApp' 'functionapp' WebAppKind}}}')].name",
                "callbackContextTemplate": "{\"skipToken\": \"{{#getTokenValue response.nextLink}}{{extractUrlQueryParameter %24skipToken}}{{/getTokenValue}}\"}",
                "callbackRequiredTemplate": "{{isTokenPresent response.nextLink}}",
                "initialContextTemplate": "{\"skipToken\": \"\"}",
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureWebAppContainerNamesByOSType",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resources?$filter=resourceType EQ 'Microsoft.Web/Sites'&$top=100&$skipToken={{{skipToken}}}&api-version=2016-07-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.kind=='{{{ #stringReplace 'Windows' 'app,container,xenon' osType}}}' || @.kind=='{{{ #stringReplace 'Linux' 'app,linux,container' osType}}}')].name",
                "callbackContextTemplate": "{\"skipToken\": \"{{#getTokenValue response.nextLink}}{{extractUrlQueryParameter %24skipToken}}{{/getTokenValue}}\"}",
                "callbackRequiredTemplate": "{{isTokenPresent response.nextLink}}",
                "initialContextTemplate": "{\"skipToken\": \"\"}",
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureWebAppContainerNames",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resources?$filter=resourceType EQ 'Microsoft.Web/Sites'&$top=100&$skipToken={{{skipToken}}}&api-version=2016-07-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.kind=='app,container,xenon' || @.kind=='app,linux,container')].name",
                "callbackContextTemplate": "{\"skipToken\": \"{{#getTokenValue response.nextLink}}{{extractUrlQueryParameter %24skipToken}}{{/getTokenValue}}\"}",
                "callbackRequiredTemplate": "{{isTokenPresent response.nextLink}}",
                "initialContextTemplate": "{\"skipToken\": \"\"}",
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMWebAppRuntimeStacksByOsType",
                "endpointUrl": "{{{endpoint.url}}}/providers/Microsoft.Web/availableStacks?api-version=2016-03-01&osTypeSelected=$(osTypeSelected)",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].properties.majorVersions[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMServerfarmId",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.Web/sites?api-version=2015-08-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.name=='{{WebAppName}}')].properties",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureAppKind",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.Web/sites?api-version=2015-08-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.name=='{{WebAppName}}')].properties",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMWebAppKind",
                "endpointUrl": "{{{endpoint.url}}}/{{{ServerfarmId}}}?api-version=2015-08-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMWebAppResourceGroup",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.Web/sites?api-version=2015-08-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@.name=='{{WebAppName}}')].properties.resourceGroup",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMWebAppSlotsId",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/$(ResourceGroupName)/providers/Microsoft.Web/sites/$(WebAppName)/slots?api-version=2018-11-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].id",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMLoadBalancers",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/{{{ResourceGroupName}}}/providers/Microsoft.Network/loadBalancers?api-version=2016-09-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureLocations",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/$(endpoint.subscriptionId)/locations?api-version=2016-09-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].displayName",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureLocations2",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/$(endpoint.subscriptionId)/locations?api-version=2016-09-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureLocationsByDeploymentScope",
                "endpointUrl": "{{#equals deploymentScope 'Management Group' 1}}{{{endpoint.url}}}/locations?api-version=2016-09-01{{else}}{{{endpoint.url}}}/subscriptions/{{{subscriptionId}}}/locations?api-version=2016-09-01{{/equals}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].displayName",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMContainerRegistries",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.ContainerRegistry/registries?api-version=2017-10-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMContainerRegistriesWithResourceGroup",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/{{{resourcegroup}}}/providers/Microsoft.ContainerRegistry/registries?api-version=2017-10-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMContainerRegistriesByRegistryUrl",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.ContainerRegistry/registries?api-version=2017-10-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[?(@properties.loginServer=='{{registryurl}}')]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureContainerRegistryRepositories",
                "endpointUrl": "https://{{{registryurl}}}/v2/_catalog",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.repositories[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.serviceprincipalid \":\" endpoint.serviceprincipalkey }}"
                  }
                ],
                "authenticationScheme": null
              },
              {
                "name": "AzureContainerRegistryTags",
                "endpointUrl": "https://{{{registryurl}}}/acr/v1/{{{definition}}}/_tags?orderby=timedesc",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.tags[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.serviceprincipalid \":\" endpoint.serviceprincipalkey }}"
                  }
                ],
                "authenticationScheme": null
              },
              {
                "name": "AzureContainerRegistryLatestTags",
                "endpointUrl": "https://{{{registryurl}}}/acr/v1/{{{definition}}}/_tags?orderby=timedesc&n=1",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.tags[0].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.serviceprincipalid \":\" endpoint.serviceprincipalkey }}"
                  }
                ],
                "authenticationScheme": null
              },
              {
                "name": "AzureContainerRegistryLatestTag",
                "endpointUrl": "https://{{{registryurl}}}/acr/v1/{{{definition}}}/_tags?orderby=timedesc&n=1",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.tags[0]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.serviceprincipalid \":\" endpoint.serviceprincipalkey }}"
                  }
                ],
                "authenticationScheme": null
              },
              {
                "name": "AzureContainerRegistryTag",
                "endpointUrl": "https://{{{registryurl}}}/acr/v1/{{{definition}}}/_tags/{{{tag}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.tag",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.serviceprincipalid \":\" endpoint.serviceprincipalkey }}"
                  }
                ],
                "authenticationScheme": null
              },
              {
                "name": "AzureKeyVaults",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.KeyVault/vaults?api-version=2016-10-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureKeyVaultsList",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.KeyVault/vaults?api-version=2016-10-01&$skiptoken={{{skipToken}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": "{\"skipToken\": \"{{#getTokenValue response.nextLink}}{{extractUrlQueryParameter %24skiptoken}}{{/getTokenValue}}\"}",
                "callbackRequiredTemplate": "{{isTokenPresent response.nextLink}}",
                "initialContextTemplate": "{\"skipToken\": \"\"}",
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureKeyVaultsListV2",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resources?$filter=resourceType%20eq%20%27Microsoft.KeyVault/vaults%27&api-version=2019-03-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureKeyVaultListVaults",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.KeyVault/vaults?api-version=2016-10-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureKeyVaultListVaultsWithSkipToken",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.KeyVault/vaults?api-version=2016-10-01&$skiptoken={{{SkipToken}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureKeyVaultListSecretsTestConnection",
                "endpointUrl": "https://{{{KeyVaultName}}}.{{{endpoint.AzureKeyVaultDnsSuffix}}}/secrets?maxresults=1&api-version=2016-10-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "{{{endpoint.AzureKeyVaultServiceEndpointResourceId}}}",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureKeyVaultGetSecretTestConnection",
                "endpointUrl": "https://{{{KeyVaultName}}}.{{{endpoint.AzureKeyVaultDnsSuffix}}}/secrets/nonexistingrandomsecretname?api-version=2016-10-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "{{{endpoint.AzureKeyVaultServiceEndpointResourceId}}}",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureKeyVaultSecrets",
                "endpointUrl": "https://{{{KeyVaultName}}}.{{{endpoint.AzureKeyVaultDnsSuffix}}}/secrets?api-version=2016-10-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "{{{endpoint.AzureKeyVaultServiceEndpointResourceId}}}",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureKeyVaultSecretsWithSkipToken",
                "endpointUrl": "https://{{{KeyVaultName}}}.{{{endpoint.AzureKeyVaultDnsSuffix}}}/secrets?api-version=2016-10-01&$skiptoken={{{SkipToken}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "{{{endpoint.AzureKeyVaultServiceEndpointResourceId}}}",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureVirtualMachineScaleSetNames",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.Compute/virtualMachineScaleSets?api-version=2017-03-30",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMDependencyData",
                "endpointUrl": "{{{endpoint.url}}}/metadata/endpoints?api-version=1.0",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMApplicationInsightsResources",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/{{{AppInsightsResourceGroupName}}}/providers/microsoft.insights/components?api-version=2015-05-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMResourceMetricDefinitions",
                "endpointUrl": "{{{endpoint.url}}}/{{{ResourceUri}}}/providers/Microsoft.insights/metricDefinitions?api-version=2016-03-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMResourceLegacyMetricDefinitions",
                "endpointUrl": "{{{endpoint.url}}}/{{{ResourceUri}}}/metricDefinitions?api-version=2014-04-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMResourcesInRGBasedOnType",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/{{{ResourceGroupName}}}/resources?$filter=resourceType EQ '{{{ResourceType}}}'&api-version=2017-05-10",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureRMResourcesInRG",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/{{{ResourceGroupName}}}/resources?api-version=2017-05-10",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureStorageContainer",
                "endpointUrl": "https://{{storageAccount}}.blob.{{endpoint.StorageEndpointSuffix}}/?comp=list",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "xpath:EnumerationResults/Containers/Container/Name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": {
                  "type": "ms.vss-endpoint.endpoint-auth-scheme-azure-storage",
                  "inputs": {
                    "storageAccountName": "{{ storageAccount }}",
                    "storageAccessKey": "{{ #GetAzureStorageAccessKey storageAccount }}"
                  }
                }
              },
              {
                "name": "AzureStorageContainerFiles",
                "endpointUrl": "https://{{storageAccount}}.blob.{{endpoint.StorageEndpointSuffix}}/{{container}}?comp=list&restype=container&prefix={{#joinPaths commonVirtualPath version /}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "xpath:EnumerationResults/Blobs/Blob/Name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": {
                  "type": "ms.vss-endpoint.endpoint-auth-scheme-azure-storage",
                  "inputs": {
                    "storageAccountName": "{{ storageAccount }}",
                    "storageAccessKey": "{{ #GetAzureStorageAccessKey storageAccount }}"
                  }
                }
              },
              {
                "name": "AzureStorageContainerFoldersInRoot",
                "endpointUrl": "https://{{storageAccount}}.blob.{{endpoint.StorageEndpointSuffix}}/{{container}}?comp=list&restype=container&delimiter=/&prefix={{#joinPaths commonVirtualPath /}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": null,
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": {
                  "type": "ms.vss-endpoint.endpoint-auth-scheme-azure-storage",
                  "inputs": {
                    "storageAccountName": "{{ storageAccount }}",
                    "storageAccessKey": "{{ #GetAzureStorageAccessKey storageAccount }}"
                  }
                }
              },
              {
                "name": "AzureMysqlServers",
                "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.DBforMySQL/servers?api-version=2017-12-01",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureKubernetesServices",
                "endpointUrl": "https://{{clusterUrl}}/api/v1/services/",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": {
                  "type": "ms.vss-endpoint.endpoint-auth-scheme-kubernetes",
                  "inputs": {
                    "kubeconfig": "{{ #GetKubeConfig clusterId}}"
                  }
                }
              },
              {
                "name": "AzureKubernetesIngresses",
                "endpointUrl": "https://{{clusterUrl}}/apis/extensions/v1beta1/ingresses",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": {
                  "type": "ms.vss-endpoint.endpoint-auth-scheme-kubernetes",
                  "inputs": {
                    "kubeconfig": "{{ #GetKubeConfig clusterId}}"
                  }
                }
              },
              {
                "name": "AzureKubernetesClusters",
                "endpointUrl": "{{{endpoint.url}}}subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.ContainerService/managedClusters?api-version=2018-03-31&$skiptoken={{{skipToken}}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.value[*]",
                "callbackContextTemplate": "{\"skipToken\": \"{{#getTokenValue response.nextLink}}{{extractUrlQueryParameter %24skiptoken}}{{/getTokenValue}}\"}",
                "callbackRequiredTemplate": "{{isTokenPresent response.nextLink}}",
                "initialContextTemplate": "{\"skipToken\": \"\"}",
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureKubernetesClusterRbacEnabled",
                "endpointUrl": "{{{endpoint.url}}}{{clusterId}}?api-version=2018-03-31",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.properties.enableRBAC",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureKubernetesClusterKubeConfig",
                "endpointUrl": "{{{endpoint.url}}}{{clusterId}}/accessProfiles/{{roleName}}/listCredential?api-version=2018-03-31",
                "requestVerb": "Post",
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.properties.kubeConfig",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureKubernetesClusterAdminKubeConfig",
                "endpointUrl": "{{{endpoint.url}}}{{clusterId}}/listClusterAdminCredential?api-version=2019-08-01",
                "requestVerb": "Post",
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.kubeconfigs[0].value",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "AzureSiteExtensions",
                "endpointUrl": "https://api-v2v3search-0.nuget.org/query?q=Tags%3AAzureSiteExtension&prerelease=true&take=500",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.data[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": {
                  "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
                  "inputs": null
                }
              }
            ],
            "dependencyData": [
              {
                "map": [
                  {
                    "key": "AzureCloud",
                    "value": [
                      {
                        "key": "environmentUrl",
                        "value": "https://management.azure.com/"
                      },
                      {
                        "key": "galleryUrl",
                        "value": "https://gallery.azure.com/"
                      },
                      {
                        "key": "serviceManagementUrl",
                        "value": "https://management.core.windows.net/"
                      },
                      {
                        "key": "resourceManagerUrl",
                        "value": "https://management.azure.com/"
                      },
                      {
                        "key": "activeDirectoryAuthority",
                        "value": "https://login.microsoftonline.com/"
                      },
                      {
                        "key": "environmentAuthorityUrl",
                        "value": "https://login.windows.net/"
                      },
                      {
                        "key": "graphUrl",
                        "value": "https://graph.windows.net/"
                      },
                      {
                        "key": "managementPortalUrl",
                        "value": "https://manage.windowsazure.com/"
                      },
                      {
                        "key": "armManagementPortalUrl",
                        "value": "https://portal.azure.com/"
                      },
                      {
                        "key": "activeDirectoryServiceEndpointResourceId",
                        "value": "https://management.core.windows.net/"
                      },
                      {
                        "key": "sqlDatabaseDnsSuffix",
                        "value": ".database.windows.net"
                      },
                      {
                        "key": "AzureKeyVaultDnsSuffix",
                        "value": "vault.azure.net"
                      },
                      {
                        "key": "AzureKeyVaultServiceEndpointResourceId",
                        "value": "https://vault.azure.net"
                      },
                      {
                        "key": "StorageEndpointSuffix",
                        "value": "core.windows.net"
                      },
                      {
                        "key": "EnableAdfsAuthentication",
                        "value": "false"
                      }
                    ]
                  },
                  {
                    "key": "AzureChinaCloud",
                    "value": [
                      {
                        "key": "environmentUrl",
                        "value": "https://management.chinacloudapi.cn/"
                      },
                      {
                        "key": "galleryUrl",
                        "value": "https://gallery.chinacloudapi.cn/"
                      },
                      {
                        "key": "serviceManagementUrl",
                        "value": "https://management.core.chinacloudapi.cn/"
                      },
                      {
                        "key": "resourceManagerUrl",
                        "value": "https://management.chinacloudapi.cn/"
                      },
                      {
                        "key": "activeDirectoryAuthority",
                        "value": "https://login.chinacloudapi.cn/"
                      },
                      {
                        "key": "environmentAuthorityUrl",
                        "value": "https://login.chinacloudapi.cn/"
                      },
                      {
                        "key": "graphUrl",
                        "value": "https://graph.chinacloudapi.cn/"
                      },
                      {
                        "key": "managementPortalUrl",
                        "value": "https://manage.windowsazure.cn/"
                      },
                      {
                        "key": "armManagementPortalUrl",
                        "value": "https://portal.azure.cn/"
                      },
                      {
                        "key": "activeDirectoryServiceEndpointResourceId",
                        "value": "https://management.core.chinacloudapi.cn/"
                      },
                      {
                        "key": "sqlDatabaseDnsSuffix",
                        "value": ".database.chinacloudapi.cn"
                      },
                      {
                        "key": "AzureKeyVaultDnsSuffix",
                        "value": "vault.azure.cn"
                      },
                      {
                        "key": "AzureKeyVaultServiceEndpointResourceId",
                        "value": "https://vault.azure.cn"
                      },
                      {
                        "key": "StorageEndpointSuffix",
                        "value": "core.chinacloudapi.cn"
                      },
                      {
                        "key": "EnableAdfsAuthentication",
                        "value": "false"
                      }
                    ]
                  },
                  {
                    "key": "AzureUSGovernment",
                    "value": [
                      {
                        "key": "environmentUrl",
                        "value": "https://management.usgovcloudapi.net/"
                      },
                      {
                        "key": "galleryUrl",
                        "value": "https://gallery.usgovcloudapi.net/"
                      },
                      {
                        "key": "serviceManagementUrl",
                        "value": "https://management.core.usgovcloudapi.net/"
                      },
                      {
                        "key": "resourceManagerUrl",
                        "value": "https://management.usgovcloudapi.net/"
                      },
                      {
                        "key": "activeDirectoryAuthority",
                        "value": "https://login.microsoftonline.us/"
                      },
                      {
                        "key": "environmentAuthorityUrl",
                        "value": "https://login.microsoftonline.us/"
                      },
                      {
                        "key": "graphUrl",
                        "value": "https://graph.windows.net/"
                      },
                      {
                        "key": "managementPortalUrl",
                        "value": "https://manage.windowsazure.us/"
                      },
                      {
                        "key": "armManagementPortalUrl",
                        "value": "https://portal.azure.us"
                      },
                      {
                        "key": "activeDirectoryServiceEndpointResourceId",
                        "value": "https://management.core.usgovcloudapi.net/"
                      },
                      {
                        "key": "sqlDatabaseDnsSuffix",
                        "value": ".database.usgovcloudapi.net"
                      },
                      {
                        "key": "AzureKeyVaultDnsSuffix",
                        "value": "vault.usgovcloudapi.net"
                      },
                      {
                        "key": "AzureKeyVaultServiceEndpointResourceId",
                        "value": "https://vault.usgovcloudapi.net"
                      },
                      {
                        "key": "StorageEndpointSuffix",
                        "value": "core.usgovcloudapi.net"
                      },
                      {
                        "key": "EnableAdfsAuthentication",
                        "value": "false"
                      }
                    ]
                  },
                  {
                    "key": "AzureGermanCloud",
                    "value": [
                      {
                        "key": "environmentUrl",
                        "value": "https://management.microsoftazure.de/"
                      },
                      {
                        "key": "galleryUrl",
                        "value": "https://gallery.cloudapi.de/"
                      },
                      {
                        "key": "serviceManagementUrl",
                        "value": "https://management.core.cloudapi.de"
                      },
                      {
                        "key": "resourceManagerUrl",
                        "value": "https://management.microsoftazure.de/"
                      },
                      {
                        "key": "activeDirectoryAuthority",
                        "value": "https://login.microsoftonline.de/"
                      },
                      {
                        "key": "environmentAuthorityUrl",
                        "value": "https://login.microsoftonline.de/"
                      },
                      {
                        "key": "graphUrl",
                        "value": "https://graph.cloudapi.de/"
                      },
                      {
                        "key": "managementPortalUrl",
                        "value": "http://portal.microsoftazure.de/"
                      },
                      {
                        "key": "armManagementPortalUrl",
                        "value": "https://portal.azure.us"
                      },
                      {
                        "key": "activeDirectoryServiceEndpointResourceId",
                        "value": "https://management.core.cloudapi.de/"
                      },
                      {
                        "key": "sqlDatabaseDnsSuffix",
                        "value": ".database.cloudapi.de"
                      },
                      {
                        "key": "AzureKeyVaultDnsSuffix",
                        "value": "vault.microsoftazure.de"
                      },
                      {
                        "key": "AzureKeyVaultServiceEndpointResourceId",
                        "value": "https://vault.microsoftazure.de"
                      },
                      {
                        "key": "StorageEndpointSuffix",
                        "value": "core.cloudapi.de"
                      },
                      {
                        "key": "EnableAdfsAuthentication",
                        "value": "false"
                      }
                    ]
                  }
                ],
                "input": "environment"
              }
            ],
            "trustedHosts": [
              "azurecr.cn",
              "azurecr.io",
              "azmk8s.io",
              "vault.azure.net",
              "vault.azure.cn",
              "vault.usgovcloudapi.net",
              "vault.microsoftazure.de",
              "core.cloudapi.de",
              "windows-int.net",
              "core.windows.net",
              "core.chinacloudapi.cn",
              "core.usgovcloudapi.net",
              "nuget.org",
              "modelmanagement.azureml.net",
              "experiments.azureml.net",
              "aether.ms"
            ],
            "name": "azurerm",
            "displayName": "Azure Resource Manager",
            "description": "Service connection type for Azure Resource Manager connections",
            "endpointUrl": {
              "displayName": "Server Url",
              "helpText": "",
              "value": "https://management.azure.com/",
              "isVisible": "true",
              "dependsOn": {
                "input": "environment",
                "map": [
                  {
                    "key": "AzureCloud",
                    "value": "https://management.azure.com/"
                  },
                  {
                    "key": "AzureChinaCloud",
                    "value": "https://management.chinacloudapi.cn/"
                  },
                  {
                    "key": "AzureUSGovernment",
                    "value": "https://management.usgovcloudapi.net/"
                  },
                  {
                    "key": "AzureGermanCloud",
                    "value": "https://management.microsoftazure.de/"
                  },
                  {
                    "key": "AzureStack",
                    "value": ""
                  }
                ]
              }
            },
            "helpMarkDown": "For Service Principal: refer to <a href=\"https://go.microsoft.com/fwlink/?LinkID=623000\" target=_blank><b>link</b></a>. <a href=\"https://msdn.microsoft.com/Library/vs/alm/Release/author-release-definition/understanding-tasks#serviceconnections\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-services-azure/18.166.0.653816409/Assets/icons/azure-endpoint-icon.png",
            "uiContributionId": "endpoint-editor-component-azurerm"
          },
          {
            "inputDescriptors": [],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "certLookup",
                    "name": "Server Certificate Lookup",
                    "description": "Server Certificate Lookup",
                    "type": null,
                    "properties": null,
                    "inputMode": "combo",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {},
                    "values": {
                      "inputId": "certLookupValues",
                      "defaultValue": "Thumbprint",
                      "possibleValues": [
                        {
                          "value": "Thumbprint",
                          "displayValue": "Thumbprint"
                        },
                        {
                          "value": "CommonName",
                          "displayValue": "Common Name"
                        }
                      ]
                    }
                  },
                  {
                    "id": "servercertthumbprint",
                    "name": "Server Certificate Thumbprint(s)",
                    "description": "The thumbprint(s) of the cluster's certificate(s). This is used to verify the identity of the cluster. This value overrides the publish profile. Seperate multiple thumbprints with a comma (',')",
                    "type": null,
                    "properties": {
                      "visibleRule": "certLookup == Thumbprint"
                    },
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "servercertcommonname",
                    "name": "Server Certificate Common Name(s)",
                    "description": "The common name(s) of the cluster's certificate(s). This is used to verify the identity of the cluster. This value overrides the publish profile. Seperate multiple common names with a comma (',')",
                    "type": null,
                    "properties": {
                      "visibleRule": "certLookup == CommonName"
                    },
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "certificate",
                    "name": "Client Certificate",
                    "description": "Base64 encoding of the cluster's client certificate file.<p>You can use the following PowerShell script to obtain a Base64-encoded representation of a certificate:<br>[System.Convert]::ToBase64String([System.IO.File]::ReadAllBytes(&quot;C:\\path\\to\\certificate.pfx&quot;))",
                    "type": null,
                    "properties": null,
                    "inputMode": "textArea",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "certificatepassword",
                    "name": "Password",
                    "description": "Password for the certificate.",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 300
                    }
                  }
                ],
                "scheme": "Certificate",
                "displayName": "Certificate Based",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "certLookup",
                    "name": "Server Certificate Lookup",
                    "description": "Server Certificate Lookup",
                    "type": null,
                    "properties": null,
                    "inputMode": "combo",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {},
                    "values": {
                      "inputId": "certLookupValues",
                      "defaultValue": "Thumbprint",
                      "possibleValues": [
                        {
                          "value": "Thumbprint",
                          "displayValue": "Thumbprint"
                        },
                        {
                          "value": "CommonName",
                          "displayValue": "Common Name"
                        }
                      ]
                    }
                  },
                  {
                    "id": "servercertthumbprint",
                    "name": "Server Certificate Thumbprint",
                    "description": "The thumbprint of the cluster's certificate. This is used to verify the identity of the cluster. This value overrides the publish profile.",
                    "type": null,
                    "properties": {
                      "visibleRule": "certLookup == Thumbprint"
                    },
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "servercertcommonname",
                    "name": "Server Common Name",
                    "description": "The common name of the cluster's certificate. This is used to verify the identity of the cluster. This value overrides the publish profile.",
                    "type": null,
                    "properties": {
                      "visibleRule": "certLookup == CommonName"
                    },
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Specify an Azure Active Directory account.",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "Password for the Azure Active Directory account.",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Azure Active Directory credential",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "Unsecured",
                    "name": "Unsecured",
                    "description": "Connect to a cluster without any credentials. <a href=\"https://go.microsoft.com/fwlink/?linkid=851141\" target=_blank>Learn more.</a>",
                    "type": null,
                    "properties": null,
                    "inputMode": "checkBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "boolean"
                    }
                  },
                  {
                    "id": "ClusterSpn",
                    "name": "Cluster SPN",
                    "description": "Fully qualified domain SPN for gMSA account. This is applicable only if &quot;Use windows security&quot; option is enabled. Refer <a href=\"https://go.microsoft.com/fwlink/?linkid=851142\" target=_blank>here.</a>",
                    "type": null,
                    "properties": {
                      "visibleRule": "Unsecured == false"
                    },
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 300
                    },
                    "dependencyInputIds": [
                      "Unsecured"
                    ]
                  }
                ],
                "scheme": "None",
                "displayName": "Windows security using  gMSA",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "servicefabric",
            "displayName": "Service Fabric",
            "description": "Service connection type for all Service Fabric cluster connections",
            "endpointUrl": {
              "displayName": "Cluster Endpoint",
              "helpText": "Client connection endpoint for the cluster. Prefix the value with &quot;tcp://&quot;. This value overrides the publish profile."
            },
            "helpMarkDown": "<a href=\"https://msdn.microsoft.com/Library/vs/alm/Release/author-release-definition/understanding-tasks#serviceconnections\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-services-azure/18.166.0.653816409/Assets/icons/azure-service-fabric-icon.png"
          },
          {
            "inputDescriptors": [
              {
                "id": "serviceBusQueueName",
                "name": "Service Bus Queue Name",
                "description": "Service Bus queue (EntityPath). See for <a href=\"https://msdn.microsoft.com/en-us/library/azure/hh780781.aspx\" target=_blank>addressing and protocol</a>",
                "type": null,
                "properties": null,
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true,
                  "maxLength": 127
                }
              }
            ],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "serviceBusConnectionString",
                    "name": "Service Bus Connection string",
                    "description": "Endpoint URL from the connection string (exclude entityPath). See <a href=\"https://azure.microsoft.com/en-us/documentation/articles/service-bus-dotnet-get-started-with-queues/\" target=_blank>getting started with queues</a>",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 255
                    }
                  }
                ],
                "scheme": "None",
                "displayName": "No Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "AzureServiceBus",
            "displayName": "Azure Service Bus",
            "description": "Service connection type for Azure Service Bus connections",
            "endpointUrl": {
              "displayName": "Server Url",
              "helpText": "",
              "value": "https://management.core.windows.net/",
              "isVisible": "false"
            },
            "helpMarkDown": "",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-services-azure/18.166.0.653816409/Assets/Microsoft.VisualStudio.Services.Icons.Default"
          },
          {
            "inputDescriptors": [],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Node Name (Username)",
                    "description": "Chef username",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "password",
                    "name": "Client Key",
                    "description": "Client key specified in the .pem file",
                    "type": null,
                    "properties": null,
                    "inputMode": "textArea",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Basic Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "chef",
            "displayName": "Chef",
            "description": "Service connection type for all Chef connections",
            "helpMarkDown": "<a href=\"https://go.microsoft.com/fwlink/?linkid=875421\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-services-chef/18.166.0.295519308/Assets/icons/icon-chef-endpoint.png"
          },
          {
            "inputDescriptors": [
              {
                "id": "registrytype",
                "name": "Registry Type",
                "description": "The type of Docker Registry",
                "type": null,
                "properties": null,
                "inputMode": "combo",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true
                },
                "values": {
                  "inputId": "registrytypeInput",
                  "defaultValue": "Others",
                  "possibleValues": [
                    {
                      "value": "Others",
                      "displayValue": "Others"
                    },
                    {
                      "value": "DockerHub",
                      "displayValue": "Docker Hub"
                    },
                    {
                      "value": "ACR",
                      "displayValue": "Azure Container Registry"
                    }
                  ]
                }
              },
              {
                "id": "subscriptionId",
                "name": "Azure Subscription Id",
                "description": "Azure Subscription Id",
                "type": null,
                "properties": {
                  "visibleRule": "registrytype == ACR"
                },
                "inputMode": "combo",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              },
              {
                "id": "subscriptionName",
                "name": "Azure Subscription Name",
                "description": "Azure Subscription Name",
                "type": null,
                "properties": {
                  "visibleRule": "registrytype == ACR"
                },
                "inputMode": "combo",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              },
              {
                "id": "registryId",
                "name": "ACR Name",
                "description": "The ACR id",
                "type": null,
                "properties": {
                  "visibleRule": "registrytype == ACR"
                },
                "inputMode": "none",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              },
              {
                "id": "spnObjectId",
                "name": "Service Principal Object Id",
                "description": "Id  for service principal object in Azure Active Directory.",
                "type": null,
                "properties": null,
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "maxLength": 255
                }
              },
              {
                "id": "appObjectId",
                "name": "Application Object Id",
                "description": "Id for application object in Azure Active Directory.",
                "type": null,
                "properties": null,
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "maxLength": 255
                }
              },
              {
                "id": "azureSpnRoleAssignmentId",
                "name": "Role Assignment Id",
                "description": "Id for contributor role in Azure subscription.",
                "type": null,
                "properties": null,
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "maxLength": 255
                }
              },
              {
                "id": "azureSpnPermissions",
                "name": "Azure permissions",
                "description": "Serialized list of azure permissions.",
                "type": null,
                "properties": null,
                "inputMode": "textBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "maxLength": 8192
                }
              }
            ],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "registry",
                    "name": "Docker Registry",
                    "description": "The URL for your Docker Registry",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    },
                    "values": {
                      "inputId": "registryInput",
                      "defaultValue": "https://index.docker.io/v1/"
                    }
                  },
                  {
                    "id": "username",
                    "name": "Docker ID",
                    "description": "The username for your Docker Registry",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "The password for your Docker Registry",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "email",
                    "name": "Email",
                    "description": "The email address for your Docker Registry",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Basic Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "JWT {{ #getTokenUsingBasicAuth { 'username' : 'endpoint.username', 'password' : 'endpoint.password', 'resultSelector' : 'jsonpath:$.token', 'method':'post', 'authServerUrl':'endpoint.url/v2/users/login/', 'body' : {'username' : 'endpoint.username', 'password' : 'endpoint.password'} } }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "accessToken",
                    "name": "Access Token",
                    "description": "Access token to be used for creating the service principal",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 256
                    },
                    "values": {
                      "inputId": "accessTokenInput",
                      "isDisabled": true
                    }
                  },
                  {
                    "id": "scope",
                    "name": "Scope",
                    "description": "Scope on which the role should be assigned to the service principal",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 1024
                    },
                    "values": {
                      "inputId": "scopeInput",
                      "isDisabled": true
                    }
                  },
                  {
                    "id": "loginServer",
                    "name": "Docker Registry Login Server",
                    "description": "The login server for your Docker Registry",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 256
                    },
                    "values": {
                      "inputId": "loginServerInput",
                      "isDisabled": true
                    }
                  },
                  {
                    "id": "role",
                    "name": "Role",
                    "description": "Role to be assigned to the service principal",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 256
                    },
                    "values": {
                      "inputId": "roleInput",
                      "isDisabled": true
                    }
                  },
                  {
                    "id": "accessTokenFetchingMethod",
                    "name": "Access Fetching Method",
                    "description": "How the Access Token is fetched",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 128
                    },
                    "values": {
                      "inputId": "accessTokenFetchingMethodInput",
                      "isDisabled": true
                    }
                  },
                  {
                    "id": "serviceprincipalid",
                    "name": "Service Principal Id",
                    "description": "Client Id for connecting to the endpoint.\nRefer to <a href=\"https://go.microsoft.com/fwlink/?LinkID=623000\" target=_blank>link</a> on how to create Azure Service Principal.",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "authenticationType",
                    "name": "Credential",
                    "description": "Choose credential type.",
                    "type": null,
                    "properties": null,
                    "inputMode": "radioButtons",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    },
                    "values": {
                      "inputId": "authenticationType",
                      "defaultValue": "spnKey",
                      "possibleValues": [
                        {
                          "value": "spnKey",
                          "displayValue": "Service principal key"
                        },
                        {
                          "value": "spnCertificate",
                          "displayValue": "Certificate"
                        }
                      ]
                    }
                  },
                  {
                    "id": "serviceprincipalkey",
                    "name": "Service principal key",
                    "description": "Service Principal Key for connecting to the endpoint.\nRefer to <a href=\"https://go.microsoft.com/fwlink/?LinkID=623000\" target=_blank>link</a> on how to create Azure Service Principal. Ignore this field if the authentication type is spnCertificate.",
                    "type": null,
                    "properties": {
                      "visibleRule": "authenticationType == spnKey"
                    },
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "servicePrincipalCertificate",
                    "name": "Certificate",
                    "description": "Provide PEM file content. Include both certificate and private key content.  Ignore this field if the authentication type is spnKey.",
                    "type": null,
                    "properties": {
                      "visibleRule": "authenticationType == spnCertificate"
                    },
                    "inputMode": "textArea",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "tenantid",
                    "name": "Tenant ID",
                    "description": "Tenant Id for connecting to the endpoint.\nRefer to <a href=\"https://go.microsoft.com/fwlink/?LinkID=623000\" target=_blank>link</a> on how to create Azure Service Principal.",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "guid",
                      "isRequired": true
                    }
                  }
                ],
                "scheme": "ServicePrincipal",
                "displayName": "Service Principal Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "dataSources": [
              {
                "name": "TestConnection",
                "endpointUrl": "{{endpoint.url}}v2/repositories/namespaces/",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.values[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Commits",
                "endpointUrl": "{{endpoint.url}}v2/repositories/{{definition}}/tags/?page_size=100",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.results[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "LatestCommit",
                "endpointUrl": "{{endpoint.url}}v2/repositories/{{definition}}/tags/?page_size=1",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.results[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Repositories",
                "endpointUrl": "{{endpoint.url}}v2/repositories/{{namespaces}}/?page_size=100",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.results[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Namespaces",
                "endpointUrl": "{{endpoint.url}}v2/repositories/namespaces/",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.namespaces[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "LatestFullCommit",
                "endpointUrl": "{{endpoint.url}}v2/repositories/{{definition}}/tags/?page_size=1",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.results[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "SpecificFullCommit",
                "endpointUrl": "{{endpoint.url}}v2/repositories/{{definition}}/tags/{{tag}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              }
            ],
            "name": "dockerregistry",
            "displayName": "Docker Registry",
            "description": "Service connection type for a Docker Registry",
            "endpointUrl": {
              "helpText": "",
              "value": "https://hub.docker.com/",
              "isVisible": "False"
            },
            "helpMarkDown": "",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-services-docker/18.166.0.1629205080/Assets/Microsoft.VisualStudio.Services.Icons.Default",
            "uiContributionId": "endpoint-editor-component-docker-registry"
          },
          {
            "inputDescriptors": [],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "cacert",
                    "name": "CA Certificate",
                    "description": "Contents of ca.pem",
                    "type": null,
                    "properties": null,
                    "inputMode": "textArea",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "cert",
                    "name": "Certificate",
                    "description": "Contents of cert.pem",
                    "type": null,
                    "properties": null,
                    "inputMode": "textArea",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "key",
                    "name": "Key",
                    "description": "Contents of key.pem",
                    "type": null,
                    "properties": null,
                    "inputMode": "textArea",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true
                    }
                  },
                  {
                    "id": "certificate",
                    "name": "Certificate",
                    "description": "Content of the certificate",
                    "type": null,
                    "properties": null,
                    "inputMode": "textArea",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    },
                    "values": {
                      "inputId": "certificateInput",
                      "defaultValue": "",
                      "isDisabled": true
                    }
                  }
                ],
                "scheme": "Certificate",
                "displayName": "Certificate Based",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "name": "dockerhost",
            "displayName": "Docker Host",
            "description": "Service connection type for a Docker Host",
            "helpMarkDown": "Refer <a href=\"http://aka.ms/ms-vscs-rm-secure-docker-daemon\" target=_blank>link</a> to learn more",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-services-docker/18.166.0.1629205080/Assets/Microsoft.VisualStudio.Services.Icons.Default"
          },
          {
            "inputDescriptors": [
              {
                "id": "acceptUntrustedCerts",
                "name": "AcceptUntrustedCerts",
                "description": "Trust Certificate",
                "type": null,
                "properties": null,
                "inputMode": "checkBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              },
              {
                "id": "authorizationType",
                "name": "Authorization Type",
                "description": "The type of authorization",
                "type": null,
                "properties": null,
                "inputMode": "combo",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string",
                  "isRequired": true
                },
                "values": {
                  "inputId": "authorizationTypeInput",
                  "defaultValue": "Kubeconfig",
                  "possibleValues": [
                    {
                      "value": "Kubeconfig",
                      "displayValue": "Kubeconfig"
                    },
                    {
                      "value": "ServiceAccount",
                      "displayValue": "Service Account"
                    },
                    {
                      "value": "AzureSubscription",
                      "displayValue": "Azure Subscription"
                    }
                  ]
                }
              },
              {
                "id": "azureSubscriptionId",
                "name": "Azure Subscription Id",
                "description": "Azure Subscription Id",
                "type": null,
                "properties": {
                  "visibleRule": "authorizationType == AzureSubscription"
                },
                "inputMode": "combo",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              },
              {
                "id": "azureSubscriptionName",
                "name": "Azure Subscription Name",
                "description": "Azure Subscription Name",
                "type": null,
                "properties": {
                  "visibleRule": "authorizationType == AzureSubscription"
                },
                "inputMode": "combo",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              },
              {
                "id": "clusterId",
                "name": "AKS Cluster",
                "description": "The AKS cluster id",
                "type": null,
                "properties": {
                  "visibleRule": "authorizationType == AzureSubscription"
                },
                "inputMode": "none",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              },
              {
                "id": "operation.createNamespace",
                "name": "createNamespace",
                "description": "Create a new namespace",
                "type": null,
                "properties": null,
                "inputMode": "checkBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              },
              {
                "id": "operation.createOrReuseNamespace",
                "name": "createOrReuseNamespace",
                "description": "Create a new namespace if doesn't exist",
                "type": null,
                "properties": null,
                "inputMode": "checkBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              },
              {
                "id": "operation.type",
                "name": "Operation Type",
                "description": "Operation to perform in the endpoint job",
                "type": null,
                "properties": null,
                "inputMode": "none",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              },
              {
                "id": "namespace",
                "name": "Namespace",
                "description": "The Kubernetes namespace to scope the permission",
                "type": null,
                "properties": {
                  "visibleRule": "authorizationType == AzureSubscription"
                },
                "inputMode": "none",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "string"
                }
              },
              {
                "id": "clusterAdmin",
                "name": "Use cluster admin credentials",
                "description": "Use cluster admin credentials",
                "type": null,
                "properties": {
                  "visibleRule": "authorizationType == AzureSubscription"
                },
                "inputMode": "checkBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "boolean"
                }
              }
            ],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "serviceAccountCertificate",
                    "name": "Certificate",
                    "description": "Certificate for connection to endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textArea",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  },
                  {
                    "id": "isCreatedFromSecretYaml",
                    "name": "isCreatedFromSecretYaml",
                    "description": "Enables the new service account ui",
                    "type": null,
                    "properties": null,
                    "inputMode": "checkBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  },
                  {
                    "id": "apitoken",
                    "name": "API Token",
                    "description": "API Token for connection to endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 2000
                    }
                  }
                ],
                "scheme": "Token",
                "displayName": "Token Based Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Authorization",
                    "value": "Bearer {{#decodeBase64 endpoint.apiToken}}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              },
              {
                "inputDescriptors": [
                  {
                    "id": "kubeconfig",
                    "name": "Kubeconfig",
                    "description": "Contents of kubernetes config",
                    "type": null,
                    "properties": null,
                    "inputMode": "textArea",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 63000
                    }
                  },
                  {
                    "id": "clusterContext",
                    "name": "ClusterContext",
                    "description": "Select Kubernetes cluster context",
                    "type": null,
                    "properties": null,
                    "inputMode": "combo",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    },
                    "hasDynamicValueInformation": true
                  },
                  {
                    "id": "serviceAccountCertificate",
                    "name": "Certificate",
                    "description": "Certificate for connection to endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "none",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  },
                  {
                    "id": "apiToken",
                    "name": "API Token",
                    "description": "Service account token",
                    "type": null,
                    "properties": null,
                    "inputMode": "none",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  },
                  {
                    "id": "roleBindingName",
                    "name": "Role Binding Name",
                    "description": "Role Binding Name",
                    "type": null,
                    "properties": null,
                    "inputMode": "none",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  },
                  {
                    "id": "secretName",
                    "name": "Secret Name",
                    "description": "Secret Name",
                    "type": null,
                    "properties": null,
                    "inputMode": "none",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  },
                  {
                    "id": "serviceAccountName",
                    "name": "Service Account Name",
                    "description": "Service Account Name",
                    "type": null,
                    "properties": null,
                    "inputMode": "none",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  },
                  {
                    "id": "azureTenantId",
                    "name": "Tenant Id",
                    "description": "Tenant Id for connecting to the endpoint.\nRefer to <a href=\"https://go.microsoft.com/fwlink/?LinkID=623000\" target=_blank>link</a> on how to create Azure Service Principal.",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "guid"
                    }
                  },
                  {
                    "id": "spnId",
                    "name": "SPN Id",
                    "description": "SPN Id",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  },
                  {
                    "id": "spnKey",
                    "name": "SPN Key",
                    "description": "SPN Key",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  },
                  {
                    "id": "spnCreationMethod",
                    "name": "SPN Creation Method",
                    "description": "SPN Creation Method",
                    "type": null,
                    "properties": null,
                    "inputMode": "none",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string"
                    }
                  },
                  {
                    "id": "azureAccessToken",
                    "name": "Access Token",
                    "description": "Access token to be used for azure authorization",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 256
                    },
                    "values": {
                      "inputId": "accessTokenInput",
                      "isDisabled": true
                    }
                  },
                  {
                    "id": "accessTokenFetchingMethod",
                    "name": "Access Fetching Method",
                    "description": "How the Access Token is fetched",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 128
                    },
                    "values": {
                      "inputId": "accessTokenFetchingMethodInput",
                      "isDisabled": true
                    }
                  },
                  {
                    "id": "azureEnvironment",
                    "name": "Azure Environment",
                    "description": "Microsoft Azure Environment for the subscription",
                    "type": null,
                    "properties": null,
                    "inputMode": "combo",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "maxLength": 300
                    },
                    "values": {
                      "inputId": "environmentValues",
                      "defaultValue": "AzureCloud",
                      "possibleValues": [
                        {
                          "value": "AzureCloud",
                          "displayValue": "Azure Cloud"
                        },
                        {
                          "value": "AzureChinaCloud",
                          "displayValue": "Azure China Cloud"
                        },
                        {
                          "value": "AzureUSGovernment",
                          "displayValue": "Azure US Government"
                        },
                        {
                          "value": "AzureGermanCloud",
                          "displayValue": "Azure German Cloud"
                        }
                      ]
                    }
                  }
                ],
                "scheme": "kubernetes",
                "displayName": "Kubernetes",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "dataSources": [
              {
                "name": "TestConnection",
                "endpointUrl": "{{endpoint.url}}/api/v1/nodes",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.values[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "TestKubernetesNamespaceConnection",
                "endpointUrl": "{{endpoint.url}}/api/v1/namespaces/{{KubernetesNamespace}}?pretty=false",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesPodsInNamespace",
                "endpointUrl": "{{endpoint.url}}/api/v1/namespaces/{{KubernetesNamespace}}/pods?pretty=false",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesPodLogInNamespace",
                "endpointUrl": "{{endpoint.url}}/api/v1/namespaces/{{KubernetesNamespace}}/pods/{{PodName}}/log?tailLines=200&container={{PodContainerName}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "plaintext",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesDeploymentsInNamespace",
                "endpointUrl": "{{endpoint.url}}/apis/apps/v1/namespaces/{{KubernetesNamespace}}/deployments?pretty=false",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesServicesInNamespace",
                "endpointUrl": "{{endpoint.url}}/api/v1/namespaces/{{KubernetesNamespace}}/services?pretty=false",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesReplicaSetsInNamespace",
                "endpointUrl": "{{endpoint.url}}/apis/apps/v1/namespaces/{{KubernetesNamespace}}/replicasets?pretty=false",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesDaemonSetsInNamespace",
                "endpointUrl": "{{endpoint.url}}/apis/apps/v1/namespaces/{{KubernetesNamespace}}/daemonsets?pretty=false",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesStatefulSetsInNamespace",
                "endpointUrl": "{{endpoint.url}}/apis/apps/v1/namespaces/{{KubernetesNamespace}}/statefulsets?pretty=false",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesObjects",
                "endpointUrl": "{{endpoint.url}}/{{DataSourceUrlSuffix}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesNamespaces",
                "endpointUrl": "{{endpoint.url}}/api/v1/namespaces?pretty=false",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.items[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesNamespacesList",
                "endpointUrl": "{{endpoint.url}}/api/v1/namespaces?pretty=false",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesCreateNamespace",
                "endpointUrl": "{{endpoint.url}}/api/v1/namespaces?pretty=false",
                "requestVerb": "Post",
                "requestContent": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"name\":\"{{KubernetesNamespace}}\",\"creationTimestamp\":null}}",
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesCreateServiceAccount",
                "endpointUrl": "{{endpoint.url}}/api/v1/namespaces/{{KubernetesNamespace}}/serviceaccounts?pretty=false",
                "requestVerb": "Post",
                "requestContent": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"{{ServiceAccountName}}\",\"creationTimestamp\":null}}",
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesCreateRolebinding",
                "endpointUrl": "{{endpoint.url}}/apis/rbac.authorization.k8s.io/v1/namespaces/{{KubernetesNamespace}}/rolebindings?pretty=false",
                "requestVerb": "Post",
                "requestContent": "{\"kind\":\"RoleBinding\",\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"metadata\":{\"name\":\"{{RoleBindingName}}\",\"namespace\":\"{{KubernetesNamespace}}\",\"creationTimestamp\":null},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"{{ServiceAccountName}}\",\"namespace\":\"{{ServiceAccountNamespace}}\"}],\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"{{RoleKind}}\",\"name\":\"{{RoleName}}\"}}",
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesCreateClusterRolebinding",
                "endpointUrl": "{{endpoint.url}}/apis/rbac.authorization.k8s.io/v1/clusterrolebindings?pretty=false",
                "requestVerb": "Post",
                "requestContent": "{\"kind\":\"ClusterRoleBinding\",\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"metadata\":{\"name\":\"{{ClusterRoleBindingName}}\",\"creationTimestamp\":null},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"{{ServiceAccountName}}\",\"namespace\":\"{{ServiceAccountNamespace}}\"}],\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"{{RoleName}}\"}}",
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesGetServiceAccount",
                "endpointUrl": "{{endpoint.url}}/api/v1/namespaces/{{KubernetesNamespace}}/serviceaccounts/{{ServiceAccountName}}?pretty=false",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "KubernetesGetSecret",
                "endpointUrl": "{{endpoint.url}}/api/v1/namespaces/{{KubernetesNamespace}}/secrets/{{SecretName}}?pretty=false",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              }
            ],
            "name": "kubernetes",
            "displayName": "Kubernetes",
            "description": "Service connection type for a Kubernetes cluster",
            "endpointUrl": {
              "displayName": "Environment",
              "helpText": "",
              "value": "https://management.azure.com/",
              "isVisible": "true",
              "dependsOn": {
                "input": "azureEnvironment",
                "map": [
                  {
                    "key": "AzureCloud",
                    "value": "https://management.azure.com/"
                  },
                  {
                    "key": "AzureChinaCloud",
                    "value": "https://management.chinacloudapi.cn/"
                  },
                  {
                    "key": "AzureUSGovernment",
                    "value": "https://management.usgovcloudapi.net/"
                  }
                ]
              }
            },
            "helpMarkDown": "<a href=\"https://go.microsoft.com/fwlink/?linkid=851275\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-services-docker/18.166.0.1629205080/Assets/icons/kubernetes_logo.png",
            "uiContributionId": "endpoint-editor-component-kubernetes"
          },
          {
            "inputDescriptors": [
              {
                "id": "acceptUntrustedCerts",
                "name": "Accept untrusted SSL certificates",
                "description": "Allows the Jenkins clients to accept self-signed SSL server certificates without installing them into the TFS service role and/or Build Agent computers.",
                "type": null,
                "properties": null,
                "inputMode": "checkBox",
                "isConfidential": false,
                "useInDefaultDescription": false,
                "groupName": null,
                "valueHint": null,
                "validation": {
                  "dataType": "boolean"
                }
              }
            ],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "username",
                    "name": "Username",
                    "description": "Username for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": false,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  },
                  {
                    "id": "password",
                    "name": "Password",
                    "description": "Password for connecting to the endpoint",
                    "type": null,
                    "properties": null,
                    "inputMode": "passwordBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  }
                ],
                "scheme": "UsernamePassword",
                "displayName": "Basic Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "Jenkins-Crumb",
                    "value": "{{#equals request.Method 'POST' 1}}{{ #getTokenUsingBasicAuth  { 'username' : 'endpoint.username', 'password' : 'endpoint.password', 'resultSelector' : 'jsonpath:$.crumb', 'method':'get', ignoreError:'true', 'authServerUrl':'endpoint.url/crumbIssuer/api/json/' } }}{{/equals}}"
                  },
                  {
                    "name": "Authorization",
                    "value": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "dataSources": [
              {
                "name": "TestConnection",
                "endpointUrl": "{{endpoint.url}}api/json?tree=jobs[name,displayName]",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.jobs[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Jobs",
                "endpointUrl": "{{endpoint.url}}api/json?{{#recursiveFormat 15 'tree=jobs[name,displayName{0}]' ',jobs[name,displayName{0}]'}}",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": null,
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "JenkinsJobType",
                "endpointUrl": "{{endpoint.url}}{{#splitAndPrefix definition '/' '/job/'}}{{/splitAndPrefix}}/api/json",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Builds",
                "endpointUrl": "{{endpoint.url}}{{#splitAndPrefix definition '/' '/job/'}}{{/splitAndPrefix}}/api/json?tree=builds[displayName,id,result]",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.builds[?(@.result=='SUCCESS')]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "MultiBranchPipelineBuilds",
                "endpointUrl": "{{endpoint.url}}{{#splitAndPrefix definition '/' '/job/'}}{{/splitAndPrefix}}/api/json?tree=jobs[name,builds[displayName,id,result,timestamp]]",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": null,
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "LatestBuild",
                "endpointUrl": "{{endpoint.url}}{{#splitAndPrefix definition '/' '/job/'}}{{/splitAndPrefix}}/api/json?tree=lastSuccessfulBuild[id,displayName]",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.lastSuccessfulBuild",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "MultiBranchPipelineLatestBuild",
                "endpointUrl": "{{endpoint.url}}{{#splitAndPrefix definition '/' '/job/'}}{{/splitAndPrefix}}/api/json?tree=jobs[name,lastSuccessfulBuild[id,displayName,timestamp]]",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": null,
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "MultiBranchPipelineSpecificBranchLatestBuilds",
                "endpointUrl": "{{endpoint.url}}{{#splitAndPrefix definition '/' '/job/'}}{{/splitAndPrefix}}/job/{{branch}}/api/json?tree=name,lastSuccessfulBuild[id,displayName,timestamp]",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": null,
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "Artifacts",
                "endpointUrl": "{{endpoint.url}}{{#splitAndPrefix definition '/' '/job/'}}{{/splitAndPrefix}}/{{#if branch}}{{/if}}{{#equals jenkinsJobType 'org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject' 1}}job/{{/equals}}{{version}}/api/json?tree=artifacts[*]",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.artifacts[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "MultiBranchNames",
                "endpointUrl": "{{endpoint.url}}{{#splitAndPrefix definition '/' '/job/'}}{{/splitAndPrefix}}/api/json?tree=jobs[name]",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.jobs[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              },
              {
                "name": "BranchName",
                "endpointUrl": "{{endpoint.url}}{{#splitAndPrefix definition '/' '/job/'}}{{/splitAndPrefix}}/{{#equals jenkinsJobType 'org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject' 1}}job/{{/equals}}{{version}}/api/json",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.actions[*].buildsByBranchName[?(@.buildNumber == {{version}})].revision.branch[*].name",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              }
            ],
            "name": "jenkins",
            "displayName": "Jenkins",
            "description": "Service connection type for all Jenkins connections",
            "helpMarkDown": "<a href=\"https://go.microsoft.com/fwlink/?linkid=875420\" target=_blank><b>Learn More</b></a>",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-services-jenkins/18.166.0.140592722/Assets/icons/icon-jenkins-logo.png"
          },
          {
            "inputDescriptors": [],
            "authenticationSchemes": [
              {
                "inputDescriptors": [
                  {
                    "id": "apitoken",
                    "name": "API Token",
                    "description": "Visit <a href=\"https://docs.microsoft.com/appcenter/api-docs/\" target=_blank>https://docs.microsoft.com/appcenter/api-docs/</a> to learn about how to create API tokens",
                    "type": null,
                    "properties": null,
                    "inputMode": "textBox",
                    "isConfidential": true,
                    "useInDefaultDescription": false,
                    "groupName": "AuthenticationParameter",
                    "valueHint": null,
                    "validation": {
                      "dataType": "string",
                      "isRequired": true,
                      "maxLength": 300
                    }
                  }
                ],
                "scheme": "Token",
                "displayName": "Token Based Authentication",
                "requiresOAuth2Configuration": true,
                "dataSourceBindings": [],
                "authorizationHeaders": [
                  {
                    "name": "X-API-Token",
                    "value": "{{endpoint.apitoken}}"
                  },
                  {
                    "name": "Authorization",
                    "value": "{{endpoint.apitoken}}"
                  }
                ],
                "clientCertificates": [],
                "properties": {}
              }
            ],
            "dataSources": [
              {
                "name": "MobileCenterAppSlugs",
                "endpointUrl": "$(endpoint.url)/apps",
                "requestVerb": null,
                "requestContent": null,
                "resourceUrl": "",
                "resultSelector": "jsonpath:$.[*]",
                "callbackContextTemplate": null,
                "callbackRequiredTemplate": null,
                "initialContextTemplate": null,
                "headers": [],
                "authenticationScheme": null
              }
            ],
            "name": "vsmobilecenter",
            "displayName": "Visual Studio App Center",
            "description": "Service connection type for all Visual Studio App Center connections",
            "endpointUrl": {
              "helpText": "",
              "value": "https://api.appcenter.ms/v0.1"
            },
            "helpMarkDown": "",
            "iconUrl": "https://fabrikam:8080/_apis/public/Extensions/ms.vss-services-vsmobilecenter/18.166.0.1397091528/Assets/icons/vsmc-endpoint-icon.png"
          }
        ]
      }
    }
  },
  "x-ms-vss-generated": true,
  "x-ms-vss-generated-date": "2020-02-28T11:58:04.0819997+05:30",
  "x-ms-vss-format": 1,
  "x-ms-vss-area": "serviceendpoint",
  "x-ms-vss-resource": "endpoints"
}