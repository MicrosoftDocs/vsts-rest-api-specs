{
  "swagger": "2.0",
  "info": {
    "title": "ServiceEndpoint",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "7.1"
  },
  "host": "https://fabrikam-fiber-inc:8080/DefaultCollection",
  "x-ms-vss-area": "ServiceEndpoint",
  "x-ms-vss-resource-area-id": "1814ab31-2f4f-4a9f-8761-f4d77dc5a5d7",
  "basePath": "/",
  "tags": [
    {
      "name": "Endpointproxy"
    },
    {
      "name": "Endpoints"
    },
    {
      "name": "Executionhistory"
    },
    {
      "name": "Types"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{collection}/_apis/serviceendpoint/endpoints": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "CreateServiceEndpoint",
        "description": "Creates a new service endpoint",
        "operationId": "Endpoints_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Service endpoint to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "Create service endpoint": {
            "$ref": "./httpExamples/endpoints/CreateGenericEndpoint-onprem.json"
          },
          "Create Azure RM service endpoint": {
            "$ref": "./httpExamples/endpoints/CreateAzureRMEndpoint-onprem.json"
          }
        }
      },
      "put": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "UpdateServiceEndpoints",
        "description": "Update the service endpoints.",
        "operationId": "Endpoints_Update Service Endpoints",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Names of the service endpoints to update.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "Update service endpoints": {
            "$ref": "./httpExamples/endpoints/UpdateServiceEndpoints-onprem.json"
          }
        }
      }
    },
    "/{collection}/_apis/serviceendpoint/endpoints/{endpointId}": {
      "delete": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "DeleteServiceEndpoint",
        "description": "Delete a service endpoint",
        "operationId": "Endpoints_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "endpointId",
            "description": "Endpoint Id of endpoint to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "projectIds",
            "description": "project Ids from which endpoint needs to be deleted",
            "required": true,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "deep",
            "description": "delete the spn created by endpoint",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "Delete service endpoint": {
            "$ref": "./httpExamples/endpoints/DeleteServiceEndpoint-onprem.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "ShareServiceEndpoint",
        "description": "Share service endpoint across projects",
        "operationId": "Endpoints_Share Service Endpoint",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Project reference details of the target project",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpointProjectReference"
              }
            }
          },
          {
            "in": "path",
            "name": "endpointId",
            "description": "Endpoint Id of the endpoint to share",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "Share service endpoint": {
            "$ref": "./httpExamples/endpoints/ShareServiceEndpoint-onprem.json"
          }
        }
      },
      "put": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "UpdateServiceEndpoint",
        "description": "Update the service endpoint",
        "operationId": "Endpoints_Update Service Endpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated data for the endpoint",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          },
          {
            "in": "path",
            "name": "endpointId",
            "description": "Endpoint Id of the endpoint to update",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "operation",
            "description": "operation type",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "Update service endpoint": {
            "$ref": "./httpExamples/endpoints/UpdateServiceEndpoint-onprem.json"
          }
        }
      }
    },
    "/{collection}/_apis/serviceendpoint/types": {
      "get": {
        "tags": [
          "Types"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "types",
        "x-ms-vss-method": "GetServiceEndpointTypes",
        "description": "Get service endpoint types.",
        "operationId": "Types_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type of service endpoint.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "scheme",
            "description": "Scheme of service endpoint.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpointType"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint"
            ]
          }
        ],
        "x-ms-examples": {
          "Get service endpoint types": {
            "$ref": "./httpExamples/types/GET__ServiceEndpointTypes-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/serviceendpoint/{endpointId}/executionhistory": {
      "get": {
        "tags": [
          "Executionhistory"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "executionhistory",
        "x-ms-vss-method": "GetServiceEndpointExecutionRecords",
        "description": "Get service endpoint execution records.",
        "operationId": "Executionhistory_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "endpointId",
            "description": "Id of the service endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of service endpoint execution records to get.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A continuation token, returned by a previous call to this method, that can be used to return the next set of records",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpointExecutionRecord"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint"
            ]
          }
        ],
        "x-ms-examples": {
          "Get service endpoint execution record": {
            "$ref": "./httpExamples/executionhistory/GET__ServiceEndpointExecutionRecords-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/serviceendpoint/endpointproxy": {
      "post": {
        "tags": [
          "Endpointproxy"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "endpointproxy",
        "x-ms-vss-method": "QueryServiceEndpoint",
        "deprecated": true,
        "description": "Use ExecuteServiceEndpointRequest API Instead",
        "operationId": "Endpointproxy_Query",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Describes the data source to fetch.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataSourceBinding"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_query"
            ]
          }
        ]
      }
    },
    "/{collection}/{project}/_apis/serviceendpoint/endpoints": {
      "get": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "GetServiceEndpointsByNames",
        "description": "Get the service endpoints by name.",
        "operationId": "Endpoints_Get Service Endpoints By Names",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "endpointNames",
            "description": "Names of the service endpoints.",
            "required": true,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type of the service endpoints.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "authSchemes",
            "description": "Authorization schemes used for service endpoints.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "owner",
            "description": "Owner for service endpoints.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeFailed",
            "description": "Failed flag for service endpoints.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeDetails",
            "description": "Flag to include more details for service endpoints. This is for internal use only and the flag will be treated as false for all other requests",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint"
            ]
          }
        ],
        "x-ms-examples": {
          "Get service endpoints by names": {
            "$ref": "./httpExamples/endpoints/GetServiceEndpointsByName-onprem.json"
          }
        }
      },
      "post": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "GetServiceEndpointsWithRefreshedAuthentication",
        "description": "Gets the service endpoints and patch new authorization parameters",
        "operationId": "Endpoints_Get Service Endpoints With Refreshed Authentication",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Scope, Validity of Token requested.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RefreshAuthenticationParameters"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "endpointIds",
            "description": "Ids of the service endpoints.",
            "required": true,
            "type": "string",
            "format": "array (uuid)"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ]
      }
    },
    "/{collection}/{project}/_apis/serviceendpoint/endpoints/{endpointId}": {
      "get": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "GetServiceEndpointDetails",
        "description": "Get the service endpoint details.",
        "operationId": "Endpoints_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "endpointId",
            "description": "Id of the service endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "Action filter for the service connection. It specifies the action which can be performed on the service connection.",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "manage",
              "use",
              "view"
            ],
            "x-ms-enum": {
              "name": "ServiceEndpointActionFilter",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "manage",
                  "description": ""
                },
                {
                  "value": "use",
                  "description": ""
                },
                {
                  "value": "view",
                  "description": ""
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint"
            ]
          }
        ],
        "x-ms-examples": {
          "Get service endpoint details": {
            "$ref": "./httpExamples/endpoints/GetServiceEndpointDetails-onprem.json"
          }
        }
      }
    }
  },
  "x-ms-paths": {
    "/{collection}/{project}/_apis/serviceendpoint/endpointproxy?endpointId={endpointId}": {
      "post": {
        "tags": [
          "Endpointproxy"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "endpointproxy",
        "x-ms-vss-method": "ExecuteServiceEndpointRequest",
        "description": "Proxy for a GET request defined by a service endpoint.",
        "operationId": "Endpointproxy_Execute Service Endpoint Request",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Service endpoint request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceEndpointRequest"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "endpointId",
            "description": "Id of the service endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointRequestResult"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_query"
            ]
          }
        ],
        "x-ms-examples": {
          "Execute service endpoint request": {
            "$ref": "./httpExamples/endpointproxy/POST__ExecuteServiceEndpointRequestAsync-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/serviceendpoint/endpoints?": {
      "get": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "GetServiceEndpoints",
        "description": "Get the service endpoints.",
        "operationId": "Endpoints_Get Service Endpoints",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type of the service endpoints.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "authSchemes",
            "description": "Authorization schemes used for service endpoints.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "endpointIds",
            "description": "Ids of the service endpoints.",
            "required": false,
            "type": "string",
            "format": "array (uuid)"
          },
          {
            "in": "query",
            "name": "owner",
            "description": "Owner for service endpoints.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeFailed",
            "description": "Failed flag for service endpoints.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeDetails",
            "description": "Flag to include more details for service endpoints. This is for internal use only and the flag will be treated as false for all other requests",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "The \"actionFilter\" parameter allows users to evaluate requestor permissions and retrieve a list of endpoints that match the specified conditions, ensuring that only relevant endpoints are returned based on their permissions",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "manage",
              "use",
              "view"
            ],
            "x-ms-enum": {
              "name": "ServiceEndpointActionFilter",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "manage",
                  "description": ""
                },
                {
                  "value": "use",
                  "description": ""
                },
                {
                  "value": "view",
                  "description": ""
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint"
            ]
          }
        ],
        "x-ms-examples": {
          "Get service endpoints": {
            "$ref": "./httpExamples/endpoints/ListEndpoints-onprem.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AadOauthTokenRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "refresh": {
          "type": "boolean"
        },
        "resource": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "AadOauthTokenResult": {
      "description": "",
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshTokenCache": {
          "type": "string"
        }
      }
    },
    "AuthConfiguration": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OAuthConfiguration"
        }
      ],
      "properties": {
        "parameters": {
          "description": "Gets or sets parameters contained in configuration object.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Parameter"
          }
        }
      }
    },
    "AuthenticationSchemeReference": {
      "description": "Specifies the authentication scheme to be used for authentication.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "Gets or sets the key and value of the fields used for authentication.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "description": "Gets or sets the type of authentication scheme of an endpoint.",
          "type": "string"
        }
      }
    },
    "AuthorizationHeader": {
      "description": "Represents the header of the REST request.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the name of authorization header.",
          "type": "string"
        },
        "value": {
          "description": "Gets or sets the value of authorization header.",
          "type": "string"
        }
      }
    },
    "AzureAppService": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "AzureKeyVaultPermission": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureResourcePermission"
        }
      ],
      "properties": {
        "vault": {
          "type": "string"
        }
      }
    },
    "AzureManagementGroup": {
      "description": "Azure Management Group",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of azure management group",
          "type": "string"
        },
        "id": {
          "description": "Id of azure management group",
          "type": "string"
        },
        "name": {
          "description": "Azure management group name",
          "type": "string"
        },
        "tenantId": {
          "description": "Id of tenant from which azure management group belogs",
          "type": "string"
        }
      }
    },
    "AzureManagementGroupQueryResult": {
      "description": "Azure management group query result",
      "type": "object",
      "properties": {
        "errorMessage": {
          "description": "Error message in case of an exception",
          "type": "string"
        },
        "value": {
          "description": "List of azure management groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureManagementGroup"
          }
        }
      }
    },
    "AzureMLWorkspace": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "AzurePermission": {
      "description": "",
      "type": "object",
      "properties": {
        "provisioned": {
          "type": "boolean"
        },
        "resourceProvider": {
          "type": "string"
        }
      }
    },
    "AzureResourcePermission": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzurePermission"
        }
      ],
      "properties": {
        "resourceGroup": {
          "type": "string"
        }
      }
    },
    "AzureRoleAssignmentPermission": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzurePermission"
        }
      ],
      "properties": {
        "roleAssignmentId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "AzureSpnOperationStatus": {
      "description": "",
      "type": "object",
      "properties": {
        "severity": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "statusMessage": {
          "type": "string"
        }
      }
    },
    "AzureSubscription": {
      "description": "",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "subscriptionTenantId": {
          "type": "string"
        },
        "subscriptionTenantName": {
          "type": "string"
        }
      }
    },
    "AzureSubscriptionQueryResult": {
      "description": "",
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureSubscription"
          }
        }
      }
    },
    "ClientCertificate": {
      "description": "Specifies the client certificate to be used for the endpoint request.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the value of client certificate.",
          "type": "string"
        }
      }
    },
    "DataSource": {
      "description": "Specifies the data sources for this endpoint.",
      "type": "object",
      "properties": {
        "authenticationScheme": {
          "description": "Gets or sets the authentication scheme for the endpoint request.",
          "$ref": "#/definitions/AuthenticationSchemeReference"
        },
        "callbackContextTemplate": {
          "description": "Gets or sets the pagination format supported by this data source(ContinuationToken/SkipTop).",
          "type": "string"
        },
        "callbackRequiredTemplate": {
          "description": "Gets or sets the template to check if subsequent call is needed.",
          "type": "string"
        },
        "endpointUrl": {
          "description": "Gets or sets the endpoint url of the data source.",
          "type": "string"
        },
        "headers": {
          "description": "Gets or sets the authorization headers of the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationHeader"
          }
        },
        "initialContextTemplate": {
          "description": "Gets or sets the initial value of the query params.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name of the data source.",
          "type": "string"
        },
        "requestContent": {
          "description": "Gets or sets the request content of the endpoint request.",
          "type": "string"
        },
        "requestVerb": {
          "description": "Gets or sets the request method of the endpoint request.",
          "type": "string"
        },
        "resourceUrl": {
          "description": "Gets or sets the resource url of the endpoint request.",
          "type": "string"
        },
        "resultSelector": {
          "description": "Gets or sets the result selector to filter the response of the endpoint request.",
          "type": "string"
        }
      }
    },
    "DataSourceBinding": {
      "description": "Represents the data source binding of the endpoint.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataSourceBindingBase"
        }
      ],
      "properties": {}
    },
    "DataSourceBindingBase": {
      "description": "Represents binding of data source for the service endpoint request.",
      "type": "object",
      "properties": {
        "callbackContextTemplate": {
          "description": "Pagination format supported by this data source(ContinuationToken/SkipTop).",
          "type": "string"
        },
        "callbackRequiredTemplate": {
          "description": "Subsequent calls needed?",
          "type": "string"
        },
        "dataSourceName": {
          "description": "Gets or sets the name of the data source.",
          "type": "string"
        },
        "endpointId": {
          "description": "Gets or sets the endpoint Id.",
          "type": "string"
        },
        "endpointUrl": {
          "description": "Gets or sets the url of the service endpoint.",
          "type": "string"
        },
        "headers": {
          "description": "Gets or sets the authorization headers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationHeader"
          }
        },
        "initialContextTemplate": {
          "description": "Defines the initial value of the query params",
          "type": "string"
        },
        "parameters": {
          "description": "Gets or sets the parameters for the data source.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "requestContent": {
          "description": "Gets or sets http request body",
          "type": "string"
        },
        "requestVerb": {
          "description": "Gets or sets http request verb",
          "type": "string"
        },
        "resultSelector": {
          "description": "Gets or sets the result selector.",
          "type": "string"
        },
        "resultTemplate": {
          "description": "Gets or sets the result template.",
          "type": "string"
        },
        "target": {
          "description": "Gets or sets the target of the data source.",
          "type": "string"
        }
      }
    },
    "DataSourceDetails": {
      "description": "Represents details of the service endpoint data source.",
      "type": "object",
      "properties": {
        "dataSourceName": {
          "description": "Gets or sets the data source name.",
          "type": "string"
        },
        "dataSourceUrl": {
          "description": "Gets or sets the data source url.",
          "type": "string"
        },
        "headers": {
          "description": "Gets or sets the request headers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationHeader"
          }
        },
        "initialContextTemplate": {
          "description": "Gets or sets the initialization context used for the initial call to the data source",
          "type": "string"
        },
        "parameters": {
          "description": "Gets the parameters of data source.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "requestContent": {
          "description": "Gets or sets the data source request content.",
          "type": "string"
        },
        "requestVerb": {
          "description": "Gets or sets the data source request verb. Get/Post are the only implemented types",
          "type": "string"
        },
        "resourceUrl": {
          "description": "Gets or sets the resource url of data source.",
          "type": "string"
        },
        "resultSelector": {
          "description": "Gets or sets the result selector.",
          "type": "string"
        }
      }
    },
    "DependencyBinding": {
      "description": "Represents the details of the input on which a given input is dependent.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Gets or sets the value of the field on which url is dependent.",
          "type": "string"
        },
        "value": {
          "description": "Gets or sets the corresponding value of url.",
          "type": "string"
        }
      }
    },
    "DependencyData": {
      "description": "Represents the dependency data for the endpoint inputs.",
      "type": "object",
      "properties": {
        "input": {
          "description": "Gets or sets the category of dependency data.",
          "type": "string"
        },
        "map": {
          "description": "Gets or sets the key-value pair to specify properties and their values.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "DependsOn": {
      "description": "Represents the inputs on which any given input is dependent.",
      "type": "object",
      "properties": {
        "input": {
          "description": "Gets or sets the ID of the field on which URL's value is dependent.",
          "type": "string"
        },
        "map": {
          "description": "Gets or sets key-value pair containing other's field value and corresponding url value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DependencyBinding"
          }
        }
      }
    },
    "EndpointAuthorization": {
      "description": "Represents the authorization used for service endpoint.",
      "type": "object",
      "properties": {
        "parameters": {
          "description": "Gets or sets the parameters for the selected authorization scheme.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scheme": {
          "description": "Gets or sets the scheme used for service endpoint authentication.",
          "type": "string"
        }
      }
    },
    "EndpointOperationStatus": {
      "description": "",
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "statusMessage": {
          "type": "string"
        }
      }
    },
    "EndpointUrl": {
      "description": "Represents url of the service endpoint.",
      "type": "object",
      "properties": {
        "dependsOn": {
          "description": "Gets or sets the dependency bindings.",
          "$ref": "#/definitions/DependsOn"
        },
        "displayName": {
          "description": "Gets or sets the display name of service endpoint url.",
          "type": "string"
        },
        "format": {
          "description": "Gets or sets the format of the url.",
          "type": "string"
        },
        "helpText": {
          "description": "Gets or sets the help text of service endpoint url.",
          "type": "string"
        },
        "isVisible": {
          "description": "Gets or sets the visibility of service endpoint url.",
          "type": "string"
        },
        "value": {
          "description": "Gets or sets the value of service endpoint url.",
          "type": "string"
        }
      }
    },
    "GraphSubjectBase": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "description": "This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional relationships or more detailed information about this graph subject.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "descriptor": {
          "description": "The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Collections.",
          "type": "string"
        },
        "displayName": {
          "description": "This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.",
          "type": "string"
        },
        "url": {
          "description": "This url is the full route to the source resource of this graph subject.",
          "type": "string"
        }
      }
    },
    "HelpLink": {
      "description": "Specifies the public url of the help documentation.",
      "type": "object",
      "properties": {
        "text": {
          "description": "Gets or sets the help text.",
          "type": "string"
        },
        "url": {
          "description": "Gets or sets the public url of the help documentation.",
          "type": "string"
        }
      }
    },
    "IdentityRef": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GraphSubjectBase"
        }
      ],
      "properties": {
        "directoryAlias": {
          "description": "Deprecated - Can be retrieved by querying the Graph user referenced in the \"self\" entry of the IdentityRef \"_links\" dictionary",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "description": "Deprecated - Available in the \"avatar\" entry of the IdentityRef \"_links\" dictionary",
          "type": "string"
        },
        "inactive": {
          "description": "Deprecated - Can be retrieved by querying the Graph membership state referenced in the \"membershipState\" entry of the GraphUser \"_links\" dictionary",
          "type": "boolean"
        },
        "isAadIdentity": {
          "description": "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsAadUserType/Descriptor.IsAadGroupType)",
          "type": "boolean"
        },
        "isContainer": {
          "description": "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsGroupType)",
          "type": "boolean"
        },
        "isDeletedInOrigin": {
          "type": "boolean"
        },
        "profileUrl": {
          "description": "Deprecated - not in use in most preexisting implementations of ToIdentityRef",
          "type": "string"
        },
        "uniqueName": {
          "description": "Deprecated - use Domain+PrincipalName instead",
          "type": "string"
        }
      }
    },
    "InputDescriptor": {
      "description": "Describes an input for subscriptions.",
      "type": "object",
      "properties": {
        "dependencyInputIds": {
          "description": "The ids of all inputs that the value of this input is dependent on.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of what this input is used for",
          "type": "string"
        },
        "groupName": {
          "description": "The group localized name to which this input belongs and can be shown as a header for the container that will include all the inputs in the group.",
          "type": "string"
        },
        "hasDynamicValueInformation": {
          "description": "If true, the value information for this input is dynamic and should be fetched when the value of dependency inputs change.",
          "type": "boolean"
        },
        "id": {
          "description": "Identifier for the subscription input",
          "type": "string"
        },
        "inputMode": {
          "description": "Mode in which the value of this input should be entered",
          "enum": [
            "none",
            "textBox",
            "passwordBox",
            "combo",
            "radioButtons",
            "checkBox",
            "textArea"
          ],
          "x-ms-enum": {
            "name": "InputMode",
            "values": [
              {
                "value": "none",
                "description": "This input should not be shown in the UI"
              },
              {
                "value": "textBox",
                "description": "An input text box should be shown"
              },
              {
                "value": "passwordBox",
                "description": "An password input box should be shown"
              },
              {
                "value": "combo",
                "description": "A select/combo control should be shown"
              },
              {
                "value": "radioButtons",
                "description": "Radio buttons should be shown"
              },
              {
                "value": "checkBox",
                "description": "Checkbox should be shown(for true/false values)"
              },
              {
                "value": "textArea",
                "description": "A multi-line text area should be shown"
              }
            ]
          }
        },
        "isConfidential": {
          "description": "Gets whether this input is confidential, such as for a password or application key",
          "type": "boolean"
        },
        "name": {
          "description": "Localized name which can be shown as a label for the subscription input",
          "type": "string"
        },
        "properties": {
          "description": "Custom properties for the input which can be used by the service provider",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "type": {
          "description": "Underlying data type for the input value. When this value is specified, InputMode, Validation and Values are optional.",
          "type": "string"
        },
        "useInDefaultDescription": {
          "description": "Gets whether this input is included in the default generated action description.",
          "type": "boolean"
        },
        "validation": {
          "description": "Information to use to validate this input's value",
          "$ref": "#/definitions/InputValidation"
        },
        "valueHint": {
          "description": "A hint for input value. It can be used in the UI as the input placeholder.",
          "type": "string"
        },
        "values": {
          "description": "Information about possible values for this input",
          "$ref": "#/definitions/InputValues"
        }
      }
    },
    "InputValidation": {
      "description": "Describes what values are valid for a subscription input",
      "type": "object",
      "properties": {
        "dataType": {
          "description": "Gets or sets the data type to validate.",
          "enum": [
            "none",
            "string",
            "number",
            "boolean",
            "guid",
            "uri"
          ],
          "x-ms-enum": {
            "name": "InputDataType",
            "values": [
              {
                "value": "none",
                "description": "No data type is specified."
              },
              {
                "value": "string",
                "description": "Represents a textual value."
              },
              {
                "value": "number",
                "description": "Represents a numeric value."
              },
              {
                "value": "boolean",
                "description": "Represents a value of true or false."
              },
              {
                "value": "guid",
                "description": "Represents a Guid."
              },
              {
                "value": "uri",
                "description": "Represents a URI."
              }
            ]
          }
        },
        "isRequired": {
          "description": "Gets or sets if this is a required field.",
          "type": "boolean"
        },
        "maxLength": {
          "description": "Gets or sets the maximum length of this descriptor.",
          "type": "integer",
          "format": "int32"
        },
        "maxValue": {
          "description": "Gets or sets the minimum value for this descriptor.",
          "type": "string",
          "format": "decimal"
        },
        "minLength": {
          "description": "Gets or sets the minimum length of this descriptor.",
          "type": "integer",
          "format": "int32"
        },
        "minValue": {
          "description": "Gets or sets the minimum value for this descriptor.",
          "type": "string",
          "format": "decimal"
        },
        "pattern": {
          "description": "Gets or sets the pattern to validate.",
          "type": "string"
        },
        "patternMismatchErrorMessage": {
          "description": "Gets or sets the error on pattern mismatch.",
          "type": "string"
        }
      }
    },
    "InputValue": {
      "description": "Information about a single value for an input",
      "type": "object",
      "properties": {
        "data": {
          "description": "Any other data about this input",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "displayValue": {
          "description": "The text to show for the display of this value",
          "type": "string"
        },
        "value": {
          "description": "The value to store for this input",
          "type": "string"
        }
      }
    },
    "InputValues": {
      "description": "Information about the possible/allowed values for a given subscription input",
      "type": "object",
      "properties": {
        "defaultValue": {
          "description": "The default value to use for this input",
          "type": "string"
        },
        "error": {
          "description": "Errors encountered while computing dynamic values.",
          "$ref": "#/definitions/InputValuesError"
        },
        "inputId": {
          "description": "The id of the input",
          "type": "string"
        },
        "isDisabled": {
          "description": "Should this input be disabled",
          "type": "boolean"
        },
        "isLimitedToPossibleValues": {
          "description": "Should the value be restricted to one of the values in the PossibleValues (True) or are the values in PossibleValues just a suggestion (False)",
          "type": "boolean"
        },
        "isReadOnly": {
          "description": "Should this input be made read-only",
          "type": "boolean"
        },
        "possibleValues": {
          "description": "Possible values that this input can take",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputValue"
          }
        }
      }
    },
    "InputValuesError": {
      "description": "Error information related to a subscription input value.",
      "type": "object",
      "properties": {
        "message": {
          "description": "The error message.",
          "type": "string"
        }
      }
    },
    "JObject": {
      "description": "Represents a JSON object.",
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/JToken"
        },
        "type": {
          "description": "Gets the node type for this JToken.",
          "type": "string",
          "format": "JTokenType"
        }
      }
    },
    "JToken": {
      "description": "Represents an abstract JSON token.",
      "type": "object",
      "properties": {
        "first": {
          "description": "Get the first child token of this token.",
          "$ref": "#/definitions/JToken"
        },
        "hasValues": {
          "description": "Gets a value indicating whether this token has child tokens.",
          "type": "boolean"
        },
        "item": {
          "$ref": "#/definitions/JToken"
        },
        "last": {
          "description": "Get the last child token of this token.",
          "$ref": "#/definitions/JToken"
        },
        "next": {
          "description": "Gets the next sibling token of this node.",
          "$ref": "#/definitions/JToken"
        },
        "parent": {
          "description": "Gets or sets the parent.",
          "type": "string",
          "format": "JContainer"
        },
        "path": {
          "description": "Gets the path of the JSON token.",
          "type": "string"
        },
        "previous": {
          "description": "Gets the previous sibling token of this node.",
          "$ref": "#/definitions/JToken"
        },
        "root": {
          "description": "Gets the root JToken of this JToken.",
          "$ref": "#/definitions/JToken"
        },
        "type": {
          "description": "Gets the node type for this JToken.",
          "type": "string",
          "format": "JTokenType"
        }
      }
    },
    "OAuth2TokenResult": {
      "description": "",
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "errorDescription": {
          "type": "string"
        },
        "expiresIn": {
          "type": "string"
        },
        "issuedAt": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "OAuthConfiguration": {
      "description": "",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "Gets or sets the ClientId",
          "type": "string"
        },
        "clientSecret": {
          "description": "Gets or sets the ClientSecret",
          "type": "string"
        },
        "createdBy": {
          "description": "Gets or sets the identity who created the config.",
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "description": "Gets or sets the time when config was created.",
          "type": "string",
          "format": "date-time"
        },
        "endpointType": {
          "description": "Gets or sets the type of the endpoint.",
          "type": "string"
        },
        "id": {
          "description": "Gets or sets the unique identifier of this field",
          "type": "string",
          "format": "uuid"
        },
        "modifiedBy": {
          "description": "Gets or sets the identity who modified the config.",
          "$ref": "#/definitions/IdentityRef"
        },
        "modifiedOn": {
          "description": "Gets or sets the time when variable group was modified",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Gets or sets the name",
          "type": "string"
        },
        "url": {
          "description": "Gets or sets the Url",
          "type": "string"
        }
      }
    },
    "OAuthConfigurationParams": {
      "description": "",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "Gets or sets the ClientId",
          "type": "string"
        },
        "clientSecret": {
          "description": "Gets or sets the ClientSecret",
          "type": "string"
        },
        "endpointType": {
          "description": "Gets or sets the type of the endpoint.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name",
          "type": "string"
        },
        "url": {
          "description": "Gets or sets the Url",
          "type": "string"
        }
      }
    },
    "OAuthEndpointStatus": {
      "description": "",
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "statusMessage": {
          "type": "string"
        }
      }
    },
    "Parameter": {
      "description": "",
      "type": "object",
      "properties": {
        "isSecret": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ProjectReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "RefreshAuthenticationParameters": {
      "description": "Specify the properties for refreshing the endpoint authentication object being queried",
      "type": "object",
      "properties": {
        "endpointId": {
          "description": "EndpointId which needs new authentication params",
          "type": "string",
          "format": "uuid"
        },
        "scope": {
          "description": "Scope of the token requested. For GitHub marketplace apps, scope contains repository Ids",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "tokenValidityInMinutes": {
          "description": "The requested endpoint authentication should be valid for _ minutes. Authentication params will not be refreshed if the token contained in endpoint already has active token.",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "ResultTransformationDetails": {
      "description": "Represents template to transform the result data.",
      "type": "object",
      "properties": {
        "callbackContextTemplate": {
          "description": "Gets or sets the template for callback parameters",
          "type": "string"
        },
        "callbackRequiredTemplate": {
          "description": "Gets or sets the template to decide whether to callback or not",
          "type": "string"
        },
        "resultTemplate": {
          "description": "Gets or sets the template for result transformation.",
          "type": "string"
        }
      }
    },
    "ServiceEndpoint": {
      "description": "Represents an endpoint which may be used by an orchestration job.",
      "type": "object",
      "properties": {
        "administratorsGroup": {
          "description": "This is a deprecated field.",
          "$ref": "#/definitions/IdentityRef"
        },
        "authorization": {
          "description": "Gets or sets the authorization data for talking to the endpoint.",
          "$ref": "#/definitions/EndpointAuthorization"
        },
        "createdBy": {
          "description": "Gets or sets the identity reference for the user who created the Service endpoint.",
          "$ref": "#/definitions/IdentityRef"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Gets or sets the description of endpoint.",
          "type": "string"
        },
        "groupScopeId": {
          "description": "This is a deprecated field.",
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "description": "Gets or sets the identifier of this endpoint.",
          "type": "string",
          "format": "uuid"
        },
        "isReady": {
          "description": "EndPoint state indicator",
          "type": "boolean"
        },
        "isShared": {
          "description": "Indicates whether service endpoint is shared with other projects or not.",
          "type": "boolean"
        },
        "name": {
          "description": "Gets or sets the friendly name of the endpoint.",
          "type": "string"
        },
        "operationStatus": {
          "description": "Error message during creation/deletion of endpoint",
          "$ref": "#/definitions/JObject"
        },
        "owner": {
          "description": "Owner of the endpoint Supported values are \"library\", \"agentcloud\"",
          "type": "string"
        },
        "readersGroup": {
          "description": "Gets or sets the identity reference for the readers group of the service endpoint.",
          "$ref": "#/definitions/IdentityRef"
        },
        "serviceEndpointProjectReferences": {
          "description": "All other project references where the service endpoint is shared.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpointProjectReference"
          }
        },
        "type": {
          "description": "Gets or sets the type of the endpoint.",
          "type": "string"
        },
        "url": {
          "description": "Gets or sets the url of the endpoint.",
          "type": "string"
        }
      }
    },
    "ServiceEndpointAuthenticationScheme": {
      "description": "Represents the authentication scheme used to authenticate the endpoint.",
      "type": "object",
      "properties": {
        "authorizationHeaders": {
          "description": "Gets or sets the authorization headers of service endpoint authentication scheme.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationHeader"
          }
        },
        "authorizationUrl": {
          "description": "Gets or sets the Authorization url required to authenticate using OAuth2",
          "type": "string"
        },
        "clientCertificates": {
          "description": "Gets or sets the certificates of service endpoint authentication scheme.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClientCertificate"
          }
        },
        "dataSourceBindings": {
          "description": "Gets or sets the data source bindings of the endpoint.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSourceBinding"
          }
        },
        "displayName": {
          "description": "Gets or sets the display name for the service endpoint authentication scheme.",
          "type": "string"
        },
        "inputDescriptors": {
          "description": "Gets or sets the input descriptors for the service endpoint authentication scheme.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputDescriptor"
          }
        },
        "properties": {
          "description": "Gets or sets the properties of service endpoint authentication scheme.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "requiresOAuth2Configuration": {
          "description": "Gets or sets whether this auth scheme requires OAuth2 configuration or not.",
          "type": "boolean"
        },
        "scheme": {
          "description": "Gets or sets the scheme for service endpoint authentication.",
          "type": "string"
        }
      }
    },
    "ServiceEndpointDetails": {
      "description": "Represents details of the service endpoint.",
      "type": "object",
      "properties": {
        "authorization": {
          "description": "Gets or sets the authorization of service endpoint.",
          "$ref": "#/definitions/EndpointAuthorization"
        },
        "data": {
          "description": "Gets or sets the data of service endpoint.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "description": "Gets or sets the type of service endpoint.",
          "type": "string"
        },
        "url": {
          "description": "Gets or sets the connection url of service endpoint.",
          "type": "string"
        }
      }
    },
    "ServiceEndpointExecutionData": {
      "description": "Represents service endpoint execution data.",
      "type": "object",
      "properties": {
        "definition": {
          "description": "Gets the definition of service endpoint execution owner.",
          "$ref": "#/definitions/ServiceEndpointExecutionOwner"
        },
        "finishTime": {
          "description": "Gets the finish time of service endpoint execution.",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "Gets the Id of service endpoint execution data.",
          "type": "integer",
          "format": "int64"
        },
        "owner": {
          "description": "Gets the owner of service endpoint execution data.",
          "$ref": "#/definitions/ServiceEndpointExecutionOwner"
        },
        "ownerDetails": {
          "description": "Gets the additional details about the instance that used the service endpoint.",
          "type": "string"
        },
        "planType": {
          "description": "Gets the plan type of service endpoint execution data.",
          "type": "string"
        },
        "result": {
          "description": "Gets the result of service endpoint execution.",
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "ServiceEndpointExecutionResult",
            "values": [
              {
                "value": "succeeded",
                "description": "\"Service endpoint request succeeded."
              },
              {
                "value": "succeededWithIssues",
                "description": "\"Service endpoint request succeeded but with some issues."
              },
              {
                "value": "failed",
                "description": "\"Service endpoint request failed."
              },
              {
                "value": "canceled",
                "description": "\"Service endpoint request was cancelled."
              },
              {
                "value": "skipped",
                "description": "\"Service endpoint request was skipped."
              },
              {
                "value": "abandoned",
                "description": "\"Service endpoint request was abandoned."
              }
            ]
          }
        },
        "startTime": {
          "description": "Gets the start time of service endpoint execution.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ServiceEndpointExecutionOwner": {
      "description": "Represents execution owner of the service endpoint.",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "id": {
          "description": "Gets or sets the Id of service endpoint execution owner.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Gets or sets the name of service endpoint execution owner.",
          "type": "string"
        }
      }
    },
    "ServiceEndpointExecutionRecord": {
      "description": "Represents the details of service endpoint execution.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Gets the execution data of service endpoint execution.",
          "$ref": "#/definitions/ServiceEndpointExecutionData"
        },
        "endpointId": {
          "description": "Gets the Id of service endpoint.",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ServiceEndpointExecutionRecordsInput": {
      "description": "",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ServiceEndpointExecutionData"
        },
        "endpointIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "ServiceEndpointOAuthConfigurationReference": {
      "description": "",
      "type": "object",
      "properties": {
        "configurationId": {
          "type": "string",
          "format": "uuid"
        },
        "serviceEndpointId": {
          "type": "string",
          "format": "uuid"
        },
        "serviceEndpointProjectId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ServiceEndpointProjectReference": {
      "description": "",
      "type": "object",
      "properties": {
        "description": {
          "description": "Gets or sets description of the service endpoint.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets name of the service endpoint.",
          "type": "string"
        },
        "projectReference": {
          "description": "Gets or sets project reference of the service endpoint.",
          "$ref": "#/definitions/ProjectReference"
        }
      }
    },
    "ServiceEndpointRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "dataSourceDetails": {
          "description": "Gets or sets the data source details for the service endpoint request.",
          "$ref": "#/definitions/DataSourceDetails"
        },
        "resultTransformationDetails": {
          "description": "Gets or sets the result transformation details for the service endpoint request.",
          "$ref": "#/definitions/ResultTransformationDetails"
        },
        "serviceEndpointDetails": {
          "description": "Gets or sets the service endpoint details for the service endpoint request.",
          "$ref": "#/definitions/ServiceEndpointDetails"
        }
      }
    },
    "ServiceEndpointRequestResult": {
      "description": "Represents result of the service endpoint request.",
      "type": "object",
      "properties": {
        "callbackContextParameters": {
          "description": "Gets or sets the parameters used to make subsequent calls to the data source",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "callbackRequired": {
          "description": "Gets or sets the flat that decides if another call to the data source is to be made",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Gets or sets the error message of the service endpoint request result.",
          "type": "string"
        },
        "result": {
          "description": "Gets or sets the result of service endpoint request.",
          "$ref": "#/definitions/JToken"
        },
        "statusCode": {
          "description": "Gets or sets the status code of the service endpoint request result.",
          "enum": [
            "continue",
            "switchingProtocols",
            "ok",
            "created",
            "accepted",
            "nonAuthoritativeInformation",
            "noContent",
            "resetContent",
            "partialContent",
            "multipleChoices",
            "ambiguous",
            "movedPermanently",
            "moved",
            "found",
            "redirect",
            "seeOther",
            "redirectMethod",
            "notModified",
            "useProxy",
            "unused",
            "temporaryRedirect",
            "redirectKeepVerb",
            "badRequest",
            "unauthorized",
            "paymentRequired",
            "forbidden",
            "notFound",
            "methodNotAllowed",
            "notAcceptable",
            "proxyAuthenticationRequired",
            "requestTimeout",
            "conflict",
            "gone",
            "lengthRequired",
            "preconditionFailed",
            "requestEntityTooLarge",
            "requestUriTooLong",
            "unsupportedMediaType",
            "requestedRangeNotSatisfiable",
            "expectationFailed",
            "upgradeRequired",
            "internalServerError",
            "notImplemented",
            "badGateway",
            "serviceUnavailable",
            "gatewayTimeout",
            "httpVersionNotSupported"
          ],
          "x-ms-enum": {
            "name": "HttpStatusCode",
            "values": [
              {
                "value": "continue",
                "description": ""
              },
              {
                "value": "switchingProtocols",
                "description": ""
              },
              {
                "value": "ok",
                "description": ""
              },
              {
                "value": "created",
                "description": ""
              },
              {
                "value": "accepted",
                "description": ""
              },
              {
                "value": "nonAuthoritativeInformation",
                "description": ""
              },
              {
                "value": "noContent",
                "description": ""
              },
              {
                "value": "resetContent",
                "description": ""
              },
              {
                "value": "partialContent",
                "description": ""
              },
              {
                "value": "multipleChoices",
                "description": ""
              },
              {
                "value": "ambiguous",
                "description": ""
              },
              {
                "value": "movedPermanently",
                "description": ""
              },
              {
                "value": "moved",
                "description": ""
              },
              {
                "value": "found",
                "description": ""
              },
              {
                "value": "redirect",
                "description": ""
              },
              {
                "value": "seeOther",
                "description": ""
              },
              {
                "value": "redirectMethod",
                "description": ""
              },
              {
                "value": "notModified",
                "description": ""
              },
              {
                "value": "useProxy",
                "description": ""
              },
              {
                "value": "unused",
                "description": ""
              },
              {
                "value": "temporaryRedirect",
                "description": ""
              },
              {
                "value": "redirectKeepVerb",
                "description": ""
              },
              {
                "value": "badRequest",
                "description": ""
              },
              {
                "value": "unauthorized",
                "description": ""
              },
              {
                "value": "paymentRequired",
                "description": ""
              },
              {
                "value": "forbidden",
                "description": ""
              },
              {
                "value": "notFound",
                "description": ""
              },
              {
                "value": "methodNotAllowed",
                "description": ""
              },
              {
                "value": "notAcceptable",
                "description": ""
              },
              {
                "value": "proxyAuthenticationRequired",
                "description": ""
              },
              {
                "value": "requestTimeout",
                "description": ""
              },
              {
                "value": "conflict",
                "description": ""
              },
              {
                "value": "gone",
                "description": ""
              },
              {
                "value": "lengthRequired",
                "description": ""
              },
              {
                "value": "preconditionFailed",
                "description": ""
              },
              {
                "value": "requestEntityTooLarge",
                "description": ""
              },
              {
                "value": "requestUriTooLong",
                "description": ""
              },
              {
                "value": "unsupportedMediaType",
                "description": ""
              },
              {
                "value": "requestedRangeNotSatisfiable",
                "description": ""
              },
              {
                "value": "expectationFailed",
                "description": ""
              },
              {
                "value": "upgradeRequired",
                "description": ""
              },
              {
                "value": "internalServerError",
                "description": ""
              },
              {
                "value": "notImplemented",
                "description": ""
              },
              {
                "value": "badGateway",
                "description": ""
              },
              {
                "value": "serviceUnavailable",
                "description": ""
              },
              {
                "value": "gatewayTimeout",
                "description": ""
              },
              {
                "value": "httpVersionNotSupported",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "ServiceEndpointType": {
      "description": "Represents type of the service endpoint.",
      "type": "object",
      "properties": {
        "authenticationSchemes": {
          "description": "Authentication scheme of service endpoint type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpointAuthenticationScheme"
          }
        },
        "dataSources": {
          "description": "Data sources of service endpoint type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSource"
          }
        },
        "dependencyData": {
          "description": "Dependency data of service endpoint type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DependencyData"
          }
        },
        "description": {
          "description": "Gets or sets the description of service endpoint type.",
          "type": "string"
        },
        "displayName": {
          "description": "Gets or sets the display name of service endpoint type.",
          "type": "string"
        },
        "endpointUrl": {
          "description": "Gets or sets the endpoint url of service endpoint type.",
          "$ref": "#/definitions/EndpointUrl"
        },
        "helpLink": {
          "description": "Gets or sets the help link of service endpoint type.",
          "$ref": "#/definitions/HelpLink"
        },
        "helpMarkDown": {
          "description": "Gets or sets the help text shown at the endpoint create dialog.",
          "type": "string"
        },
        "iconUrl": {
          "description": "Gets or sets the icon url of service endpoint type.",
          "type": "string"
        },
        "inputDescriptors": {
          "description": "Input descriptor of service endpoint type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputDescriptor"
          }
        },
        "name": {
          "description": "Gets or sets the name of service endpoint type.",
          "type": "string"
        },
        "trustedHosts": {
          "description": "Trusted hosts of a service endpoint type.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uiContributionId": {
          "description": "Gets or sets the ui contribution id of service endpoint type.",
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialize collections as a single JSON object on the wire.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "description": "The serialized item.",
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "description": "The number of serialized items.",
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.serviceendpoint": "Grants the ability to read service endpoints.",
        "vso.serviceendpoint_manage": "Grants the ability to read, query and manage service endpoints.",
        "vso.serviceendpoint_query": "Grants the ability to read and query service endpoints."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "https://{instance}",
    "parameters": [
      {
        "name": "instance",
        "description": "TFS server name ({server:port})",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  }
}