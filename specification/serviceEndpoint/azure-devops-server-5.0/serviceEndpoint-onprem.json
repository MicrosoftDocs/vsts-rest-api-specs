{
  "swagger": "2.0",
  "info": {
    "title": "ServiceEndpoint",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "5.0-preview"
  },
  "host": "https://fabrikam-fiber-inc:8080/DefaultCollection",
  "x-ms-parameterized-host" : {
    "hostTemplate": "{instance}",
    "parameters": [
      {
        "name": "instance",
        "description": "Azure DevOps server name ({server:port})",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  },
  "x-ms-vss-area": "ServiceEndpoint",
  "x-ms-vss-resource-area-id": "1814ab31-2f4f-4a9f-8761-f4d77dc5a5d7",
  "basePath": "/",
  "tags": [
    {
      "name": "Endpointproxy"
    },
    {
      "name": "Endpoints"
    },
    {
      "name": "Executionhistory"
    },
    {
      "name": "Types"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{collection}/_apis/serviceendpoint/types": {
      "get": {
        "tags": [
          "Types"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "types",
        "x-ms-vss-method": "GetServiceEndpointTypes",
        "x-ms-preview": true,
        "description": "Get service endpoint types.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type of service endpoint.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "scheme",
            "description": "Scheme of service endpoint.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpointType"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint"
            ]
          }
        ],
        "x-ms-examples": {
          "Get service endpoint types": {
            "$ref": "./httpExamples/types/GET__ServiceEndpointTypes-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/serviceendpoint/{endpointId}/executionhistory": {
      "get": {
        "tags": [
          "Executionhistory"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "executionhistory",
        "x-ms-vss-method": "GetServiceEndpointExecutionRecords",
        "x-ms-preview": true,
        "description": "Get service endpoint execution records.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "endpointId",
            "description": "Id of the service endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of service endpoint execution records to get.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpointExecutionRecord"
              }
            }
          }
        },
        "x-ms-examples": {
          "Get service endpoint execution record": {
            "$ref": "./httpExamples/executionhistory/GET__ServiceEndpointExecutionRecords-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/serviceendpoint/endpointproxy": {
      "post": {
        "tags": [
          "Endpointproxy"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "endpointproxy",
        "x-ms-vss-method": "QueryServiceEndpoint",
        "x-ms-preview": true,
        "deprecated": true,
        "description": "Use ExecuteServiceEndpointRequest API Instead",
        "operationId": "Query",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Describes the data source to fetch.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataSourceBinding"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_query"
            ]
          }
        ]
      }
    },
    "/{collection}/{project}/_apis/serviceendpoint/endpoints": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "5.0-preview.2",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "CreateServiceEndpoint",
        "x-ms-preview": true,
        "description": "Create a service endpoint.",
        "operationId": "Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Service endpoint to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "Create a service endpoint": {
            "$ref": "./httpExamples/endpoints/POST__CreateServiceEndpoint-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "5.0-preview.2",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "GetServiceEndpointsByNames",
        "x-ms-preview": true,
        "description": "Get the service endpoints by name.",
        "operationId": "Get Service Endpoints By Names",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "endpointNames",
            "description": "Names of the service endpoints.",
            "required": true,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type of the service endpoints.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "authSchemes",
            "description": "Authorization schemes used for service endpoints.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "includeFailed",
            "description": "Failed flag for service endpoints.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeDetails",
            "description": "Flag to include more details for service endpoints. This is for internal use only and the flag will be treated as false for all other requests",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint"
            ]
          }
        ],
        "x-ms-examples": {
          "Get service endpoints by names": {
            "$ref": "./httpExamples/endpoints/Get__ServiceEndpointsByNames-onprem.json"
          }
        }
      },
      "put": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "5.0-preview.2",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "UpdateServiceEndpoints",
        "x-ms-preview": true,
        "description": "Update the service endpoints.",
        "operationId": "Update Service Endpoints",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Names of the service endpoints to update.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "Update service endpoints": {
            "$ref": "./httpExamples/endpoints/PUT__UpdateServiceEndpoints-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/serviceendpoint/endpoints/{endpointId}": {
      "delete": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "5.0-preview.2",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "DeleteServiceEndpoint",
        "x-ms-preview": true,
        "description": "Delete a service endpoint.",
        "operationId": "Delete",
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "endpointId",
            "description": "Id of the service endpoint to delete.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "deep",
            "description": "Specific to AzureRM endpoint created in Automatic flow. When set to true, this will also delete corresponding AAD application in Azure. Default value is true.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "Delete a service endpoint": {
            "$ref": "./httpExamples/endpoints/DELETE__ServiceEndpoint-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "5.0-preview.2",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "GetServiceEndpointDetails",
        "x-ms-preview": true,
        "description": "Get the service endpoint details.",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "endpointId",
            "description": "Id of the service endpoint.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint"
            ]
          }
        ],
        "x-ms-examples": {
          "Get service endpoint details": {
            "$ref": "./httpExamples/endpoints/GET__ServiceEndpointDetails-onprem.json"
          }
        }
      },
      "put": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "5.0-preview.2",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "UpdateServiceEndpoint",
        "x-ms-preview": true,
        "description": "Update a service endpoint.",
        "operationId": "Update Service Endpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Service endpoint to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "endpointId",
            "description": "Id of the service endpoint to update.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "operation",
            "description": "Operation for the service endpoint.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "Update a service endpoint": {
            "$ref": "./httpExamples/endpoints/PUT__UpdateServiceEndpoint-onprem.json"
          }
        }
      }
    }
  },
  "x-ms-paths": {
    "/{collection}/{project}/_apis/serviceendpoint/endpointproxy?endpointId={endpointId}": {
      "post": {
        "tags": [
          "Endpointproxy"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "endpointproxy",
        "x-ms-vss-method": "ExecuteServiceEndpointRequest",
        "x-ms-preview": true,
        "description": "Proxy for a GET request defined by a service endpoint.",
        "operationId": "Execute Service Endpoint Request",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Service endpoint request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceEndpointRequest"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "endpointId",
            "description": "Id of the service endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointRequestResult"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_query"
            ]
          }
        ],
        "x-ms-examples": {
          "Execute service endpoint request": {
            "$ref": "./httpExamples/endpointproxy/POST__ExecuteServiceEndpointRequestAsync-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/serviceendpoint/endpoints?": {
      "get": {
        "tags": [
          "Endpoints"
        ],
        "x-ms-docs-override-version": "5.0-preview.2",
        "x-ms-vss-resource": "endpoints",
        "x-ms-vss-method": "GetServiceEndpoints",
        "x-ms-preview": true,
        "description": "Get the service endpoints.",
        "operationId": "Get Service Endpoints",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type of the service endpoints.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "authSchemes",
            "description": "Authorization schemes used for service endpoints.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "endpointIds",
            "description": "Ids of the service endpoints.",
            "required": false,
            "type": "string",
            "format": "array (uuid)"
          },
          {
            "in": "query",
            "name": "includeFailed",
            "description": "Failed flag for service endpoints.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeDetails",
            "description": "Flag to include more details for service endpoints. This is for internal use only and the flag will be treated as false for all other requests",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint"
            ]
          }
        ],
        "x-ms-examples": {
          "Get service endpoints": {
            "$ref": "./httpExamples/endpoints/GET__ServiceEndpoints-onprem.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AuthenticationSchemeReference": {
      "description": "",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "AuthorizationHeader": {
      "description": "Represents the header of the REST request.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the name of authorization header.",
          "type": "string"
        },
        "value": {
          "description": "Gets or sets the value of authorization header.",
          "type": "string"
        }
      }
    },
    "AzureKeyVaultPermission": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureResourcePermission"
        }
      ],
      "properties": {
        "vault": {
          "type": "string"
        }
      }
    },
    "AzureManagementGroup": {
      "description": "Azure Management Group",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of azure management group",
          "type": "string"
        },
        "id": {
          "description": "Id of azure management group",
          "type": "string"
        },
        "name": {
          "description": "Azure management group name",
          "type": "string"
        },
        "tenantId": {
          "description": "Id of tenant from which azure management group belogs",
          "type": "string"
        }
      }
    },
    "AzureManagementGroupQueryResult": {
      "description": "Azure management group query result",
      "type": "object",
      "properties": {
        "errorMessage": {
          "description": "Error message in case of an exception",
          "type": "string"
        },
        "value": {
          "description": "List of azure management groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureManagementGroup"
          }
        }
      }
    },
    "AzurePermission": {
      "description": "",
      "type": "object",
      "properties": {
        "provisioned": {
          "type": "boolean"
        },
        "resourceProvider": {
          "type": "string"
        }
      }
    },
    "AzureResourcePermission": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzurePermission"
        }
      ],
      "properties": {
        "resourceGroup": {
          "type": "string"
        }
      }
    },
    "AzureRoleAssignmentPermission": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzurePermission"
        }
      ],
      "properties": {
        "roleAssignmentId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "AzureSpnOperationStatus": {
      "description": "",
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "statusMessage": {
          "type": "string"
        }
      }
    },
    "AzureSubscription": {
      "description": "",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "subscriptionTenantId": {
          "type": "string"
        },
        "subscriptionTenantName": {
          "type": "string"
        }
      }
    },
    "AzureSubscriptionQueryResult": {
      "description": "",
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureSubscription"
          }
        }
      }
    },
    "ClientCertificate": {
      "description": "",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the value of client certificate.",
          "type": "string"
        }
      }
    },
    "DataSource": {
      "description": "",
      "type": "object",
      "properties": {
        "authenticationScheme": {
          "$ref": "#/definitions/AuthenticationSchemeReference"
        },
        "callbackContextTemplate": {
          "type": "string"
        },
        "callbackRequiredTemplate": {
          "type": "string"
        },
        "endpointUrl": {
          "type": "string"
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationHeader"
          }
        },
        "initialContextTemplate": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "requestContent": {
          "type": "string"
        },
        "requestVerb": {
          "type": "string"
        },
        "resourceUrl": {
          "type": "string"
        },
        "resultSelector": {
          "type": "string"
        }
      }
    },
    "DataSourceBinding": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataSourceBindingBase"
        }
      ],
      "properties": {}
    },
    "DataSourceBindingBase": {
      "description": "Represents binding of data source for the service endpoint request.",
      "type": "object",
      "properties": {
        "callbackContextTemplate": {
          "description": "Pagination format supported by this data source(ContinuationToken/SkipTop).",
          "type": "string"
        },
        "callbackRequiredTemplate": {
          "description": "Subsequent calls needed?",
          "type": "string"
        },
        "dataSourceName": {
          "description": "Gets or sets the name of the data source.",
          "type": "string"
        },
        "endpointId": {
          "description": "Gets or sets the endpoint Id.",
          "type": "string"
        },
        "endpointUrl": {
          "description": "Gets or sets the url of the service endpoint.",
          "type": "string"
        },
        "headers": {
          "description": "Gets or sets the authorization headers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationHeader"
          }
        },
        "initialContextTemplate": {
          "description": "Defines the initial value of the query params",
          "type": "string"
        },
        "parameters": {
          "description": "Gets or sets the parameters for the data source.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resultSelector": {
          "description": "Gets or sets the result selector.",
          "type": "string"
        },
        "resultTemplate": {
          "description": "Gets or sets the result template.",
          "type": "string"
        },
        "target": {
          "description": "Gets or sets the target of the data source.",
          "type": "string"
        }
      }
    },
    "DataSourceDetails": {
      "description": "Represents details of the service endpoint data source.",
      "type": "object",
      "properties": {
        "dataSourceName": {
          "description": "Gets or sets the data source name.",
          "type": "string"
        },
        "dataSourceUrl": {
          "description": "Gets or sets the data source url.",
          "type": "string"
        },
        "headers": {
          "description": "Gets or sets the request headers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationHeader"
          }
        },
        "initialContextTemplate": {
          "description": "Gets or sets the initialization context used for the initial call to the data source",
          "type": "string"
        },
        "parameters": {
          "description": "Gets the parameters of data source.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "requestContent": {
          "description": "Gets or sets the data source request content.",
          "type": "string"
        },
        "requestVerb": {
          "description": "Gets or sets the data source request verb. Get/Post are the only implemented types",
          "type": "string"
        },
        "resourceUrl": {
          "description": "Gets or sets the resource url of data source.",
          "type": "string"
        },
        "resultSelector": {
          "description": "Gets or sets the result selector.",
          "type": "string"
        }
      }
    },
    "DependencyBinding": {
      "description": "",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "DependencyData": {
      "description": "",
      "type": "object",
      "properties": {
        "input": {
          "type": "string"
        },
        "map": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "DependsOn": {
      "description": "",
      "type": "object",
      "properties": {
        "input": {
          "type": "string"
        },
        "map": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DependencyBinding"
          }
        }
      }
    },
    "EndpointAuthorization": {
      "description": "Represents the authorization used for service endpoint.",
      "type": "object",
      "properties": {
        "parameters": {
          "description": "Gets or sets the parameters for the selected authorization scheme.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scheme": {
          "description": "Gets or sets the scheme used for service endpoint authentication.",
          "type": "string"
        }
      }
    },
    "EndpointUrl": {
      "description": "Represents url of the service endpoint.",
      "type": "object",
      "properties": {
        "dependsOn": {
          "description": "Gets or sets the dependency bindings.",
          "$ref": "#/definitions/DependsOn"
        },
        "displayName": {
          "description": "Gets or sets the display name of service endpoint url.",
          "type": "string"
        },
        "helpText": {
          "description": "Gets or sets the help text of service endpoint url.",
          "type": "string"
        },
        "isVisible": {
          "description": "Gets or sets the visibility of service endpoint url.",
          "type": "string"
        },
        "value": {
          "description": "Gets or sets the value of service endpoint url.",
          "type": "string"
        }
      }
    },
    "GraphSubjectBase": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "description": "This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional relationships or more detailed information about this graph subject.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "descriptor": {
          "description": "The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and collections.",
          "type": "string"
        },
        "displayName": {
          "description": "This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.",
          "type": "string"
        },
        "url": {
          "description": "This url is the full route to the source resource of this graph subject.",
          "type": "string"
        }
      }
    },
    "HelpLink": {
      "description": "",
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "IdentityRef": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GraphSubjectBase"
        }
      ],
      "properties": {
        "directoryAlias": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "isDeletedInOrigin": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        }
      }
    },
    "InputDescriptor": {
      "description": "Describes an input for subscriptions.",
      "type": "object",
      "properties": {
        "dependencyInputIds": {
          "description": "The ids of all inputs that the value of this input is dependent on.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of what this input is used for",
          "type": "string"
        },
        "groupName": {
          "description": "The group localized name to which this input belongs and can be shown as a header for the container that will include all the inputs in the group.",
          "type": "string"
        },
        "hasDynamicValueInformation": {
          "description": "If true, the value information for this input is dynamic and should be fetched when the value of dependency inputs change.",
          "type": "boolean"
        },
        "id": {
          "description": "Identifier for the subscription input",
          "type": "string"
        },
        "inputMode": {
          "description": "Mode in which the value of this input should be entered",
          "enum": [
            "none",
            "textBox",
            "passwordBox",
            "combo",
            "radioButtons",
            "checkBox",
            "textArea"
          ],
          "x-ms-enum": {
            "name": "InputMode",
            "values": [
              {
                "value": "none",
                "description": "This input should not be shown in the UI"
              },
              {
                "value": "textBox",
                "description": "An input text box should be shown"
              },
              {
                "value": "passwordBox",
                "description": "An password input box should be shown"
              },
              {
                "value": "combo",
                "description": "A select/combo control should be shown"
              },
              {
                "value": "radioButtons",
                "description": "Radio buttons should be shown"
              },
              {
                "value": "checkBox",
                "description": "Checkbox should be shown(for true/false values)"
              },
              {
                "value": "textArea",
                "description": "A multi-line text area should be shown"
              }
            ]
          }
        },
        "isConfidential": {
          "description": "Gets whether this input is confidential, such as for a password or application key",
          "type": "boolean"
        },
        "name": {
          "description": "Localized name which can be shown as a label for the subscription input",
          "type": "string"
        },
        "properties": {
          "description": "Custom properties for the input which can be used by the service provider",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "type": {
          "description": "Underlying data type for the input value. When this value is specified, InputMode, Validation and Values are optional.",
          "type": "string"
        },
        "useInDefaultDescription": {
          "description": "Gets whether this input is included in the default generated action description.",
          "type": "boolean"
        },
        "validation": {
          "description": "Information to use to validate this input's value",
          "$ref": "#/definitions/InputValidation"
        },
        "valueHint": {
          "description": "A hint for input value. It can be used in the UI as the input placeholder.",
          "type": "string"
        },
        "values": {
          "description": "Information about possible values for this input",
          "$ref": "#/definitions/InputValues"
        }
      }
    },
    "InputValidation": {
      "description": "Describes what values are valid for a subscription input",
      "type": "object",
      "properties": {
        "dataType": {
          "enum": [
            "none",
            "string",
            "number",
            "boolean",
            "guid",
            "uri"
          ],
          "x-ms-enum": {
            "name": "InputDataType",
            "values": [
              {
                "value": "none",
                "description": "No data type is specified."
              },
              {
                "value": "string",
                "description": "Represents a textual value."
              },
              {
                "value": "number",
                "description": "Represents a numberic value."
              },
              {
                "value": "boolean",
                "description": "Represents a value of true or false."
              },
              {
                "value": "guid",
                "description": "Represents a Guid."
              },
              {
                "value": "uri",
                "description": "Represents a URI."
              }
            ]
          }
        },
        "isRequired": {
          "type": "boolean"
        },
        "maxLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxValue": {
          "type": "string",
          "format": "decimal"
        },
        "minLength": {
          "type": "integer",
          "format": "int32"
        },
        "minValue": {
          "type": "string",
          "format": "decimal"
        },
        "pattern": {
          "type": "string"
        },
        "patternMismatchErrorMessage": {
          "type": "string"
        }
      }
    },
    "InputValue": {
      "description": "Information about a single value for an input",
      "type": "object",
      "properties": {
        "data": {
          "description": "Any other data about this input",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "displayValue": {
          "description": "The text to show for the display of this value",
          "type": "string"
        },
        "value": {
          "description": "The value to store for this input",
          "type": "string"
        }
      }
    },
    "InputValues": {
      "description": "Information about the possible/allowed values for a given subscription input",
      "type": "object",
      "properties": {
        "defaultValue": {
          "description": "The default value to use for this input",
          "type": "string"
        },
        "error": {
          "description": "Errors encountered while computing dynamic values.",
          "$ref": "#/definitions/InputValuesError"
        },
        "inputId": {
          "description": "The id of the input",
          "type": "string"
        },
        "isDisabled": {
          "description": "Should this input be disabled",
          "type": "boolean"
        },
        "isLimitedToPossibleValues": {
          "description": "Should the value be restricted to one of the values in the PossibleValues (True) or are the values in PossibleValues just a suggestion (False)",
          "type": "boolean"
        },
        "isReadOnly": {
          "description": "Should this input be made read-only",
          "type": "boolean"
        },
        "possibleValues": {
          "description": "Possible values that this input can take",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputValue"
          }
        }
      }
    },
    "InputValuesError": {
      "description": "Error information related to a subscription input value.",
      "type": "object",
      "properties": {
        "message": {
          "description": "The error message.",
          "type": "string"
        }
      }
    },
    "JObject": {
      "description": "",
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/JToken"
        },
        "type": {
          "type": "string",
          "format": "JTokenType"
        }
      }
    },
    "JToken": {
      "description": "",
      "type": "object",
      "properties": {
        "first": {
          "$ref": "#/definitions/JToken"
        },
        "hasValues": {
          "type": "boolean"
        },
        "item": {
          "$ref": "#/definitions/JToken"
        },
        "last": {
          "$ref": "#/definitions/JToken"
        },
        "next": {
          "$ref": "#/definitions/JToken"
        },
        "parent": {
          "type": "string",
          "format": "JContainer"
        },
        "path": {
          "type": "string"
        },
        "previous": {
          "$ref": "#/definitions/JToken"
        },
        "root": {
          "$ref": "#/definitions/JToken"
        },
        "type": {
          "type": "string",
          "format": "JTokenType"
        }
      }
    },
    "OAuthConfiguration": {
      "description": "",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "Gets or sets the ClientId",
          "type": "string"
        },
        "clientSecret": {
          "description": "Gets or sets the ClientSecret",
          "type": "string"
        },
        "createdBy": {
          "description": "Gets or sets the identity who created the config.",
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "description": "Gets or sets the time when config was created.",
          "type": "string",
          "format": "date-time"
        },
        "endpointType": {
          "description": "Gets or sets the type of the endpoint.",
          "type": "string"
        },
        "id": {
          "description": "Gets or sets the unique identifier of this field",
          "type": "string",
          "format": "uuid"
        },
        "modifiedBy": {
          "description": "Gets or sets the identity who modified the config.",
          "$ref": "#/definitions/IdentityRef"
        },
        "modifiedOn": {
          "description": "Gets or sets the time when variable group was modified",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Gets or sets the name",
          "type": "string"
        },
        "url": {
          "description": "Gets or sets the Url",
          "type": "string"
        }
      }
    },
    "OAuthConfigurationParams": {
      "description": "",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "Gets or sets the ClientId",
          "type": "string"
        },
        "clientSecret": {
          "description": "Gets or sets the ClientSecret",
          "type": "string"
        },
        "endpointType": {
          "description": "Gets or sets the type of the endpoint.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name",
          "type": "string"
        },
        "url": {
          "description": "Gets or sets the Url",
          "type": "string"
        }
      }
    },
    "OAuthEndpointStatus": {
      "description": "",
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "statusMessage": {
          "type": "string"
        }
      }
    },
    "ProjectReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ResultTransformationDetails": {
      "description": "Represents template to tranform the result data.",
      "type": "object",
      "properties": {
        "callbackContextTemplate": {
          "description": "Gets or sets the template for callback parameters",
          "type": "string"
        },
        "callbackRequiredTemplate": {
          "description": "Gets or sets the template to decide whether to callback or not",
          "type": "string"
        },
        "resultTemplate": {
          "description": "Gets or sets the template for result transformation.",
          "type": "string"
        }
      }
    },
    "ServiceEndpoint": {
      "description": "Represents an endpoint which may be used by an orchestration job.",
      "type": "object",
      "properties": {
        "administratorsGroup": {
          "description": "Gets or sets the identity reference for the administrators group of the service endpoint.",
          "$ref": "#/definitions/IdentityRef"
        },
        "authorization": {
          "description": "Gets or sets the authorization data for talking to the endpoint.",
          "$ref": "#/definitions/EndpointAuthorization"
        },
        "createdBy": {
          "description": "Gets or sets the identity reference for the user who created the Service endpoint.",
          "$ref": "#/definitions/IdentityRef"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Gets or sets the description of endpoint.",
          "type": "string"
        },
        "groupScopeId": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "description": "Gets or sets the identifier of this endpoint.",
          "type": "string",
          "format": "uuid"
        },
        "isReady": {
          "description": "EndPoint state indictor",
          "type": "boolean"
        },
        "isShared": {
          "description": "Indicates whether service endpoint is shared with other projects or not.",
          "type": "boolean"
        },
        "name": {
          "description": "Gets or sets the friendly name of the endpoint.",
          "type": "string"
        },
        "operationStatus": {
          "description": "Error message during creation/deletion of endpoint",
          "$ref": "#/definitions/JObject"
        },
        "owner": {
          "description": "Owner of the endpoint Supported values are \"library\", \"agentcloud\"",
          "type": "string"
        },
        "readersGroup": {
          "description": "Gets or sets the identity reference for the readers group of the service endpoint.",
          "$ref": "#/definitions/IdentityRef"
        },
        "type": {
          "description": "Gets or sets the type of the endpoint.",
          "type": "string"
        },
        "url": {
          "description": "Gets or sets the url of the endpoint.",
          "type": "string"
        }
      }
    },
    "ServiceEndpointAuthenticationScheme": {
      "description": "",
      "type": "object",
      "properties": {
        "authorizationHeaders": {
          "description": "Gets or sets the authorization headers of service endpoint authentication scheme.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationHeader"
          }
        },
        "authorizationUrl": {
          "description": "Gets or sets the Authorization url required to authenticate using OAuth2",
          "type": "string"
        },
        "clientCertificates": {
          "description": "Gets or sets the certificates of service endpoint authentication scheme.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClientCertificate"
          }
        },
        "dataSourceBindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSourceBinding"
          }
        },
        "displayName": {
          "description": "Gets or sets the display name for the service endpoint authentication scheme.",
          "type": "string"
        },
        "inputDescriptors": {
          "description": "Gets or sets the input descriptors for the service endpoint authentication scheme.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputDescriptor"
          }
        },
        "scheme": {
          "description": "Gets or sets the scheme for service endpoint authentication.",
          "type": "string"
        }
      }
    },
    "ServiceEndpointDetails": {
      "description": "Represents details of the service endpoint.",
      "type": "object",
      "properties": {
        "authorization": {
          "description": "Gets or sets the authorization of service endpoint.",
          "$ref": "#/definitions/EndpointAuthorization"
        },
        "data": {
          "description": "Gets or sets the data of service endpoint.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "description": "Gets or sets the type of service endpoint.",
          "type": "string"
        },
        "url": {
          "description": "Gets or sets the connection url of service endpoint.",
          "type": "string"
        }
      }
    },
    "ServiceEndpointExecutionData": {
      "description": "Represents service endpoint execution data.",
      "type": "object",
      "properties": {
        "definition": {
          "description": "Gets the definition of service endpoint execution owner.",
          "$ref": "#/definitions/ServiceEndpointExecutionOwner"
        },
        "finishTime": {
          "description": "Gets the finish time of service endpoint execution.",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "Gets the Id of service endpoint execution data.",
          "type": "integer",
          "format": "int64"
        },
        "owner": {
          "description": "Gets the owner of service endpoint execution data.",
          "$ref": "#/definitions/ServiceEndpointExecutionOwner"
        },
        "planType": {
          "description": "Gets the plan type of service endpoint execution data.",
          "type": "string"
        },
        "result": {
          "description": "Gets the result of service endpoint execution.",
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "ServiceEndpointExecutionResult",
            "values": [
              {
                "value": "succeeded",
                "description": ""
              },
              {
                "value": "succeededWithIssues",
                "description": ""
              },
              {
                "value": "failed",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              },
              {
                "value": "skipped",
                "description": ""
              },
              {
                "value": "abandoned",
                "description": ""
              }
            ]
          }
        },
        "startTime": {
          "description": "Gets the start time of service endpoint execution.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ServiceEndpointExecutionOwner": {
      "description": "Represents execution owner of the service endpoint.",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "id": {
          "description": "Gets or sets the Id of service endpoint execution owner.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Gets or sets the name of service endpoint execution owner.",
          "type": "string"
        }
      }
    },
    "ServiceEndpointExecutionRecord": {
      "description": "",
      "type": "object",
      "properties": {
        "data": {
          "description": "Gets the execution data of service endpoint execution.",
          "$ref": "#/definitions/ServiceEndpointExecutionData"
        },
        "endpointId": {
          "description": "Gets the Id of service endpoint.",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ServiceEndpointExecutionRecordsInput": {
      "description": "",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ServiceEndpointExecutionData"
        },
        "endpointIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "ServiceEndpointOAuthConfigurationReference": {
      "description": "",
      "type": "object",
      "properties": {
        "configurationId": {
          "type": "string",
          "format": "uuid"
        },
        "serviceEndpointId": {
          "type": "string",
          "format": "uuid"
        },
        "serviceEndpointProjectId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ServiceEndpointRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "dataSourceDetails": {
          "description": "Gets or sets the data source details for the service endpoint request.",
          "$ref": "#/definitions/DataSourceDetails"
        },
        "resultTransformationDetails": {
          "description": "Gets or sets the result transformation details for the service endpoint request.",
          "$ref": "#/definitions/ResultTransformationDetails"
        },
        "serviceEndpointDetails": {
          "description": "Gets or sets the service endpoint details for the service endpoint request.",
          "$ref": "#/definitions/ServiceEndpointDetails"
        }
      }
    },
    "ServiceEndpointRequestResult": {
      "description": "Represents result of the service endpoint request.",
      "type": "object",
      "properties": {
        "callbackContextParameters": {
          "description": "Gets or sets the parameters used to make subsequent calls to the data source",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "callbackRequired": {
          "description": "Gets or sets the flat that decides if another call to the data source is to be made",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Gets or sets the error message of the service endpoint request result.",
          "type": "string"
        },
        "result": {
          "description": "Gets or sets the result of service endpoint request.",
          "$ref": "#/definitions/JToken"
        },
        "statusCode": {
          "description": "Gets or sets the status code of the service endpoint request result.",
          "enum": [
            "continue",
            "switchingProtocols",
            "oK",
            "created",
            "accepted",
            "nonAuthoritativeInformation",
            "noContent",
            "resetContent",
            "partialContent",
            "multipleChoices",
            "ambiguous",
            "movedPermanently",
            "moved",
            "found",
            "redirect",
            "seeOther",
            "redirectMethod",
            "notModified",
            "useProxy",
            "unused",
            "temporaryRedirect",
            "redirectKeepVerb",
            "badRequest",
            "unauthorized",
            "paymentRequired",
            "forbidden",
            "notFound",
            "methodNotAllowed",
            "notAcceptable",
            "proxyAuthenticationRequired",
            "requestTimeout",
            "conflict",
            "gone",
            "lengthRequired",
            "preconditionFailed",
            "requestEntityTooLarge",
            "requestUriTooLong",
            "unsupportedMediaType",
            "requestedRangeNotSatisfiable",
            "expectationFailed",
            "upgradeRequired",
            "internalServerError",
            "notImplemented",
            "badGateway",
            "serviceUnavailable",
            "gatewayTimeout",
            "httpVersionNotSupported"
          ],
          "x-ms-enum": {
            "name": "HttpStatusCode",
            "values": [
              {
                "value": "continue",
                "description": ""
              },
              {
                "value": "switchingProtocols",
                "description": ""
              },
              {
                "value": "oK",
                "description": ""
              },
              {
                "value": "created",
                "description": ""
              },
              {
                "value": "accepted",
                "description": ""
              },
              {
                "value": "nonAuthoritativeInformation",
                "description": ""
              },
              {
                "value": "noContent",
                "description": ""
              },
              {
                "value": "resetContent",
                "description": ""
              },
              {
                "value": "partialContent",
                "description": ""
              },
              {
                "value": "multipleChoices",
                "description": ""
              },
              {
                "value": "ambiguous",
                "description": ""
              },
              {
                "value": "movedPermanently",
                "description": ""
              },
              {
                "value": "moved",
                "description": ""
              },
              {
                "value": "found",
                "description": ""
              },
              {
                "value": "redirect",
                "description": ""
              },
              {
                "value": "seeOther",
                "description": ""
              },
              {
                "value": "redirectMethod",
                "description": ""
              },
              {
                "value": "notModified",
                "description": ""
              },
              {
                "value": "useProxy",
                "description": ""
              },
              {
                "value": "unused",
                "description": ""
              },
              {
                "value": "temporaryRedirect",
                "description": ""
              },
              {
                "value": "redirectKeepVerb",
                "description": ""
              },
              {
                "value": "badRequest",
                "description": ""
              },
              {
                "value": "unauthorized",
                "description": ""
              },
              {
                "value": "paymentRequired",
                "description": ""
              },
              {
                "value": "forbidden",
                "description": ""
              },
              {
                "value": "notFound",
                "description": ""
              },
              {
                "value": "methodNotAllowed",
                "description": ""
              },
              {
                "value": "notAcceptable",
                "description": ""
              },
              {
                "value": "proxyAuthenticationRequired",
                "description": ""
              },
              {
                "value": "requestTimeout",
                "description": ""
              },
              {
                "value": "conflict",
                "description": ""
              },
              {
                "value": "gone",
                "description": ""
              },
              {
                "value": "lengthRequired",
                "description": ""
              },
              {
                "value": "preconditionFailed",
                "description": ""
              },
              {
                "value": "requestEntityTooLarge",
                "description": ""
              },
              {
                "value": "requestUriTooLong",
                "description": ""
              },
              {
                "value": "unsupportedMediaType",
                "description": ""
              },
              {
                "value": "requestedRangeNotSatisfiable",
                "description": ""
              },
              {
                "value": "expectationFailed",
                "description": ""
              },
              {
                "value": "upgradeRequired",
                "description": ""
              },
              {
                "value": "internalServerError",
                "description": ""
              },
              {
                "value": "notImplemented",
                "description": ""
              },
              {
                "value": "badGateway",
                "description": ""
              },
              {
                "value": "serviceUnavailable",
                "description": ""
              },
              {
                "value": "gatewayTimeout",
                "description": ""
              },
              {
                "value": "httpVersionNotSupported",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "ServiceEndpointType": {
      "description": "Represents type of the service endpoint.",
      "type": "object",
      "properties": {
        "authenticationSchemes": {
          "description": "Authentication scheme of service endpoint type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpointAuthenticationScheme"
          }
        },
        "dataSources": {
          "description": "Data sources of service endpoint type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSource"
          }
        },
        "dependencyData": {
          "description": "Dependency data of service endpoint type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DependencyData"
          }
        },
        "description": {
          "description": "Gets or sets the description of service endpoint type.",
          "type": "string"
        },
        "displayName": {
          "description": "Gets or sets the display name of service endpoint type.",
          "type": "string"
        },
        "endpointUrl": {
          "description": "Gets or sets the endpoint url of service endpoint type.",
          "$ref": "#/definitions/EndpointUrl"
        },
        "helpLink": {
          "description": "Gets or sets the help link of service endpoint type.",
          "$ref": "#/definitions/HelpLink"
        },
        "helpMarkDown": {
          "type": "string"
        },
        "iconUrl": {
          "description": "Gets or sets the icon url of service endpoint type.",
          "type": "string"
        },
        "inputDescriptors": {
          "description": "Input descriptor of service endpoint type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputDescriptor"
          }
        },
        "name": {
          "description": "Gets or sets the name of service endpoint type.",
          "type": "string"
        },
        "trustedHosts": {
          "description": "Trusted hosts of a service endpoint type.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uiContributionId": {
          "description": "Gets or sets the ui contribution id of service endpoint type.",
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialized collections as a single JSON object on the wire, to avoid serializing JSON arrays directly to the client, which can be a security hole",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '5.0-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.2": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '5.0-preview.2' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.serviceendpoint": "Grants the ability to read service endpoints.",
        "vso.serviceendpoint_manage": "Grants the ability to read, query and manage service endpoints.",
        "vso.serviceendpoint_query": "Grants the ability to read and query service endpoints."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  }
}