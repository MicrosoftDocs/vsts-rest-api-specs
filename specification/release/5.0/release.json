{
  "swagger": "2.0",
  "info": {
    "title": "Release",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "5.0"
  },
  "host": "vsrm.dev.azure.com",
  "x-ms-vss-area": "Release",
  "x-ms-vss-resource-area-id": "efc2f575-36ef-48e9-b672-0c6fb4a48ac5",
  "basePath": "/",
  "tags": [
    {
      "name": "Approvals"
    },
    {
      "name": "Attachments"
    },
    {
      "name": "Definitions"
    },
    {
      "name": "Deployments"
    },
    {
      "name": "Gates"
    },
    {
      "name": "Manual Interventions"
    },
    {
      "name": "Releases"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{organization}/{project}/_apis/release/approvals": {
      "get": {
        "tags": [
          "Approvals"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "approvals",
        "x-ms-vss-method": "GetApprovals",
        "description": "Get a list of approvals",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "assignedToFilter",
            "description": "Approvals assigned to this user.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "statusFilter",
            "description": "Approvals with this status. Default is 'pending'.",
            "required": false,
            "type": "string",
            "enum": [
              "undefined",
              "pending",
              "approved",
              "rejected",
              "reassigned",
              "canceled",
              "skipped"
            ],
            "x-ms-enum": {
              "name": "ApprovalStatus",
              "values": [
                {
                  "value": "undefined",
                  "description": ""
                },
                {
                  "value": "pending",
                  "description": ""
                },
                {
                  "value": "approved",
                  "description": ""
                },
                {
                  "value": "rejected",
                  "description": ""
                },
                {
                  "value": "reassigned",
                  "description": ""
                },
                {
                  "value": "canceled",
                  "description": ""
                },
                {
                  "value": "skipped",
                  "description": ""
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "releaseIdsFilter",
            "description": "Approvals for release id(s) mentioned in the filter. Multiple releases can be mentioned by separating them with ',' e.g. releaseIdsFilter=1,2,3,4.",
            "required": false,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "in": "query",
            "name": "typeFilter",
            "description": "Approval with this type.",
            "required": false,
            "type": "string",
            "enum": [
              "undefined",
              "preDeploy",
              "postDeploy",
              "all"
            ],
            "x-ms-enum": {
              "name": "ApprovalType",
              "values": [
                {
                  "value": "undefined",
                  "description": ""
                },
                {
                  "value": "preDeploy",
                  "description": ""
                },
                {
                  "value": "postDeploy",
                  "description": ""
                },
                {
                  "value": "all",
                  "description": ""
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Number of approvals to get. Default is 50.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Gets the approvals after the continuation token provided.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "queryOrder",
            "description": "Gets the results in the defined order of created approvals. Default is 'descending'.",
            "required": false,
            "type": "string",
            "enum": [
              "descending",
              "ascending"
            ],
            "x-ms-enum": {
              "name": "ReleaseQueryOrder",
              "values": [
                {
                  "value": "descending",
                  "description": ""
                },
                {
                  "value": "ascending",
                  "description": ""
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "includeMyGroupApprovals",
            "description": "'true' to include my group approvals. Default is 'false'.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseApproval"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ],
        "x-ms-examples": {
          "Pending for all users": {
            "$ref": "./httpExamples/approvals/GET__ListAllPendingApprovals.json"
          },
          "Pending for a specific user": {
            "$ref": "./httpExamples/approvals/GET__ListPendingApprovalsForASpecificUser.json"
          },
          "Pending for a specific release": {
            "$ref": "./httpExamples/approvals/GET__ListPendingApprovalsForASpecificARelease.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/release/approvals/{approvalId}": {
      "patch": {
        "tags": [
          "Approvals"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "approvals",
        "x-ms-vss-method": "UpdateReleaseApproval",
        "description": "Update status of an approval",
        "operationId": "Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "ReleaseApproval object having status, approver and comments.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseApproval"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "approvalId",
            "description": "Id of the approval.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReleaseApproval"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "Approve a release": {
            "$ref": "./httpExamples/approvals/PATCH__UpdateStatusOfAnApprovalFromPendingToApproved.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/release/definitions": {
      "post": {
        "tags": [
          "Definitions"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "definitions",
        "x-ms-vss-method": "CreateReleaseDefinition",
        "description": "Create a release definition",
        "operationId": "Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "release definition object to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseDefinition"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReleaseDefinition"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release_execute"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Definitions"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "definitions",
        "x-ms-vss-method": "GetReleaseDefinitions",
        "description": "Get a list of release definitions.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchText",
            "description": "Get release definitions with names containing searchText.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "The properties that should be expanded in the list of Release definitions.",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "environments",
              "artifacts",
              "triggers",
              "variables",
              "tags",
              "lastRelease"
            ],
            "x-ms-enum": {
              "name": "ReleaseDefinitionExpands",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "environments",
                  "description": ""
                },
                {
                  "value": "artifacts",
                  "description": ""
                },
                {
                  "value": "triggers",
                  "description": ""
                },
                {
                  "value": "variables",
                  "description": ""
                },
                {
                  "value": "tags",
                  "description": ""
                },
                {
                  "value": "lastRelease",
                  "description": ""
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "artifactType",
            "description": "Release definitions with given artifactType will be returned. Values can be Build, Jenkins, GitHub, Nuget, Team Build (external), ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "artifactSourceId",
            "description": "Release definitions with given artifactSourceId will be returned. e.g. For build it would be {projectGuid}:{BuildDefinitionId}, for Jenkins it would be {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it would be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}. For third-party artifacts e.g. TeamCity, BitBucket you may refer 'uniqueSourceIdentifier' inside vss-extension.json at https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Number of release definitions to get.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Gets the release definitions after the continuation token provided.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "queryOrder",
            "description": "Gets the results in the defined order. Default is 'IdAscending'.",
            "required": false,
            "type": "string",
            "enum": [
              "idAscending",
              "idDescending",
              "nameAscending",
              "nameDescending"
            ],
            "x-ms-enum": {
              "name": "ReleaseDefinitionQueryOrder",
              "values": [
                {
                  "value": "idAscending",
                  "description": ""
                },
                {
                  "value": "idDescending",
                  "description": ""
                },
                {
                  "value": "nameAscending",
                  "description": ""
                },
                {
                  "value": "nameDescending",
                  "description": ""
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "path",
            "description": "Gets the release definitions under the specified path.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isExactNameMatch",
            "description": "'true'to gets the release definitions with exact match as specified in searchText. Default is 'false'.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "tagFilter",
            "description": "A comma-delimited list of tags. Only release definitions with these tags will be returned.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "propertyFilters",
            "description": "A comma-delimited list of extended properties to be retrieved. If set, the returned Release Definitions will contain values for the specified property Ids (if they exist). If not set, properties will not be included. Note that this will not filter out any Release Definition from results irrespective of whether it has property set or not.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "definitionIdFilter",
            "description": "A comma-delimited list of release definitions to retrieve.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "isDeleted",
            "description": "'true' to get release definitions that has been deleted. Default is 'false'",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseDefinition"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/definitions/GET__ListAllReleaseDefinitions.json"
          },
          "With environments details expanded": {
            "$ref": "./httpExamples/definitions/GET__ListAllReleaseDefinitionsWithEnvironmentsExpanded.json"
          },
          "With artifacts details expanded": {
            "$ref": "./httpExamples/definitions/GET_ListAllReleaseDefinitionsWithArtifactsExpanded.json"
          }
        }
      },
      "put": {
        "tags": [
          "Definitions"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "definitions",
        "x-ms-vss-method": "UpdateReleaseDefinition",
        "description": "Update a release definition.",
        "operationId": "Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Release definition object to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseDefinition"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReleaseDefinition"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release_execute"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/release/definitions/{definitionId}": {
      "delete": {
        "tags": [
          "Definitions"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "definitions",
        "x-ms-vss-method": "DeleteReleaseDefinition",
        "description": "Delete a release definition.",
        "operationId": "Delete",
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "Id of the release definition.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "comment",
            "description": "Comment for deleting a release definition.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "forceDelete",
            "description": "'true' to automatically cancel any in-progress release deployments and proceed with release definition deletion . Default is 'false'.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/definitions/DELETE__DeleteReleaseDefinition.json"
          }
        }
      },
      "get": {
        "tags": [
          "Definitions"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "definitions",
        "x-ms-vss-method": "GetReleaseDefinition",
        "description": "Get a release definition.",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "Id of the release definition.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "propertyFilters",
            "description": "A comma-delimited list of extended properties to be retrieved. If set, the returned Release Definition will contain values for the specified property Ids (if they exist). If not set, properties will not be included.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReleaseDefinition"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/Release/definitions/{definitionId}/revisions": {
      "get": {
        "tags": [
          "Definitions"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "revisions",
        "x-ms-vss-method": "GetReleaseDefinitionHistory",
        "x-ms-preview": true,
        "description": "Get revision history for a release definition",
        "operationId": "Get Release Definition History",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "Id of the definition.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseDefinitionRevision"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/revisions/GET__GetReleaseDefinitionRevision.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/Release/definitions/{definitionId}/revisions/{revision}": {
      "get": {
        "tags": [
          "Definitions"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "revisions",
        "x-ms-vss-method": "GetDefinitionRevision",
        "x-ms-preview": true,
        "description": "Get release definition for a given definitionId and revision",
        "operationId": "Get Definition Revision",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "Id of the definition.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "revision",
            "description": "Id of the revision.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/release/deployments": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "deployments",
        "x-ms-vss-method": "GetDeployments",
        "description": "",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "definitionId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "definitionEnvironmentId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "createdBy",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "minModifiedTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "maxModifiedTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "deploymentStatus",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "undefined",
              "notDeployed",
              "inProgress",
              "succeeded",
              "partiallySucceeded",
              "failed",
              "all"
            ],
            "x-ms-enum": {
              "name": "DeploymentStatus",
              "values": [
                {
                  "value": "undefined",
                  "description": "The deployment status is undefined."
                },
                {
                  "value": "notDeployed",
                  "description": "The deployment status is not deployed."
                },
                {
                  "value": "inProgress",
                  "description": "The deployment status is inprogress."
                },
                {
                  "value": "succeeded",
                  "description": "The deployment status is succeeded."
                },
                {
                  "value": "partiallySucceeded",
                  "description": "The deployment status is partiallysucceeded."
                },
                {
                  "value": "failed",
                  "description": "The deployment status is failed."
                },
                {
                  "value": "all",
                  "description": "The deployment status is all."
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "operationStatus",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "undefined",
              "queued",
              "scheduled",
              "pending",
              "approved",
              "rejected",
              "deferred",
              "queuedForAgent",
              "phaseInProgress",
              "phaseSucceeded",
              "phasePartiallySucceeded",
              "phaseFailed",
              "canceled",
              "phaseCanceled",
              "manualInterventionPending",
              "queuedForPipeline",
              "cancelling",
              "evaluatingGates",
              "gateFailed",
              "all"
            ],
            "x-ms-enum": {
              "name": "DeploymentOperationStatus",
              "values": [
                {
                  "value": "undefined",
                  "description": "The deployment operation status is undefined."
                },
                {
                  "value": "queued",
                  "description": "The deployment operation status is queued."
                },
                {
                  "value": "scheduled",
                  "description": "The deployment operation status is scheduled."
                },
                {
                  "value": "pending",
                  "description": "The deployment operation status is pending."
                },
                {
                  "value": "approved",
                  "description": "The deployment operation status is approved."
                },
                {
                  "value": "rejected",
                  "description": "The deployment operation status is rejected."
                },
                {
                  "value": "deferred",
                  "description": "The deployment operation status is deferred."
                },
                {
                  "value": "queuedForAgent",
                  "description": "The deployment operation status is queued for agent."
                },
                {
                  "value": "phaseInProgress",
                  "description": "The deployment operation status is phase inprogress."
                },
                {
                  "value": "phaseSucceeded",
                  "description": "The deployment operation status is phase succeeded."
                },
                {
                  "value": "phasePartiallySucceeded",
                  "description": "The deployment operation status is phase partially succeeded."
                },
                {
                  "value": "phaseFailed",
                  "description": "The deployment operation status is phase failed."
                },
                {
                  "value": "canceled",
                  "description": "The deployment operation status is canceled."
                },
                {
                  "value": "phaseCanceled",
                  "description": "The deployment operation status is phase canceled."
                },
                {
                  "value": "manualInterventionPending",
                  "description": "The deployment operation status is manualintervention pending."
                },
                {
                  "value": "queuedForPipeline",
                  "description": "The deployment operation status is queued for pipeline."
                },
                {
                  "value": "cancelling",
                  "description": "The deployment operation status is cancelling."
                },
                {
                  "value": "evaluatingGates",
                  "description": "The deployment operation status is EvaluatingGates."
                },
                {
                  "value": "gateFailed",
                  "description": "The deployment operation status is GateFailed."
                },
                {
                  "value": "all",
                  "description": "The deployment operation status is all."
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "latestAttemptsOnly",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "queryOrder",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "descending",
              "ascending"
            ],
            "x-ms-enum": {
              "name": "ReleaseQueryOrder",
              "values": [
                {
                  "value": "descending",
                  "description": ""
                },
                {
                  "value": "ascending",
                  "description": ""
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "$top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "createdFor",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "minStartedTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "maxStartedTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "sourceBranch",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Deployment"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ],
        "x-ms-examples": {
          "Get all deployments for a given definition Id": {
            "$ref": "./httpExamples/deployments/GET__ListDeploymentsForAGivenDefinitionId.json"
          },
          "Get all deployments in the project": {
            "$ref": "./httpExamples/deployments/GET__ListDeployments.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/release/gates/{gateStepId}": {
      "patch": {
        "tags": [
          "Gates"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "gates",
        "x-ms-vss-method": "UpdateGates",
        "x-ms-preview": true,
        "description": "Updates the gate for a deployment.",
        "operationId": "Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Metadata to patch the Release Gates.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GateUpdateMetadata"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "gateStepId",
            "description": "Gate step Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReleaseGates"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release_execute"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/release/releases": {
      "get": {
        "tags": [
          "Releases"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "releases",
        "x-ms-vss-method": "GetReleases",
        "description": "Get a list of releases",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "definitionId",
            "description": "Releases from this release definition Id.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "definitionEnvironmentId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "searchText",
            "description": "Releases with names containing searchText.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "createdBy",
            "description": "Releases created by this user.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "statusFilter",
            "description": "Releases that have this status.",
            "required": false,
            "type": "string",
            "enum": [
              "undefined",
              "draft",
              "active",
              "abandoned"
            ],
            "x-ms-enum": {
              "name": "ReleaseStatus",
              "values": [
                {
                  "value": "undefined",
                  "description": ""
                },
                {
                  "value": "draft",
                  "description": ""
                },
                {
                  "value": "active",
                  "description": ""
                },
                {
                  "value": "abandoned",
                  "description": ""
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "environmentStatusFilter",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "minCreatedTime",
            "description": "Releases that were created after this time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "maxCreatedTime",
            "description": "Releases that were created before this time.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "queryOrder",
            "description": "Gets the results in the defined order of created date for releases. Default is descending.",
            "required": false,
            "type": "string",
            "enum": [
              "descending",
              "ascending"
            ],
            "x-ms-enum": {
              "name": "ReleaseQueryOrder",
              "values": [
                {
                  "value": "descending",
                  "description": ""
                },
                {
                  "value": "ascending",
                  "description": ""
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Number of releases to get. Default is 50.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Gets the releases after the continuation token provided.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "The property that should be expanded in the list of releases.",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "environments",
              "artifacts",
              "approvals",
              "manualInterventions",
              "variables",
              "tags"
            ],
            "x-ms-enum": {
              "name": "ReleaseExpands",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "environments",
                  "description": ""
                },
                {
                  "value": "artifacts",
                  "description": ""
                },
                {
                  "value": "approvals",
                  "description": ""
                },
                {
                  "value": "manualInterventions",
                  "description": ""
                },
                {
                  "value": "variables",
                  "description": ""
                },
                {
                  "value": "tags",
                  "description": ""
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "artifactTypeId",
            "description": "Releases with given artifactTypeId will be returned. Values can be Build, Jenkins, GitHub, Nuget, Team Build (external), ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "sourceId",
            "description": "Unique identifier of the artifact used. e.g. For build it would be {projectGuid}:{BuildDefinitionId}, for Jenkins it would be {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it would be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}. For third-party artifacts e.g. TeamCity, BitBucket you may refer 'uniqueSourceIdentifier' inside vss-extension.json https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "artifactVersionId",
            "description": "Releases with given artifactVersionId will be returned. E.g. in case of Build artifactType, it is buildId.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "sourceBranchFilter",
            "description": "Releases with given sourceBranchFilter will be returned.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isDeleted",
            "description": "Gets the soft deleted releases, if true.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "tagFilter",
            "description": "A comma-delimited list of tags. Only releases with these tags will be returned.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "propertyFilters",
            "description": "A comma-delimited list of extended properties to be retrieved. If set, the returned Releases will contain values for the specified property Ids (if they exist). If not set, properties will not be included. Note that this will not filter out any Release from results irrespective of whether it has property set or not.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "releaseIdFilter",
            "description": "A comma-delimited list of releases Ids. Only releases with these Ids will be returned.",
            "required": false,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Release"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/releases/Query_ListAllReleases.json"
          },
          "For a release definition": {
            "$ref": "./httpExamples/releases/GET__ListAllReleasesForAReleaseDefinition.json"
          }
        }
      },
      "post": {
        "tags": [
          "Releases"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "releases",
        "x-ms-vss-method": "CreateRelease",
        "description": "Create a release.",
        "operationId": "Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Metadata to create a release.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseStartMetadata"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Release"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release_execute"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/releases/POST__CreateARelease.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/release/releases/{releaseId}": {
      "get": {
        "tags": [
          "Releases"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "releases",
        "x-ms-vss-method": "GetReleaseRevision",
        "description": "Get release for a given revision number.",
        "operationId": "Get Release Revision",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "Id of the release.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "definitionSnapshotRevision",
            "description": "Definition snapshot revision number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Releases"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "releases",
        "x-ms-vss-method": "UpdateRelease",
        "description": "Update a complete release object.",
        "operationId": "Update Release",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Release object for update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Release"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "Id of the release to update.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Release"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release_execute"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Releases"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "releases",
        "x-ms-vss-method": "UpdateReleaseResource",
        "description": "Update few properties of a release.",
        "operationId": "Update Release Resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Properties of release to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseUpdateMetadata"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "Id of the release to update.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Release"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release_execute"
            ]
          }
        ],
        "x-ms-examples": {
          "Abandoning an active release": {
            "$ref": "./httpExamples/releases/PATCH__AbandonAnActiveRelease.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/Release/releases/{releaseId}/environments/{environmentId}": {
      "patch": {
        "tags": [
          "Releases"
        ],
        "x-ms-docs-override-version": "5.0-preview.6",
        "x-ms-vss-resource": "environments",
        "x-ms-vss-method": "UpdateReleaseEnvironment",
        "x-ms-preview": true,
        "description": "Update the status of a release environment",
        "operationId": "Update Release Environment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Environment update meta data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseEnvironmentUpdateMetadata"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "Id of the release.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "Id of release environment.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.6"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReleaseEnvironment"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release_execute"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/plan/{planId}/attachments/{type}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "GetReleaseTaskAttachments",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Get Release Task Attachments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "attemptId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseTaskAttachment"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/plan/{planId}/timelines/{timelineId}/records/{recordId}/attachments/{type}/{name}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "GetReleaseTaskAttachmentContent",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Get Release Task Attachment Content",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "attemptId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timelineId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "recordId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/timelines/{timelineId}/attachments/{type}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "GetTaskAttachments",
        "x-ms-preview": true,
        "deprecated": true,
        "description": "GetTaskAttachments API is deprecated. Use GetReleaseTaskAttachments API instead.",
        "operationId": "Get Task Attachments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "attemptId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "timelineId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseTaskAttachment"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/timelines/{timelineId}/records/{recordId}/attachments/{type}/{name}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "GetTaskAttachmentContent",
        "x-ms-preview": true,
        "deprecated": true,
        "description": "GetTaskAttachmentContent API is deprecated. Use GetReleaseTaskAttachmentContent API instead.",
        "operationId": "Get Task Attachment Content",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "attemptId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "timelineId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "recordId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/deployPhases/{releaseDeployPhaseId}/tasks/{taskId}/logs": {
      "get": {
        "tags": [
          "Releases"
        ],
        "x-ms-docs-override-version": "5.0-preview.2",
        "x-ms-vss-resource": "logs",
        "x-ms-vss-method": "GetTaskLog",
        "x-ms-preview": true,
        "description": "Gets the task log of a release as a plain text file.",
        "operationId": "Get Task Log",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "Id of the release.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "Id of release environment.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "releaseDeployPhaseId",
            "description": "Release deploy phase Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "taskId",
            "description": "ReleaseTask Id for the log.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startLine",
            "description": "Starting line number for logs",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "endLine",
            "description": "Ending line number for logs",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/release/releases/{releaseId}/logs": {
      "get": {
        "tags": [
          "Releases"
        ],
        "x-ms-docs-override-version": "5.0-preview.2",
        "x-ms-vss-resource": "logs",
        "x-ms-vss-method": "GetLogs",
        "x-ms-preview": true,
        "description": "Get logs for a release Id.",
        "operationId": "Get Logs",
        "produces": [
          "application/zip"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "Id of the release.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/Release/releases/{releaseId}/manualinterventions": {
      "get": {
        "tags": [
          "Manual Interventions"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "manualInterventions",
        "x-ms-vss-method": "GetManualInterventions",
        "description": "List all manual interventions for a given release.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "Id of the release.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManualIntervention"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ],
        "x-ms-examples": {
          "Get manual interventions": {
            "$ref": "./httpExamples/manualInterventions/GET__GetManualInterventions.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/Release/releases/{releaseId}/manualinterventions/{manualInterventionId}": {
      "get": {
        "tags": [
          "Manual Interventions"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "manualInterventions",
        "x-ms-vss-method": "GetManualIntervention",
        "description": "Get manual intervention for a given release and manual intervention id.",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "Id of the release.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "manualInterventionId",
            "description": "Id of the manual intervention.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ManualIntervention"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ],
        "x-ms-examples": {
          "Get manual intervention": {
            "$ref": "./httpExamples/manualInterventions/GET__GetManualIntervention.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Manual Interventions"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "manualInterventions",
        "x-ms-vss-method": "UpdateManualIntervention",
        "description": "Update manual intervention.",
        "operationId": "Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Meta data to update manual intervention.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManualInterventionUpdateMetadata"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "Id of the release.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "manualInterventionId",
            "description": "Id of the manual intervention.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ManualIntervention"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release_execute"
            ]
          }
        ],
        "x-ms-examples": {
          "Resume manual intervention": {
            "$ref": "./httpExamples/manualInterventions/PATCH__ResumeManualIntervention.json"
          },
          "Reject manual intervention": {
            "$ref": "./httpExamples/manualInterventions/PATCH__RejectManualIntervention.json"
          }
        }
      }
    }
  },
  "x-ms-paths": {
    "/{organization}/{project}/_apis/release/releases/{releaseId}?": {
      "get": {
        "tags": [
          "Releases"
        ],
        "x-ms-docs-override-version": "5.0",
        "x-ms-vss-resource": "releases",
        "x-ms-vss-method": "GetRelease",
        "description": "Get a Release",
        "operationId": "Get Release",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "description": "Id of the release.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "approvalFilters",
            "description": "A filter which would allow fetching approval steps selectively based on whether it is automated, or manual. This would also decide whether we should fetch pre and post approval snapshots. Assumes All by default",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "manualApprovals",
              "automatedApprovals",
              "approvalSnapshots",
              "all"
            ],
            "x-ms-enum": {
              "name": "ApprovalFilters",
              "values": [
                {
                  "value": "none",
                  "description": "No approvals or approval snapshots"
                },
                {
                  "value": "manualApprovals",
                  "description": "Manual approval steps but no approval snapshots (Use with ApprovalSnapshots for snapshots)"
                },
                {
                  "value": "automatedApprovals",
                  "description": "Automated approval steps but no approval snapshots (Use with ApprovalSnapshots for snapshots)"
                },
                {
                  "value": "approvalSnapshots",
                  "description": "No approval steps, but approval snapshots (Use with either ManualApprovals or AutomatedApprovals for approval steps)"
                },
                {
                  "value": "all",
                  "description": "All approval steps and approval snapshots"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "propertyFilters",
            "description": "A comma-delimited list of extended properties to be retrieved. If set, the returned Release will contain values for the specified property Ids (if they exist). If not set, properties will not be included.",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "A property that should be expanded in the release.",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "tasks"
            ],
            "x-ms-enum": {
              "name": "SingleReleaseExpands",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "tasks",
                  "description": ""
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "$topGateRecords",
            "description": "Number of release gate records to get. Default is 5.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Release"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.release"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/releases/GET__GetARelease.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AgentArtifactDefinition": {
      "description": "",
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "artifactType": {
          "enum": [
            "xamlBuild",
            "build",
            "jenkins",
            "fileShare",
            "nuget",
            "tfsOnPrem",
            "gitHub",
            "tFGit",
            "externalTfsBuild",
            "custom",
            "tfvc"
          ],
          "x-ms-enum": {
            "name": "AgentArtifactType",
            "values": [
              {
                "value": "xamlBuild",
                "description": ""
              },
              {
                "value": "build",
                "description": ""
              },
              {
                "value": "jenkins",
                "description": ""
              },
              {
                "value": "fileShare",
                "description": ""
              },
              {
                "value": "nuget",
                "description": ""
              },
              {
                "value": "tfsOnPrem",
                "description": ""
              },
              {
                "value": "gitHub",
                "description": ""
              },
              {
                "value": "tFGit",
                "description": ""
              },
              {
                "value": "externalTfsBuild",
                "description": ""
              },
              {
                "value": "custom",
                "description": ""
              },
              {
                "value": "tfvc",
                "description": ""
              }
            ]
          }
        },
        "details": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "AgentBasedDeployPhase": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeployPhase"
        }
      ],
      "properties": {
        "deploymentInput": {
          "$ref": "#/definitions/AgentDeploymentInput"
        }
      }
    },
    "AgentDeploymentInput": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeploymentInput"
        }
      ],
      "properties": {
        "imageId": {
          "type": "integer",
          "format": "int32"
        },
        "parallelExecution": {
          "$ref": "#/definitions/ExecutionInput"
        }
      }
    },
    "AgentPoolQueueReference": {
      "description": "Represents a reference to an agent queue.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ],
      "properties": {
        "id": {
          "description": "The ID of the queue.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ApprovalOptions": {
      "description": "",
      "type": "object",
      "properties": {
        "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": {
          "type": "boolean"
        },
        "enforceIdentityRevalidation": {
          "type": "boolean"
        },
        "executionOrder": {
          "enum": [
            "beforeGates",
            "afterSuccessfulGates",
            "afterGatesAlways"
          ],
          "x-ms-enum": {
            "name": "ApprovalExecutionOrder",
            "values": [
              {
                "value": "beforeGates",
                "description": ""
              },
              {
                "value": "afterSuccessfulGates",
                "description": ""
              },
              {
                "value": "afterGatesAlways",
                "description": ""
              }
            ]
          }
        },
        "releaseCreatorCanBeApprover": {
          "type": "boolean"
        },
        "requiredApproverCount": {
          "type": "integer",
          "format": "int32"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Artifact": {
      "description": "",
      "type": "object",
      "properties": {
        "alias": {
          "description": "Gets or sets alias.",
          "type": "string"
        },
        "definitionReference": {
          "description": "Gets or sets definition reference. e.g. {\"project\":{\"id\":\"fed755ea-49c5-4399-acea-fd5b5aa90a6c\",\"name\":\"myProject\"},\"definition\":{\"id\":\"1\",\"name\":\"mybuildDefinition\"},\"connection\":{\"id\":\"1\",\"name\":\"myConnection\"}}",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ArtifactSourceReference"
          }
        },
        "isPrimary": {
          "description": "Gets or sets as artifact is primary or not.",
          "type": "boolean"
        },
        "isRetained": {
          "type": "boolean"
        },
        "type": {
          "description": "Gets or sets type. It can have value as 'Build', 'Jenkins', 'GitHub', 'Nuget', 'Team Build (external)', 'ExternalTFSBuild', 'Git', 'TFVC', 'ExternalTfsXamlBuild'.",
          "type": "string"
        }
      }
    },
    "ArtifactContributionDefinition": {
      "description": "",
      "type": "object",
      "properties": {
        "artifactTriggerConfiguration": {
          "$ref": "#/definitions/ArtifactTriggerConfiguration"
        },
        "artifactType": {
          "type": "string"
        },
        "artifactTypeStreamMapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "browsableArtifactTypeMapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dataSourceBindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSourceBinding"
          }
        },
        "displayName": {
          "type": "string"
        },
        "downloadTaskId": {
          "type": "string"
        },
        "endpointTypeId": {
          "type": "string"
        },
        "inputDescriptors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputDescriptor"
          }
        },
        "name": {
          "type": "string"
        },
        "taskInputMapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uniqueSourceIdentifier": {
          "type": "string"
        }
      }
    },
    "ArtifactDownloadInputBase": {
      "description": "",
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "artifactDownloadMode": {
          "type": "string"
        },
        "artifactType": {
          "type": "string"
        }
      }
    },
    "ArtifactFilter": {
      "description": "",
      "type": "object",
      "properties": {
        "createReleaseOnBuildTagging": {
          "type": "boolean"
        },
        "sourceBranch": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "useBuildDefinitionBranch": {
          "type": "boolean"
        }
      }
    },
    "ArtifactInstanceData": {
      "description": "",
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "authenticationToken": {
          "type": "string"
        },
        "tfsUrl": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ArtifactMetadata": {
      "description": "",
      "type": "object",
      "properties": {
        "alias": {
          "description": "Sets alias of artifact.",
          "type": "string"
        },
        "instanceReference": {
          "description": "Sets instance reference of artifact. e.g. for build artifact it is build number.",
          "$ref": "#/definitions/BuildVersion"
        }
      }
    },
    "ArtifactProvider": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "sourceUri": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ArtifactsDownloadInput": {
      "description": "",
      "type": "object",
      "properties": {
        "downloadInputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactDownloadInputBase"
          }
        }
      }
    },
    "ArtifactSourceId": {
      "description": "",
      "type": "object",
      "properties": {
        "artifactTypeId": {
          "type": "string"
        },
        "sourceIdInputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceIdInput"
          }
        }
      }
    },
    "ArtifactSourceIdsQueryResult": {
      "description": "",
      "type": "object",
      "properties": {
        "artifactSourceIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactSourceId"
          }
        }
      }
    },
    "ArtifactSourceReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ArtifactSourceTrigger": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReleaseTriggerBase"
        }
      ],
      "properties": {
        "artifactAlias": {
          "description": "Artifact source alias for Artifact Source trigger type",
          "type": "string"
        },
        "triggerConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactFilter"
          }
        }
      }
    },
    "ArtifactTriggerConfiguration": {
      "description": "",
      "type": "object",
      "properties": {
        "isTriggerSupported": {
          "type": "boolean"
        },
        "isTriggerSupportedOnlyInHosted": {
          "type": "boolean"
        },
        "isWebhookSupportedAtServerLevel": {
          "type": "boolean"
        },
        "payloadHashHeaderName": {
          "type": "string"
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "webhookPayloadMapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ArtifactTypeDefinition": {
      "description": "",
      "type": "object",
      "properties": {
        "artifactTriggerConfiguration": {
          "$ref": "#/definitions/ArtifactTriggerConfiguration"
        },
        "artifactType": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "endpointTypeId": {
          "type": "string"
        },
        "inputDescriptors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputDescriptor"
          }
        },
        "name": {
          "type": "string"
        },
        "uniqueSourceIdentifier": {
          "type": "string"
        }
      }
    },
    "ArtifactVersion": {
      "description": "",
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "defaultVersion": {
          "$ref": "#/definitions/BuildVersion"
        },
        "errorMessage": {
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildVersion"
          }
        }
      }
    },
    "ArtifactVersionQueryResult": {
      "description": "",
      "type": "object",
      "properties": {
        "artifactVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactVersion"
          }
        }
      }
    },
    "AuthorizationHeader": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "AutoTriggerIssue": {
      "description": "",
      "type": "object",
      "properties": {
        "issue": {
          "$ref": "#/definitions/Issue"
        },
        "issueSource": {
          "enum": [
            "none",
            "user",
            "system"
          ],
          "x-ms-enum": {
            "name": "IssueSource",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "user",
                "description": ""
              },
              {
                "value": "system",
                "description": ""
              }
            ]
          }
        },
        "project": {
          "$ref": "#/definitions/ProjectReference"
        },
        "releaseDefinitionReference": {
          "$ref": "#/definitions/ReleaseDefinitionShallowReference"
        },
        "releaseTriggerType": {
          "enum": [
            "undefined",
            "artifactSource",
            "schedule",
            "sourceRepo",
            "containerImage",
            "package",
            "pullRequest"
          ],
          "x-ms-enum": {
            "name": "ReleaseTriggerType",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "artifactSource",
                "description": ""
              },
              {
                "value": "schedule",
                "description": ""
              },
              {
                "value": "sourceRepo",
                "description": ""
              },
              {
                "value": "containerImage",
                "description": ""
              },
              {
                "value": "package",
                "description": ""
              },
              {
                "value": "pullRequest",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "AzureKeyVaultVariableGroupProviderData": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VariableGroupProviderData"
        }
      ],
      "properties": {
        "lastRefreshedOn": {
          "type": "string",
          "format": "date-time"
        },
        "serviceEndpointId": {
          "type": "string",
          "format": "uuid"
        },
        "vault": {
          "type": "string"
        }
      }
    },
    "AzureKeyVaultVariableValue": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VariableValue"
        }
      ],
      "properties": {
        "contentType": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "expires": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BaseDeploymentInput": {
      "description": "",
      "type": "object",
      "properties": {
        "condition": {
          "type": "string"
        },
        "jobCancelTimeoutInMinutes": {
          "description": "Gets or sets the job cancel timeout in minutes for deployment which are cancelled by user for this release environment",
          "type": "integer",
          "format": "int32"
        },
        "overrideInputs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "timeoutInMinutes": {
          "description": "Gets or sets the job execution timeout in minutes for deployment which are queued against this release environment",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BuildArtifactDownloadInput": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactDownloadInputBase"
        }
      ],
      "properties": {
        "artifactItems": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BuildVersion": {
      "description": "",
      "type": "object",
      "properties": {
        "commitMessage": {
          "type": "string"
        },
        "definitionId": {
          "type": "string"
        },
        "definitionName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isMultiDefinitionType": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "sourceBranch": {
          "type": "string"
        },
        "sourcePullRequestVersion": {
          "$ref": "#/definitions/SourcePullRequestVersion"
        },
        "sourceRepositoryId": {
          "type": "string"
        },
        "sourceRepositoryType": {
          "type": "string"
        },
        "sourceVersion": {
          "type": "string"
        }
      }
    },
    "Change": {
      "description": "Represents a change associated with a build.",
      "type": "object",
      "properties": {
        "author": {
          "description": "The author of the change.",
          "$ref": "#/definitions/IdentityRef"
        },
        "changeType": {
          "description": "The type of source. \"TfsVersionControl\", \"TfsGit\", etc.",
          "type": "string"
        },
        "displayUri": {
          "description": "The location of a user-friendly representation of the resource.",
          "type": "string"
        },
        "id": {
          "description": "Something that identifies the change. For a commit, this would be the SHA1. For a TFVC changeset, this would be the changeset id.",
          "type": "string"
        },
        "location": {
          "description": "The location of the full representation of the resource.",
          "type": "string"
        },
        "message": {
          "description": "A description of the change. This might be a commit message or changeset description.",
          "type": "string"
        },
        "pushedBy": {
          "description": "The person or process that pushed the change.",
          "$ref": "#/definitions/IdentityRef"
        },
        "timestamp": {
          "description": "A timestamp for the change.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CodeRepositoryReference": {
      "description": "",
      "type": "object",
      "properties": {
        "repositoryReference": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ReleaseManagementInputValue"
          }
        },
        "systemType": {
          "description": "It can have value as ‘GitHub’, ‘Vsts’.",
          "enum": [
            "none",
            "tfsGit",
            "gitHub"
          ],
          "x-ms-enum": {
            "name": "PullRequestSystemType",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "tfsGit",
                "description": ""
              },
              {
                "value": "gitHub",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "Condition": {
      "description": "",
      "type": "object",
      "properties": {
        "conditionType": {
          "description": "Gets or sets the condition type.",
          "enum": [
            "undefined",
            "event",
            "environmentState",
            "artifact"
          ],
          "x-ms-enum": {
            "name": "ConditionType",
            "values": [
              {
                "value": "undefined",
                "description": "The condition type is undefined."
              },
              {
                "value": "event",
                "description": "The condition type is event."
              },
              {
                "value": "environmentState",
                "description": "The condition type is environment state."
              },
              {
                "value": "artifact",
                "description": "The condition type is artifact."
              }
            ]
          }
        },
        "name": {
          "description": "Gets or sets the name of the condition. e.g. 'ReleaseStarted'.",
          "type": "string"
        },
        "value": {
          "description": "Gets or set value of the condition.",
          "type": "string"
        }
      }
    },
    "ConfigurationVariableValue": {
      "description": "",
      "type": "object",
      "properties": {
        "allowOverride": {
          "description": "Gets or sets if a variable can be overridden at deployment time or not.",
          "type": "boolean"
        },
        "isSecret": {
          "description": "Gets or sets as variable is secret or not.",
          "type": "boolean"
        },
        "value": {
          "description": "Gets or sets value of the configuration variable.",
          "type": "string"
        }
      }
    },
    "Consumer": {
      "description": "",
      "type": "object",
      "properties": {
        "consumerId": {
          "type": "integer",
          "format": "int32"
        },
        "consumerName": {
          "type": "string"
        }
      }
    },
    "ContainerImageTrigger": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReleaseTriggerBase"
        }
      ],
      "properties": {
        "alias": {
          "type": "string"
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagFilter"
          }
        }
      }
    },
    "ContinuousDeploymentTriggerIssue": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AutoTriggerIssue"
        }
      ],
      "properties": {
        "artifactType": {
          "type": "string"
        },
        "artifactVersionId": {
          "type": "string"
        },
        "sourceId": {
          "type": "string"
        }
      }
    },
    "ControlOptions": {
      "description": "",
      "type": "object",
      "properties": {
        "alwaysRun": {
          "type": "boolean"
        },
        "continueOnError": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "CustomArtifactDownloadInput": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactDownloadInputBase"
        }
      ],
      "properties": {}
    },
    "DataSourceBinding": {
      "description": "",
      "type": "object",
      "properties": {
        "callbackContextTemplate": {
          "type": "string"
        },
        "callBackRequiredTemplate": {
          "type": "string"
        },
        "dataSourceName": {
          "type": "string"
        },
        "endpointId": {
          "type": "string"
        },
        "endpointUrl": {
          "type": "string"
        },
        "initialContextTemplate": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "requestContent": {
          "type": "string"
        },
        "requestVerb": {
          "type": "string"
        },
        "resultSelector": {
          "type": "string"
        },
        "resultTemplate": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "DataSourceBindingBase": {
      "description": "Represents binding of data source for the service endpoint request.",
      "type": "object",
      "properties": {
        "callbackContextTemplate": {
          "description": "Pagination format supported by this data source(ContinuationToken/SkipTop).",
          "type": "string"
        },
        "callbackRequiredTemplate": {
          "description": "Subsequent calls needed?",
          "type": "string"
        },
        "dataSourceName": {
          "description": "Gets or sets the name of the data source.",
          "type": "string"
        },
        "endpointId": {
          "description": "Gets or sets the endpoint Id.",
          "type": "string"
        },
        "endpointUrl": {
          "description": "Gets or sets the url of the service endpoint.",
          "type": "string"
        },
        "headers": {
          "description": "Gets or sets the authorization headers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationHeader"
          }
        },
        "initialContextTemplate": {
          "description": "Defines the initial value of the query params",
          "type": "string"
        },
        "parameters": {
          "description": "Gets or sets the parameters for the data source.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resultSelector": {
          "description": "Gets or sets the result selector.",
          "type": "string"
        },
        "resultTemplate": {
          "description": "Gets or sets the result template.",
          "type": "string"
        },
        "target": {
          "description": "Gets or sets the target of the data source.",
          "type": "string"
        }
      }
    },
    "DefinitionEnvironmentReference": {
      "description": "",
      "type": "object",
      "properties": {
        "definitionEnvironmentId": {
          "type": "integer",
          "format": "int32"
        },
        "definitionEnvironmentName": {
          "type": "string"
        },
        "releaseDefinitionId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseDefinitionName": {
          "type": "string"
        }
      }
    },
    "Demand": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Deployment": {
      "description": "",
      "type": "object",
      "properties": {
        "attempt": {
          "description": "Gets attempt number.",
          "type": "integer",
          "format": "int32"
        },
        "completedOn": {
          "description": "Gets the date on which deployment is complete.",
          "type": "string",
          "format": "date-time"
        },
        "conditions": {
          "description": "Gets the list of condition associated with deployment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        },
        "definitionEnvironmentId": {
          "description": "Gets release definition environment id.",
          "type": "integer",
          "format": "int32"
        },
        "deploymentStatus": {
          "description": "Gets status of the deployment.",
          "enum": [
            "undefined",
            "notDeployed",
            "inProgress",
            "succeeded",
            "partiallySucceeded",
            "failed",
            "all"
          ],
          "x-ms-enum": {
            "name": "DeploymentStatus",
            "values": [
              {
                "value": "undefined",
                "description": "The deployment status is undefined."
              },
              {
                "value": "notDeployed",
                "description": "The deployment status is not deployed."
              },
              {
                "value": "inProgress",
                "description": "The deployment status is inprogress."
              },
              {
                "value": "succeeded",
                "description": "The deployment status is succeeded."
              },
              {
                "value": "partiallySucceeded",
                "description": "The deployment status is partiallysucceeded."
              },
              {
                "value": "failed",
                "description": "The deployment status is failed."
              },
              {
                "value": "all",
                "description": "The deployment status is all."
              }
            ]
          }
        },
        "id": {
          "description": "Gets the unique identifier for deployment.",
          "type": "integer",
          "format": "int32"
        },
        "lastModifiedBy": {
          "description": "Gets the identity who last modified the deployment.",
          "$ref": "#/definitions/IdentityRef"
        },
        "lastModifiedOn": {
          "description": "Gets the date on which deployment is last modified.",
          "type": "string",
          "format": "date-time"
        },
        "operationStatus": {
          "description": "Gets operation status of deployment.",
          "enum": [
            "undefined",
            "queued",
            "scheduled",
            "pending",
            "approved",
            "rejected",
            "deferred",
            "queuedForAgent",
            "phaseInProgress",
            "phaseSucceeded",
            "phasePartiallySucceeded",
            "phaseFailed",
            "canceled",
            "phaseCanceled",
            "manualInterventionPending",
            "queuedForPipeline",
            "cancelling",
            "evaluatingGates",
            "gateFailed",
            "all"
          ],
          "x-ms-enum": {
            "name": "DeploymentOperationStatus",
            "values": [
              {
                "value": "undefined",
                "description": "The deployment operation status is undefined."
              },
              {
                "value": "queued",
                "description": "The deployment operation status is queued."
              },
              {
                "value": "scheduled",
                "description": "The deployment operation status is scheduled."
              },
              {
                "value": "pending",
                "description": "The deployment operation status is pending."
              },
              {
                "value": "approved",
                "description": "The deployment operation status is approved."
              },
              {
                "value": "rejected",
                "description": "The deployment operation status is rejected."
              },
              {
                "value": "deferred",
                "description": "The deployment operation status is deferred."
              },
              {
                "value": "queuedForAgent",
                "description": "The deployment operation status is queued for agent."
              },
              {
                "value": "phaseInProgress",
                "description": "The deployment operation status is phase inprogress."
              },
              {
                "value": "phaseSucceeded",
                "description": "The deployment operation status is phase succeeded."
              },
              {
                "value": "phasePartiallySucceeded",
                "description": "The deployment operation status is phase partially succeeded."
              },
              {
                "value": "phaseFailed",
                "description": "The deployment operation status is phase failed."
              },
              {
                "value": "canceled",
                "description": "The deployment operation status is canceled."
              },
              {
                "value": "phaseCanceled",
                "description": "The deployment operation status is phase canceled."
              },
              {
                "value": "manualInterventionPending",
                "description": "The deployment operation status is manualintervention pending."
              },
              {
                "value": "queuedForPipeline",
                "description": "The deployment operation status is queued for pipeline."
              },
              {
                "value": "cancelling",
                "description": "The deployment operation status is cancelling."
              },
              {
                "value": "evaluatingGates",
                "description": "The deployment operation status is EvaluatingGates."
              },
              {
                "value": "gateFailed",
                "description": "The deployment operation status is GateFailed."
              },
              {
                "value": "all",
                "description": "The deployment operation status is all."
              }
            ]
          }
        },
        "postDeployApprovals": {
          "description": "Gets list of PostDeployApprovals.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseApproval"
          }
        },
        "preDeployApprovals": {
          "description": "Gets list of PreDeployApprovals.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseApproval"
          }
        },
        "projectReference": {
          "description": "Gets or sets project reference.",
          "$ref": "#/definitions/ProjectReference"
        },
        "queuedOn": {
          "description": "Gets the date on which deployment is queued.",
          "type": "string",
          "format": "date-time"
        },
        "reason": {
          "description": "Gets reason of deployment.",
          "enum": [
            "none",
            "manual",
            "automated",
            "scheduled",
            "redeployTrigger"
          ],
          "x-ms-enum": {
            "name": "DeploymentReason",
            "values": [
              {
                "value": "none",
                "description": "The deployment reason is none."
              },
              {
                "value": "manual",
                "description": "The deployment reason is manual."
              },
              {
                "value": "automated",
                "description": "The deployment reason is automated."
              },
              {
                "value": "scheduled",
                "description": "The deployment reason is scheduled."
              },
              {
                "value": "redeployTrigger",
                "description": "The deployment reason is RedeployTrigger."
              }
            ]
          }
        },
        "release": {
          "description": "Gets the reference of release.",
          "$ref": "#/definitions/ReleaseReference"
        },
        "releaseDefinition": {
          "description": "Gets releaseDefinitionReference which specifies the reference of the release definition to which the deployment is associated.",
          "$ref": "#/definitions/ReleaseDefinitionShallowReference"
        },
        "releaseEnvironment": {
          "description": "Gets releaseEnvironmentReference which specifies the reference of the release environment to which the deployment is associated.",
          "$ref": "#/definitions/ReleaseEnvironmentShallowReference"
        },
        "requestedBy": {
          "description": "Gets the identity who requested.",
          "$ref": "#/definitions/IdentityRef"
        },
        "requestedFor": {
          "description": "Gets the identity for whom deployment is requested.",
          "$ref": "#/definitions/IdentityRef"
        },
        "scheduledDeploymentTime": {
          "description": "Gets the date on which deployment is scheduled.",
          "type": "string",
          "format": "date-time"
        },
        "startedOn": {
          "description": "Gets the date on which deployment is started.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DeploymentApprovalCompletedEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "approval": {
          "$ref": "#/definitions/ReleaseApproval"
        },
        "project": {
          "$ref": "#/definitions/ProjectReference"
        },
        "release": {
          "$ref": "#/definitions/Release"
        }
      }
    },
    "DeploymentApprovalPendingEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "approval": {
          "$ref": "#/definitions/ReleaseApproval"
        },
        "approvalOptions": {
          "$ref": "#/definitions/ApprovalOptions"
        },
        "completedApprovals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseApproval"
          }
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "deployment": {
          "$ref": "#/definitions/Deployment"
        },
        "isMultipleRankApproval": {
          "type": "boolean"
        },
        "pendingApprovals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseApproval"
          }
        },
        "project": {
          "$ref": "#/definitions/ProjectReference"
        },
        "release": {
          "$ref": "#/definitions/Release"
        }
      }
    },
    "DeploymentAttempt": {
      "description": "",
      "type": "object",
      "properties": {
        "attempt": {
          "type": "integer",
          "format": "int32"
        },
        "deploymentId": {
          "type": "integer",
          "format": "int32"
        },
        "hasStarted": {
          "description": "Specifies whether deployment has started or not",
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "issues": {
          "description": "All the issues related to the deployment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          }
        },
        "job": {
          "$ref": "#/definitions/ReleaseTask"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "lastModifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "operationStatus": {
          "enum": [
            "undefined",
            "queued",
            "scheduled",
            "pending",
            "approved",
            "rejected",
            "deferred",
            "queuedForAgent",
            "phaseInProgress",
            "phaseSucceeded",
            "phasePartiallySucceeded",
            "phaseFailed",
            "canceled",
            "phaseCanceled",
            "manualInterventionPending",
            "queuedForPipeline",
            "cancelling",
            "evaluatingGates",
            "gateFailed",
            "all"
          ],
          "x-ms-enum": {
            "name": "DeploymentOperationStatus",
            "values": [
              {
                "value": "undefined",
                "description": "The deployment operation status is undefined."
              },
              {
                "value": "queued",
                "description": "The deployment operation status is queued."
              },
              {
                "value": "scheduled",
                "description": "The deployment operation status is scheduled."
              },
              {
                "value": "pending",
                "description": "The deployment operation status is pending."
              },
              {
                "value": "approved",
                "description": "The deployment operation status is approved."
              },
              {
                "value": "rejected",
                "description": "The deployment operation status is rejected."
              },
              {
                "value": "deferred",
                "description": "The deployment operation status is deferred."
              },
              {
                "value": "queuedForAgent",
                "description": "The deployment operation status is queued for agent."
              },
              {
                "value": "phaseInProgress",
                "description": "The deployment operation status is phase inprogress."
              },
              {
                "value": "phaseSucceeded",
                "description": "The deployment operation status is phase succeeded."
              },
              {
                "value": "phasePartiallySucceeded",
                "description": "The deployment operation status is phase partially succeeded."
              },
              {
                "value": "phaseFailed",
                "description": "The deployment operation status is phase failed."
              },
              {
                "value": "canceled",
                "description": "The deployment operation status is canceled."
              },
              {
                "value": "phaseCanceled",
                "description": "The deployment operation status is phase canceled."
              },
              {
                "value": "manualInterventionPending",
                "description": "The deployment operation status is manualintervention pending."
              },
              {
                "value": "queuedForPipeline",
                "description": "The deployment operation status is queued for pipeline."
              },
              {
                "value": "cancelling",
                "description": "The deployment operation status is cancelling."
              },
              {
                "value": "evaluatingGates",
                "description": "The deployment operation status is EvaluatingGates."
              },
              {
                "value": "gateFailed",
                "description": "The deployment operation status is GateFailed."
              },
              {
                "value": "all",
                "description": "The deployment operation status is all."
              }
            ]
          }
        },
        "postDeploymentGates": {
          "$ref": "#/definitions/ReleaseGates"
        },
        "preDeploymentGates": {
          "$ref": "#/definitions/ReleaseGates"
        },
        "queuedOn": {
          "type": "string",
          "format": "date-time"
        },
        "reason": {
          "enum": [
            "none",
            "manual",
            "automated",
            "scheduled",
            "redeployTrigger"
          ],
          "x-ms-enum": {
            "name": "DeploymentReason",
            "values": [
              {
                "value": "none",
                "description": "The deployment reason is none."
              },
              {
                "value": "manual",
                "description": "The deployment reason is manual."
              },
              {
                "value": "automated",
                "description": "The deployment reason is automated."
              },
              {
                "value": "scheduled",
                "description": "The deployment reason is scheduled."
              },
              {
                "value": "redeployTrigger",
                "description": "The deployment reason is RedeployTrigger."
              }
            ]
          }
        },
        "releaseDeployPhases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseDeployPhase"
          }
        },
        "requestedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "requestedFor": {
          "$ref": "#/definitions/IdentityRef"
        },
        "runPlanId": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "enum": [
            "undefined",
            "notDeployed",
            "inProgress",
            "succeeded",
            "partiallySucceeded",
            "failed",
            "all"
          ],
          "x-ms-enum": {
            "name": "DeploymentStatus",
            "values": [
              {
                "value": "undefined",
                "description": "The deployment status is undefined."
              },
              {
                "value": "notDeployed",
                "description": "The deployment status is not deployed."
              },
              {
                "value": "inProgress",
                "description": "The deployment status is inprogress."
              },
              {
                "value": "succeeded",
                "description": "The deployment status is succeeded."
              },
              {
                "value": "partiallySucceeded",
                "description": "The deployment status is partiallysucceeded."
              },
              {
                "value": "failed",
                "description": "The deployment status is failed."
              },
              {
                "value": "all",
                "description": "The deployment status is all."
              }
            ]
          }
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseTask"
          }
        }
      }
    },
    "DeploymentAuthorizationInfo": {
      "description": "",
      "type": "object",
      "properties": {
        "authorizationHeaderFor": {
          "enum": [
            "revalidateApproverIdentity",
            "onBehalfOf"
          ],
          "x-ms-enum": {
            "name": "AuthorizationHeaderFor",
            "values": [
              {
                "value": "revalidateApproverIdentity",
                "description": ""
              },
              {
                "value": "onBehalfOf",
                "description": ""
              }
            ]
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tenantId": {
          "type": "string"
        },
        "vstsAccessTokenKey": {
          "type": "string"
        }
      }
    },
    "DeploymentCompletedEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "deployment": {
          "$ref": "#/definitions/Deployment"
        },
        "environment": {
          "$ref": "#/definitions/ReleaseEnvironment"
        },
        "project": {
          "$ref": "#/definitions/ProjectReference"
        }
      }
    },
    "DeploymentInput": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseDeploymentInput"
        }
      ],
      "properties": {
        "artifactsDownloadInput": {
          "$ref": "#/definitions/ArtifactsDownloadInput"
        },
        "demands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Demand"
          }
        },
        "enableAccessToken": {
          "type": "boolean"
        },
        "queueId": {
          "type": "integer",
          "format": "int32"
        },
        "skipArtifactsDownload": {
          "type": "boolean"
        }
      }
    },
    "DeploymentJob": {
      "description": "",
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/ReleaseTask"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseTask"
          }
        }
      }
    },
    "DeploymentManualInterventionPendingEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/Deployment"
        },
        "emailRecipients": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "environmentOwner": {
          "$ref": "#/definitions/IdentityRef"
        },
        "manualIntervention": {
          "$ref": "#/definitions/ManualIntervention"
        },
        "project": {
          "$ref": "#/definitions/ProjectReference"
        },
        "release": {
          "$ref": "#/definitions/Release"
        }
      }
    },
    "DeploymentQueryParameters": {
      "description": "",
      "type": "object",
      "properties": {
        "artifactSourceId": {
          "type": "string"
        },
        "artifactTypeId": {
          "type": "string"
        },
        "artifactVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deploymentsPerEnvironment": {
          "type": "integer",
          "format": "int32"
        },
        "deploymentStatus": {
          "enum": [
            "undefined",
            "notDeployed",
            "inProgress",
            "succeeded",
            "partiallySucceeded",
            "failed",
            "all"
          ],
          "x-ms-enum": {
            "name": "DeploymentStatus",
            "values": [
              {
                "value": "undefined",
                "description": "The deployment status is undefined."
              },
              {
                "value": "notDeployed",
                "description": "The deployment status is not deployed."
              },
              {
                "value": "inProgress",
                "description": "The deployment status is inprogress."
              },
              {
                "value": "succeeded",
                "description": "The deployment status is succeeded."
              },
              {
                "value": "partiallySucceeded",
                "description": "The deployment status is partiallysucceeded."
              },
              {
                "value": "failed",
                "description": "The deployment status is failed."
              },
              {
                "value": "all",
                "description": "The deployment status is all."
              }
            ]
          }
        },
        "environments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DefinitionEnvironmentReference"
          }
        },
        "expands": {
          "enum": [
            "all",
            "deploymentOnly",
            "approvals",
            "artifacts"
          ],
          "x-ms-enum": {
            "name": "DeploymentExpands",
            "values": [
              {
                "value": "all",
                "description": ""
              },
              {
                "value": "deploymentOnly",
                "description": ""
              },
              {
                "value": "approvals",
                "description": ""
              },
              {
                "value": "artifacts",
                "description": ""
              }
            ]
          }
        },
        "isDeleted": {
          "type": "boolean"
        },
        "operationStatus": {
          "enum": [
            "undefined",
            "queued",
            "scheduled",
            "pending",
            "approved",
            "rejected",
            "deferred",
            "queuedForAgent",
            "phaseInProgress",
            "phaseSucceeded",
            "phasePartiallySucceeded",
            "phaseFailed",
            "canceled",
            "phaseCanceled",
            "manualInterventionPending",
            "queuedForPipeline",
            "cancelling",
            "evaluatingGates",
            "gateFailed",
            "all"
          ],
          "x-ms-enum": {
            "name": "DeploymentOperationStatus",
            "values": [
              {
                "value": "undefined",
                "description": "The deployment operation status is undefined."
              },
              {
                "value": "queued",
                "description": "The deployment operation status is queued."
              },
              {
                "value": "scheduled",
                "description": "The deployment operation status is scheduled."
              },
              {
                "value": "pending",
                "description": "The deployment operation status is pending."
              },
              {
                "value": "approved",
                "description": "The deployment operation status is approved."
              },
              {
                "value": "rejected",
                "description": "The deployment operation status is rejected."
              },
              {
                "value": "deferred",
                "description": "The deployment operation status is deferred."
              },
              {
                "value": "queuedForAgent",
                "description": "The deployment operation status is queued for agent."
              },
              {
                "value": "phaseInProgress",
                "description": "The deployment operation status is phase inprogress."
              },
              {
                "value": "phaseSucceeded",
                "description": "The deployment operation status is phase succeeded."
              },
              {
                "value": "phasePartiallySucceeded",
                "description": "The deployment operation status is phase partially succeeded."
              },
              {
                "value": "phaseFailed",
                "description": "The deployment operation status is phase failed."
              },
              {
                "value": "canceled",
                "description": "The deployment operation status is canceled."
              },
              {
                "value": "phaseCanceled",
                "description": "The deployment operation status is phase canceled."
              },
              {
                "value": "manualInterventionPending",
                "description": "The deployment operation status is manualintervention pending."
              },
              {
                "value": "queuedForPipeline",
                "description": "The deployment operation status is queued for pipeline."
              },
              {
                "value": "cancelling",
                "description": "The deployment operation status is cancelling."
              },
              {
                "value": "evaluatingGates",
                "description": "The deployment operation status is EvaluatingGates."
              },
              {
                "value": "gateFailed",
                "description": "The deployment operation status is GateFailed."
              },
              {
                "value": "all",
                "description": "The deployment operation status is all."
              }
            ]
          }
        },
        "queryType": {
          "enum": [
            "regular",
            "failingSince"
          ],
          "x-ms-enum": {
            "name": "DeploymentsQueryType",
            "values": [
              {
                "value": "regular",
                "description": ""
              },
              {
                "value": "failingSince",
                "description": ""
              }
            ]
          }
        },
        "sourceBranch": {
          "type": "string"
        }
      }
    },
    "DeploymentStartedEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "environment": {
          "$ref": "#/definitions/ReleaseEnvironment"
        },
        "project": {
          "$ref": "#/definitions/ProjectReference"
        },
        "release": {
          "$ref": "#/definitions/Release"
        }
      }
    },
    "DeployPhase": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phaseType": {
          "enum": [
            "undefined",
            "agentBasedDeployment",
            "runOnServer",
            "machineGroupBasedDeployment",
            "deploymentGates"
          ],
          "x-ms-enum": {
            "name": "DeployPhaseTypes",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "agentBasedDeployment",
                "description": ""
              },
              {
                "value": "runOnServer",
                "description": ""
              },
              {
                "value": "machineGroupBasedDeployment",
                "description": ""
              },
              {
                "value": "deploymentGates",
                "description": "Phase type which contains tasks which acts as Gates for the deployment to go forward."
              }
            ]
          }
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "refName": {
          "type": "string"
        },
        "workflowTasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowTask"
          }
        }
      }
    },
    "EmailRecipients": {
      "description": "",
      "type": "object",
      "properties": {
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tfsIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "EnvironmentExecutionPolicy": {
      "description": "Defines policy on environment queuing at Release Management side queue. We will send to Environment Runner [creating pre-deploy and other steps] only when the policies mentioned are satisfied.",
      "type": "object",
      "properties": {
        "concurrencyCount": {
          "description": "This policy decides, how many environments would be with Environment Runner.",
          "type": "integer",
          "format": "int32"
        },
        "queueDepthCount": {
          "description": "Queue depth in the EnvironmentQueue table, this table keeps the environment entries till Environment Runner is free [as per it's policy] to take another environment for running.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EnvironmentOptions": {
      "description": "",
      "type": "object",
      "properties": {
        "autoLinkWorkItems": {
          "type": "boolean"
        },
        "badgeEnabled": {
          "type": "boolean"
        },
        "emailNotificationType": {
          "type": "string"
        },
        "emailRecipients": {
          "type": "string"
        },
        "enableAccessToken": {
          "type": "boolean"
        },
        "publishDeploymentStatus": {
          "type": "boolean"
        },
        "pullRequestDeploymentEnabled": {
          "type": "boolean"
        },
        "skipArtifactsDownload": {
          "type": "boolean"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EnvironmentRetentionPolicy": {
      "description": "",
      "type": "object",
      "properties": {
        "daysToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "releasesToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "retainBuild": {
          "type": "boolean"
        }
      }
    },
    "EnvironmentTrigger": {
      "description": "",
      "type": "object",
      "properties": {
        "definitionEnvironmentId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseDefinitionId": {
          "type": "integer",
          "format": "int32"
        },
        "triggerContent": {
          "type": "string"
        },
        "triggerType": {
          "enum": [
            "undefined",
            "deploymentGroupRedeploy",
            "rollbackRedeploy"
          ],
          "x-ms-enum": {
            "name": "EnvironmentTriggerType",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "deploymentGroupRedeploy",
                "description": ""
              },
              {
                "value": "rollbackRedeploy",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "EnvironmentTriggerContent": {
      "description": "",
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "eventTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExecutionInput": {
      "description": "",
      "type": "object",
      "properties": {
        "parallelExecutionType": {
          "enum": [
            "none",
            "multiConfiguration",
            "multiMachine"
          ],
          "x-ms-enum": {
            "name": "ParallelExecutionTypes",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "multiConfiguration",
                "description": ""
              },
              {
                "value": "multiMachine",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "FavoriteItem": {
      "description": "Class to represent favorite entry",
      "type": "object",
      "properties": {
        "data": {
          "description": "Application specific data for the entry",
          "type": "string"
        },
        "id": {
          "description": "Unique Id of the the entry",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Display text for favorite entry",
          "type": "string"
        },
        "type": {
          "description": "Application specific favorite entry type. Empty or Null represents that Favorite item is a Folder",
          "type": "string"
        }
      }
    },
    "Folder": {
      "description": "",
      "type": "object",
      "properties": {
        "createdBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "lastChangedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "lastChangedDate": {
          "type": "string",
          "format": "date-time"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "GatesDeploymentInput": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseDeploymentInput"
        }
      ],
      "properties": {
        "minimumSuccessDuration": {
          "type": "integer",
          "format": "int32"
        },
        "samplingInterval": {
          "type": "integer",
          "format": "int32"
        },
        "stabilizationTime": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GatesDeployPhase": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeployPhase"
        }
      ],
      "properties": {
        "deploymentInput": {
          "$ref": "#/definitions/GatesDeploymentInput"
        }
      }
    },
    "GateUpdateMetadata": {
      "description": "",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment",
          "type": "string"
        },
        "gatesToIgnore": {
          "description": "Name of gate to be ignored.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GitArtifactDownloadInput": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactDownloadInputBase"
        }
      ],
      "properties": {}
    },
    "GitHubArtifactDownloadInput": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactDownloadInputBase"
        }
      ],
      "properties": {}
    },
    "GraphSubjectBase": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "description": "This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional relationships or more detailed information about this graph subject.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "descriptor": {
          "description": "The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations.",
          "type": "string"
        },
        "displayName": {
          "description": "This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.",
          "type": "string"
        },
        "url": {
          "description": "This url is the full route to the source resource of this graph subject.",
          "type": "string"
        }
      }
    },
    "IdentityRef": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GraphSubjectBase"
        }
      ],
      "properties": {
        "directoryAlias": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "isDeletedInOrigin": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        }
      }
    },
    "IgnoredGate": {
      "description": "",
      "type": "object",
      "properties": {
        "lastModifiedOn": {
          "description": "Gets the date on which gate is last ignored.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Name of gate ignored.",
          "type": "string"
        }
      }
    },
    "InputDescriptor": {
      "description": "Describes an input for subscriptions.",
      "type": "object",
      "properties": {
        "dependencyInputIds": {
          "description": "The ids of all inputs that the value of this input is dependent on.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of what this input is used for",
          "type": "string"
        },
        "groupName": {
          "description": "The group localized name to which this input belongs and can be shown as a header for the container that will include all the inputs in the group.",
          "type": "string"
        },
        "hasDynamicValueInformation": {
          "description": "If true, the value information for this input is dynamic and should be fetched when the value of dependency inputs change.",
          "type": "boolean"
        },
        "id": {
          "description": "Identifier for the subscription input",
          "type": "string"
        },
        "inputMode": {
          "description": "Mode in which the value of this input should be entered",
          "enum": [
            "none",
            "textBox",
            "passwordBox",
            "combo",
            "radioButtons",
            "checkBox",
            "textArea"
          ],
          "x-ms-enum": {
            "name": "InputMode",
            "values": [
              {
                "value": "none",
                "description": "This input should not be shown in the UI"
              },
              {
                "value": "textBox",
                "description": "An input text box should be shown"
              },
              {
                "value": "passwordBox",
                "description": "An password input box should be shown"
              },
              {
                "value": "combo",
                "description": "A select/combo control should be shown"
              },
              {
                "value": "radioButtons",
                "description": "Radio buttons should be shown"
              },
              {
                "value": "checkBox",
                "description": "Checkbox should be shown(for true/false values)"
              },
              {
                "value": "textArea",
                "description": "A multi-line text area should be shown"
              }
            ]
          }
        },
        "isConfidential": {
          "description": "Gets whether this input is confidential, such as for a password or application key",
          "type": "boolean"
        },
        "name": {
          "description": "Localized name which can be shown as a label for the subscription input",
          "type": "string"
        },
        "properties": {
          "description": "Custom properties for the input which can be used by the service provider",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "type": {
          "description": "Underlying data type for the input value. When this value is specified, InputMode, Validation and Values are optional.",
          "type": "string"
        },
        "useInDefaultDescription": {
          "description": "Gets whether this input is included in the default generated action description.",
          "type": "boolean"
        },
        "validation": {
          "description": "Information to use to validate this input's value",
          "$ref": "#/definitions/InputValidation"
        },
        "valueHint": {
          "description": "A hint for input value. It can be used in the UI as the input placeholder.",
          "type": "string"
        },
        "values": {
          "description": "Information about possible values for this input",
          "$ref": "#/definitions/InputValues"
        }
      }
    },
    "InputValidation": {
      "description": "Describes what values are valid for a subscription input",
      "type": "object",
      "properties": {
        "dataType": {
          "enum": [
            "none",
            "string",
            "number",
            "boolean",
            "guid",
            "uri"
          ],
          "x-ms-enum": {
            "name": "InputDataType",
            "values": [
              {
                "value": "none",
                "description": "No data type is specified."
              },
              {
                "value": "string",
                "description": "Represents a textual value."
              },
              {
                "value": "number",
                "description": "Represents a numberic value."
              },
              {
                "value": "boolean",
                "description": "Represents a value of true or false."
              },
              {
                "value": "guid",
                "description": "Represents a Guid."
              },
              {
                "value": "uri",
                "description": "Represents a URI."
              }
            ]
          }
        },
        "isRequired": {
          "type": "boolean"
        },
        "maxLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxValue": {
          "type": "string",
          "format": "decimal"
        },
        "minLength": {
          "type": "integer",
          "format": "int32"
        },
        "minValue": {
          "type": "string",
          "format": "decimal"
        },
        "pattern": {
          "type": "string"
        },
        "patternMismatchErrorMessage": {
          "type": "string"
        }
      }
    },
    "InputValue": {
      "description": "Information about a single value for an input",
      "type": "object",
      "properties": {
        "data": {
          "description": "Any other data about this input",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "displayValue": {
          "description": "The text to show for the display of this value",
          "type": "string"
        },
        "value": {
          "description": "The value to store for this input",
          "type": "string"
        }
      }
    },
    "InputValues": {
      "description": "Information about the possible/allowed values for a given subscription input",
      "type": "object",
      "properties": {
        "defaultValue": {
          "description": "The default value to use for this input",
          "type": "string"
        },
        "error": {
          "description": "Errors encountered while computing dynamic values.",
          "$ref": "#/definitions/InputValuesError"
        },
        "inputId": {
          "description": "The id of the input",
          "type": "string"
        },
        "isDisabled": {
          "description": "Should this input be disabled",
          "type": "boolean"
        },
        "isLimitedToPossibleValues": {
          "description": "Should the value be restricted to one of the values in the PossibleValues (True) or are the values in PossibleValues just a suggestion (False)",
          "type": "boolean"
        },
        "isReadOnly": {
          "description": "Should this input be made read-only",
          "type": "boolean"
        },
        "possibleValues": {
          "description": "Possible values that this input can take",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputValue"
          }
        }
      }
    },
    "InputValuesError": {
      "description": "Error information related to a subscription input value.",
      "type": "object",
      "properties": {
        "message": {
          "description": "The error message.",
          "type": "string"
        }
      }
    },
    "InputValuesQuery": {
      "description": "",
      "type": "object",
      "properties": {
        "currentValues": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "inputValues": {
          "description": "The input values to return on input, and the result from the consumer on output.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputValues"
          }
        },
        "resource": {
          "description": "Subscription containing information about the publisher/consumer and the current input values",
          "type": "object"
        }
      }
    },
    "Issue": {
      "description": "",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "issueType": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "JenkinsArtifactDownloadInput": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactDownloadInputBase"
        }
      ],
      "properties": {
        "artifactItems": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MachineGroupBasedDeployPhase": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeployPhase"
        }
      ],
      "properties": {
        "deploymentInput": {
          "$ref": "#/definitions/MachineGroupDeploymentInput"
        }
      }
    },
    "MachineGroupDeploymentInput": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeploymentInput"
        }
      ],
      "properties": {
        "deploymentHealthOption": {
          "type": "string"
        },
        "healthPercent": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MailMessage": {
      "description": "",
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        },
        "cC": {
          "$ref": "#/definitions/EmailRecipients"
        },
        "inReplyTo": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        },
        "replyBy": {
          "type": "string",
          "format": "date-time"
        },
        "replyTo": {
          "$ref": "#/definitions/EmailRecipients"
        },
        "sections": {
          "type": "array",
          "items": {
            "enum": [
              "details",
              "environments",
              "issues",
              "testResults",
              "workItems",
              "releaseInfo"
            ],
            "x-ms-enum": {
              "name": "MailSectionType",
              "values": [
                {
                  "value": "details",
                  "description": ""
                },
                {
                  "value": "environments",
                  "description": ""
                },
                {
                  "value": "issues",
                  "description": ""
                },
                {
                  "value": "testResults",
                  "description": ""
                },
                {
                  "value": "workItems",
                  "description": ""
                },
                {
                  "value": "releaseInfo",
                  "description": ""
                }
              ]
            }
          }
        },
        "senderType": {
          "enum": [
            "serviceAccount",
            "requestingUser"
          ],
          "x-ms-enum": {
            "name": "SenderType",
            "values": [
              {
                "value": "serviceAccount",
                "description": ""
              },
              {
                "value": "requestingUser",
                "description": ""
              }
            ]
          }
        },
        "subject": {
          "type": "string"
        },
        "to": {
          "$ref": "#/definitions/EmailRecipients"
        }
      }
    },
    "ManualIntervention": {
      "description": "",
      "type": "object",
      "properties": {
        "approver": {
          "description": "Gets or sets the identity who should approve.",
          "$ref": "#/definitions/IdentityRef"
        },
        "comments": {
          "description": "Gets or sets comments for approval.",
          "type": "string"
        },
        "createdOn": {
          "description": "Gets date on which it got created.",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "Gets the unique identifier for manual intervention.",
          "type": "integer",
          "format": "int32"
        },
        "instructions": {
          "description": "Gets or sets instructions for approval.",
          "type": "string"
        },
        "modifiedOn": {
          "description": "Gets date on which it got modified.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "release": {
          "description": "Gets releaseReference for manual intervention.",
          "$ref": "#/definitions/ReleaseShallowReference"
        },
        "releaseDefinition": {
          "description": "Gets releaseDefinitionReference for manual intervention.",
          "$ref": "#/definitions/ReleaseDefinitionShallowReference"
        },
        "releaseEnvironment": {
          "description": "Gets releaseEnvironmentReference for manual intervention.",
          "$ref": "#/definitions/ReleaseEnvironmentShallowReference"
        },
        "status": {
          "description": "Gets or sets the status of the manual intervention.",
          "enum": [
            "unknown",
            "pending",
            "rejected",
            "approved",
            "canceled"
          ],
          "x-ms-enum": {
            "name": "ManualInterventionStatus",
            "values": [
              {
                "value": "unknown",
                "description": "The manual intervention does not have the status set."
              },
              {
                "value": "pending",
                "description": "The manual intervention is pending."
              },
              {
                "value": "rejected",
                "description": "The manual intervention is rejected."
              },
              {
                "value": "approved",
                "description": "The manual intervention is approved."
              },
              {
                "value": "canceled",
                "description": "The manual intervention is canceled."
              }
            ]
          }
        },
        "taskInstanceId": {
          "description": "Get task instance identifier.",
          "type": "string",
          "format": "uuid"
        },
        "url": {
          "description": "Gets url to access the manual intervention.",
          "type": "string"
        }
      }
    },
    "ManualInterventionUpdateMetadata": {
      "description": "",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Sets the comment for manual intervention update.",
          "type": "string"
        },
        "status": {
          "description": "Sets the status of the manual intervention.",
          "enum": [
            "unknown",
            "pending",
            "rejected",
            "approved",
            "canceled"
          ],
          "x-ms-enum": {
            "name": "ManualInterventionStatus",
            "values": [
              {
                "value": "unknown",
                "description": "The manual intervention does not have the status set."
              },
              {
                "value": "pending",
                "description": "The manual intervention is pending."
              },
              {
                "value": "rejected",
                "description": "The manual intervention is rejected."
              },
              {
                "value": "approved",
                "description": "The manual intervention is approved."
              },
              {
                "value": "canceled",
                "description": "The manual intervention is canceled."
              }
            ]
          }
        }
      }
    },
    "MappingDetails": {
      "description": "",
      "type": "object",
      "properties": {
        "mappings": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/InputValue"
          }
        }
      }
    },
    "Metric": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MultiConfigInput": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ParallelExecutionInputBase"
        }
      ],
      "properties": {
        "multipliers": {
          "type": "string"
        }
      }
    },
    "MultiMachineInput": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ParallelExecutionInputBase"
        }
      ],
      "properties": {}
    },
    "PackageTrigger": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReleaseTriggerBase"
        }
      ],
      "properties": {
        "alias": {
          "type": "string"
        }
      }
    },
    "ParallelExecutionInputBase": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionInput"
        }
      ],
      "properties": {
        "continueOnError": {
          "type": "boolean"
        },
        "maxNumberOfAgents": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PipelineProcess": {
      "description": "",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "designer",
            "yaml"
          ],
          "x-ms-enum": {
            "name": "PipelineProcessTypes",
            "values": [
              {
                "value": "designer",
                "description": ""
              },
              {
                "value": "yaml",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "ProcessParameters": {
      "description": "",
      "type": "object",
      "properties": {
        "dataSourceBindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSourceBindingBase"
          }
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskInputDefinitionBase"
          }
        },
        "sourceDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskSourceDefinitionBase"
          }
        }
      }
    },
    "ProjectReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets the unique identifier of this field.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Gets name of project.",
          "type": "string"
        }
      }
    },
    "PropertiesCollection": {
      "description": "The class represents a property bag as a collection of key-value pairs. Values of all primitive types (any type with a `TypeCode != TypeCode.Object`) except for `DBNull` are accepted. Values of type Byte[], Int32, Double, DateType and String preserve their type, other primitives are retuned as a String. Byte[] expected as base64 encoded string.",
      "type": "object",
      "properties": {
        "count": {
          "description": "The count of properties in the collection.",
          "type": "integer",
          "format": "int32"
        },
        "item": {
          "type": "object"
        },
        "keys": {
          "description": "The set of keys in the collection.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "values": {
          "description": "The set of values in the collection.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PropertySelector": {
      "description": "",
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "selectorType": {
          "enum": [
            "inclusion",
            "exclusion"
          ],
          "x-ms-enum": {
            "name": "PropertySelectorType",
            "values": [
              {
                "value": "inclusion",
                "description": ""
              },
              {
                "value": "exclusion",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "PullRequestConfiguration": {
      "description": "",
      "type": "object",
      "properties": {
        "codeRepositoryReference": {
          "$ref": "#/definitions/CodeRepositoryReference"
        },
        "useArtifactReference": {
          "description": "In case of Source based artifacts, Code reference will be present in Artifact details.",
          "type": "boolean"
        }
      }
    },
    "PullRequestFilter": {
      "description": "",
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetBranch": {
          "type": "string"
        }
      }
    },
    "PullRequestTrigger": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReleaseTriggerBase"
        }
      ],
      "properties": {
        "artifactAlias": {
          "type": "string"
        },
        "pullRequestConfiguration": {
          "$ref": "#/definitions/PullRequestConfiguration"
        },
        "statusPolicyName": {
          "type": "string"
        },
        "triggerConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PullRequestFilter"
          }
        }
      }
    },
    "QueuedReleaseData": {
      "description": "",
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "queuePosition": {
          "type": "integer",
          "format": "int32"
        },
        "releaseId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RealtimeReleaseDefinitionEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "definitionId": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "RealtimeReleaseEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "releaseId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "Release": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "description": "Gets links to access the release.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "artifacts": {
          "description": "Gets or sets the list of artifacts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "comment": {
          "description": "Gets or sets comment.",
          "type": "string"
        },
        "createdBy": {
          "description": "Gets or sets the identity who created.",
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "description": "Gets date on which it got created.",
          "type": "string",
          "format": "date-time"
        },
        "definitionSnapshotRevision": {
          "description": "Gets revision number of definition snapshot.",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Gets or sets description of release.",
          "type": "string"
        },
        "environments": {
          "description": "Gets list of environments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseEnvironment"
          }
        },
        "id": {
          "description": "Gets the unique identifier of this field.",
          "type": "integer",
          "format": "int32"
        },
        "keepForever": {
          "description": "Whether to exclude the release from retention policies.",
          "type": "boolean"
        },
        "logsContainerUrl": {
          "description": "Gets logs container url.",
          "type": "string"
        },
        "modifiedBy": {
          "description": "Gets or sets the identity who modified.",
          "$ref": "#/definitions/IdentityRef"
        },
        "modifiedOn": {
          "description": "Gets date on which it got modified.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Gets name.",
          "type": "string"
        },
        "poolName": {
          "description": "Gets pool name.",
          "type": "string"
        },
        "projectReference": {
          "description": "Gets or sets project reference.",
          "$ref": "#/definitions/ProjectReference"
        },
        "properties": {
          "$ref": "#/definitions/PropertiesCollection"
        },
        "reason": {
          "description": "Gets reason of release.",
          "enum": [
            "none",
            "manual",
            "continuousIntegration",
            "schedule",
            "pullRequest"
          ],
          "x-ms-enum": {
            "name": "ReleaseReason",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "manual",
                "description": ""
              },
              {
                "value": "continuousIntegration",
                "description": ""
              },
              {
                "value": "schedule",
                "description": ""
              },
              {
                "value": "pullRequest",
                "description": ""
              }
            ]
          }
        },
        "releaseDefinition": {
          "description": "Gets releaseDefinitionReference which specifies the reference of the release definition to which this release is associated.",
          "$ref": "#/definitions/ReleaseDefinitionShallowReference"
        },
        "releaseNameFormat": {
          "description": "Gets release name format.",
          "type": "string"
        },
        "status": {
          "description": "Gets status.",
          "enum": [
            "undefined",
            "draft",
            "active",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "ReleaseStatus",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "draft",
                "description": ""
              },
              {
                "value": "active",
                "description": ""
              },
              {
                "value": "abandoned",
                "description": ""
              }
            ]
          }
        },
        "tags": {
          "description": "Gets or sets list of tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "triggeringArtifactAlias": {
          "type": "string"
        },
        "variableGroups": {
          "description": "Gets the list of variable groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariableGroup"
          }
        },
        "variables": {
          "description": "Gets or sets the dictionary of variables.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConfigurationVariableValue"
          }
        }
      }
    },
    "ReleaseAbandonedEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/ProjectReference"
        },
        "release": {
          "$ref": "#/definitions/Release"
        }
      }
    },
    "ReleaseApproval": {
      "description": "",
      "type": "object",
      "properties": {
        "approvalType": {
          "description": "Gets or sets the type of approval.",
          "enum": [
            "undefined",
            "preDeploy",
            "postDeploy",
            "all"
          ],
          "x-ms-enum": {
            "name": "ApprovalType",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "preDeploy",
                "description": ""
              },
              {
                "value": "postDeploy",
                "description": ""
              },
              {
                "value": "all",
                "description": ""
              }
            ]
          }
        },
        "approvedBy": {
          "description": "Gets the identity who approved.",
          "$ref": "#/definitions/IdentityRef"
        },
        "approver": {
          "description": "Gets or sets the identity who should approve.",
          "$ref": "#/definitions/IdentityRef"
        },
        "attempt": {
          "description": "Gets or sets attempt which specifies as which deployment attempt it belongs.",
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "description": "Gets or sets comments for approval.",
          "type": "string"
        },
        "createdOn": {
          "description": "Gets date on which it got created.",
          "type": "string",
          "format": "date-time"
        },
        "history": {
          "description": "Gets history which specifies all approvals associated with this approval.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseApprovalHistory"
          }
        },
        "id": {
          "description": "Gets the unique identifier of this field.",
          "type": "integer",
          "format": "int32"
        },
        "isAutomated": {
          "description": "Gets or sets as approval is automated or not.",
          "type": "boolean"
        },
        "isNotificationOn": {
          "type": "boolean"
        },
        "modifiedOn": {
          "description": "Gets date on which it got modified.",
          "type": "string",
          "format": "date-time"
        },
        "rank": {
          "description": "Gets or sets rank which specifies the order of the approval. e.g. Same rank denotes parallel approval.",
          "type": "integer",
          "format": "int32"
        },
        "release": {
          "description": "Gets releaseReference which specifies the reference of the release to which this approval is associated.",
          "$ref": "#/definitions/ReleaseShallowReference"
        },
        "releaseDefinition": {
          "description": "Gets releaseDefinitionReference which specifies the reference of the release definition to which this approval is associated.",
          "$ref": "#/definitions/ReleaseDefinitionShallowReference"
        },
        "releaseEnvironment": {
          "description": "Gets releaseEnvironmentReference which specifies the reference of the release environment to which this approval is associated.",
          "$ref": "#/definitions/ReleaseEnvironmentShallowReference"
        },
        "revision": {
          "description": "Gets the revision number.",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "Gets or sets the status of the approval.",
          "enum": [
            "undefined",
            "pending",
            "approved",
            "rejected",
            "reassigned",
            "canceled",
            "skipped"
          ],
          "x-ms-enum": {
            "name": "ApprovalStatus",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "pending",
                "description": ""
              },
              {
                "value": "approved",
                "description": ""
              },
              {
                "value": "rejected",
                "description": ""
              },
              {
                "value": "reassigned",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              },
              {
                "value": "skipped",
                "description": ""
              }
            ]
          }
        },
        "trialNumber": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "description": "Gets url to access the approval.",
          "type": "string"
        }
      }
    },
    "ReleaseApprovalHistory": {
      "description": "",
      "type": "object",
      "properties": {
        "approver": {
          "$ref": "#/definitions/IdentityRef"
        },
        "changedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "comments": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReleaseApprovalPendingEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "approval": {
          "$ref": "#/definitions/ReleaseApproval"
        },
        "approvalOptions": {
          "$ref": "#/definitions/ApprovalOptions"
        },
        "completedApprovals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseApproval"
          }
        },
        "definitionName": {
          "type": "string"
        },
        "deployment": {
          "$ref": "#/definitions/Deployment"
        },
        "environmentId": {
          "type": "integer",
          "format": "int32"
        },
        "environmentName": {
          "type": "string"
        },
        "environments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseEnvironment"
          }
        },
        "isMultipleRankApproval": {
          "type": "boolean"
        },
        "pendingApprovals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseApproval"
          }
        },
        "releaseCreator": {
          "type": "string"
        },
        "releaseName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "webAccessUri": {
          "type": "string"
        }
      }
    },
    "ReleaseArtifact": {
      "description": "",
      "type": "object",
      "properties": {
        "artifactProvider": {
          "$ref": "#/definitions/ArtifactProvider"
        },
        "artifactType": {
          "type": "string"
        },
        "definitionData": {
          "type": "string"
        },
        "definitionId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "releaseId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReleaseCondition": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Condition"
        }
      ],
      "properties": {
        "result": {
          "type": "boolean"
        }
      }
    },
    "ReleaseCreatedEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/ProjectReference"
        },
        "release": {
          "$ref": "#/definitions/Release"
        }
      }
    },
    "ReleaseDefinition": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReleaseDefinitionShallowReference"
        }
      ],
      "properties": {
        "artifacts": {
          "description": "Gets or sets the list of artifacts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "comment": {
          "description": "Gets or sets comment.",
          "type": "string"
        },
        "createdBy": {
          "description": "Gets or sets the identity who created.",
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "description": "Gets date on which it got created.",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "environments": {
          "description": "Gets or sets the list of environments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseDefinitionEnvironment"
          }
        },
        "isDeleted": {
          "description": "Whether release definition is deleted.",
          "type": "boolean"
        },
        "lastRelease": {
          "description": "Gets the reference of last release.",
          "$ref": "#/definitions/ReleaseReference"
        },
        "modifiedBy": {
          "description": "Gets or sets the identity who modified.",
          "$ref": "#/definitions/IdentityRef"
        },
        "modifiedOn": {
          "description": "Gets date on which it got modified.",
          "type": "string",
          "format": "date-time"
        },
        "properties": {
          "description": "Gets or sets properties.",
          "$ref": "#/definitions/PropertiesCollection"
        },
        "releaseNameFormat": {
          "description": "Gets or sets the release name format.",
          "type": "string"
        },
        "revision": {
          "description": "Gets the revision number.",
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "description": "Gets or sets source of release definition.",
          "enum": [
            "undefined",
            "restApi",
            "userInterface",
            "ibiza",
            "portalExtensionApi"
          ],
          "x-ms-enum": {
            "name": "ReleaseDefinitionSource",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "restApi",
                "description": ""
              },
              {
                "value": "userInterface",
                "description": ""
              },
              {
                "value": "ibiza",
                "description": ""
              },
              {
                "value": "portalExtensionApi",
                "description": ""
              }
            ]
          }
        },
        "tags": {
          "description": "Gets or sets list of tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "triggers": {
          "description": "Gets or sets the list of triggers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseTriggerBase"
          }
        },
        "variableGroups": {
          "description": "Gets or sets the list of variable groups.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "variables": {
          "description": "Gets or sets the dictionary of variables.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConfigurationVariableValue"
          }
        }
      }
    },
    "ReleaseDefinitionApprovals": {
      "description": "",
      "type": "object",
      "properties": {
        "approvalOptions": {
          "$ref": "#/definitions/ApprovalOptions"
        },
        "approvals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseDefinitionApprovalStep"
          }
        }
      }
    },
    "ReleaseDefinitionApprovalStep": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReleaseDefinitionEnvironmentStep"
        }
      ],
      "properties": {
        "approver": {
          "$ref": "#/definitions/IdentityRef"
        },
        "isAutomated": {
          "type": "boolean"
        },
        "isNotificationOn": {
          "type": "boolean"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReleaseDefinitionDeployStep": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReleaseDefinitionEnvironmentStep"
        }
      ],
      "properties": {
        "tasks": {
          "description": "The list of steps for this definition.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowTask"
          }
        }
      }
    },
    "ReleaseDefinitionEnvironment": {
      "description": "",
      "type": "object",
      "properties": {
        "badgeUrl": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        },
        "currentRelease": {
          "$ref": "#/definitions/ReleaseShallowReference"
        },
        "demands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Demand"
          }
        },
        "deployPhases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeployPhase"
          }
        },
        "deployStep": {
          "$ref": "#/definitions/ReleaseDefinitionDeployStep"
        },
        "environmentOptions": {
          "$ref": "#/definitions/EnvironmentOptions"
        },
        "environmentTriggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentTrigger"
          }
        },
        "executionPolicy": {
          "$ref": "#/definitions/EnvironmentExecutionPolicy"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/IdentityRef"
        },
        "postDeployApprovals": {
          "$ref": "#/definitions/ReleaseDefinitionApprovals"
        },
        "postDeploymentGates": {
          "$ref": "#/definitions/ReleaseDefinitionGatesStep"
        },
        "preDeployApprovals": {
          "$ref": "#/definitions/ReleaseDefinitionApprovals"
        },
        "preDeploymentGates": {
          "$ref": "#/definitions/ReleaseDefinitionGatesStep"
        },
        "processParameters": {
          "$ref": "#/definitions/ProcessParameters"
        },
        "properties": {
          "$ref": "#/definitions/PropertiesCollection"
        },
        "queueId": {
          "type": "integer",
          "format": "int32"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "retentionPolicy": {
          "$ref": "#/definitions/EnvironmentRetentionPolicy"
        },
        "schedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseSchedule"
          }
        },
        "variableGroups": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConfigurationVariableValue"
          }
        }
      }
    },
    "ReleaseDefinitionEnvironmentStep": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReleaseDefinitionEnvironmentSummary": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "lastReleases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseShallowReference"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ReleaseDefinitionEnvironmentTemplate": {
      "description": "",
      "type": "object",
      "properties": {
        "canDelete": {
          "type": "boolean"
        },
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "environment": {
          "$ref": "#/definitions/ReleaseDefinitionEnvironment"
        },
        "iconTaskId": {
          "type": "string",
          "format": "uuid"
        },
        "iconUri": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ReleaseDefinitionGate": {
      "description": "",
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowTask"
          }
        }
      }
    },
    "ReleaseDefinitionGatesOptions": {
      "description": "",
      "type": "object",
      "properties": {
        "isEnabled": {
          "type": "boolean"
        },
        "minimumSuccessDuration": {
          "type": "integer",
          "format": "int32"
        },
        "samplingInterval": {
          "type": "integer",
          "format": "int32"
        },
        "stabilizationTime": {
          "type": "integer",
          "format": "int32"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReleaseDefinitionGatesStep": {
      "description": "",
      "type": "object",
      "properties": {
        "gates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseDefinitionGate"
          }
        },
        "gatesOptions": {
          "$ref": "#/definitions/ReleaseDefinitionGatesOptions"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReleaseDefinitionRevision": {
      "description": "",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Gets api-version for revision object.",
          "type": "string"
        },
        "changedBy": {
          "description": "Gets the identity who did change.",
          "$ref": "#/definitions/IdentityRef"
        },
        "changedDate": {
          "description": "Gets date on which it got changed.",
          "type": "string",
          "format": "date-time"
        },
        "changeType": {
          "description": "Gets type of change.",
          "enum": [
            "add",
            "update",
            "delete",
            "undelete"
          ],
          "x-ms-enum": {
            "name": "AuditAction",
            "values": [
              {
                "value": "add",
                "description": ""
              },
              {
                "value": "update",
                "description": ""
              },
              {
                "value": "delete",
                "description": ""
              },
              {
                "value": "undelete",
                "description": ""
              }
            ]
          }
        },
        "comment": {
          "description": "Gets comments for revision.",
          "type": "string"
        },
        "definitionId": {
          "description": "Get id of the definition.",
          "type": "integer",
          "format": "int32"
        },
        "definitionUrl": {
          "description": "Gets definition url.",
          "type": "string"
        },
        "revision": {
          "description": "Get revision number of the definition.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReleaseDefinitionShallowReference": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "description": "Gets the links to related resources, APIs, and views for the release definition.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "id": {
          "description": "Gets the unique identifier of release definition.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Gets or sets the name of the release definition.",
          "type": "string"
        },
        "path": {
          "description": "Gets or sets the path of the release definition.",
          "type": "string"
        },
        "projectReference": {
          "description": "Gets or sets project reference.",
          "$ref": "#/definitions/ProjectReference"
        },
        "url": {
          "description": "Gets the REST API url to access the release definition.",
          "type": "string"
        }
      }
    },
    "ReleaseDefinitionSummary": {
      "description": "",
      "type": "object",
      "properties": {
        "environments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseDefinitionEnvironmentSummary"
          }
        },
        "releaseDefinition": {
          "$ref": "#/definitions/ReleaseDefinitionShallowReference"
        },
        "releases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Release"
          }
        }
      }
    },
    "ReleaseDefinitionUndeleteParameter": {
      "description": "",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Gets or sets comment.",
          "type": "string"
        }
      }
    },
    "ReleaseDeployPhase": {
      "description": "",
      "type": "object",
      "properties": {
        "deploymentJobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentJob"
          }
        },
        "errorLog": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "manualInterventions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManualIntervention"
          }
        },
        "name": {
          "type": "string"
        },
        "phaseId": {
          "type": "string"
        },
        "phaseType": {
          "enum": [
            "undefined",
            "agentBasedDeployment",
            "runOnServer",
            "machineGroupBasedDeployment",
            "deploymentGates"
          ],
          "x-ms-enum": {
            "name": "DeployPhaseTypes",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "agentBasedDeployment",
                "description": ""
              },
              {
                "value": "runOnServer",
                "description": ""
              },
              {
                "value": "machineGroupBasedDeployment",
                "description": ""
              },
              {
                "value": "deploymentGates",
                "description": "Phase type which contains tasks which acts as Gates for the deployment to go forward."
              }
            ]
          }
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "runPlanId": {
          "type": "string",
          "format": "uuid"
        },
        "startedOn": {
          "description": "Phase start time",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "enum": [
            "undefined",
            "notStarted",
            "inProgress",
            "partiallySucceeded",
            "succeeded",
            "failed",
            "canceled",
            "skipped",
            "cancelling"
          ],
          "x-ms-enum": {
            "name": "DeployPhaseStatus",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "notStarted",
                "description": ""
              },
              {
                "value": "inProgress",
                "description": ""
              },
              {
                "value": "partiallySucceeded",
                "description": ""
              },
              {
                "value": "succeeded",
                "description": ""
              },
              {
                "value": "failed",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              },
              {
                "value": "skipped",
                "description": ""
              },
              {
                "value": "cancelling",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "ReleaseEnvironment": {
      "description": "",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Gets list of conditions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseCondition"
          }
        },
        "createdOn": {
          "description": "Gets date on which it got created.",
          "type": "string",
          "format": "date-time"
        },
        "definitionEnvironmentId": {
          "description": "Gets definition environment id.",
          "type": "integer",
          "format": "int32"
        },
        "demands": {
          "description": "Gets demands.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Demand"
          }
        },
        "deployPhasesSnapshot": {
          "description": "Gets list of deploy phases snapshot.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeployPhase"
          }
        },
        "deploySteps": {
          "description": "Gets deploy steps.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentAttempt"
          }
        },
        "environmentOptions": {
          "description": "Gets environment options.",
          "$ref": "#/definitions/EnvironmentOptions"
        },
        "id": {
          "description": "Gets the unique identifier of this field.",
          "type": "integer",
          "format": "int32"
        },
        "modifiedOn": {
          "description": "Gets date on which it got modified.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Gets name.",
          "type": "string"
        },
        "nextScheduledUtcTime": {
          "description": "Gets next scheduled UTC time.",
          "type": "string",
          "format": "date-time"
        },
        "owner": {
          "description": "Gets the identity who is owner for release environment.",
          "$ref": "#/definitions/IdentityRef"
        },
        "postApprovalsSnapshot": {
          "description": "Gets list of post deploy approvals snapshot.",
          "$ref": "#/definitions/ReleaseDefinitionApprovals"
        },
        "postDeployApprovals": {
          "description": "Gets list of post deploy approvals.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseApproval"
          }
        },
        "postDeploymentGatesSnapshot": {
          "$ref": "#/definitions/ReleaseDefinitionGatesStep"
        },
        "preApprovalsSnapshot": {
          "description": "Gets list of pre deploy approvals snapshot.",
          "$ref": "#/definitions/ReleaseDefinitionApprovals"
        },
        "preDeployApprovals": {
          "description": "Gets list of pre deploy approvals.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseApproval"
          }
        },
        "preDeploymentGatesSnapshot": {
          "$ref": "#/definitions/ReleaseDefinitionGatesStep"
        },
        "processParameters": {
          "description": "Gets process parameters.",
          "$ref": "#/definitions/ProcessParameters"
        },
        "queueId": {
          "description": "Gets queue id.",
          "type": "integer",
          "format": "int32"
        },
        "rank": {
          "description": "Gets rank.",
          "type": "integer",
          "format": "int32"
        },
        "release": {
          "description": "Gets release reference which specifies the reference of the release to which this release environment is associated.",
          "$ref": "#/definitions/ReleaseShallowReference"
        },
        "releaseCreatedBy": {
          "description": "Gets the identity who created release.",
          "$ref": "#/definitions/IdentityRef"
        },
        "releaseDefinition": {
          "description": "Gets releaseDefinitionReference which specifies the reference of the release definition to which this release environment is associated.",
          "$ref": "#/definitions/ReleaseDefinitionShallowReference"
        },
        "releaseDescription": {
          "description": "Gets release description.",
          "type": "string"
        },
        "releaseId": {
          "description": "Gets release id.",
          "type": "integer",
          "format": "int32"
        },
        "scheduledDeploymentTime": {
          "description": "Gets schedule deployment time of release environment.",
          "type": "string",
          "format": "date-time"
        },
        "schedules": {
          "description": "Gets list of schedules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseSchedule"
          }
        },
        "status": {
          "description": "Gets environment status.",
          "enum": [
            "undefined",
            "notStarted",
            "inProgress",
            "succeeded",
            "canceled",
            "rejected",
            "queued",
            "scheduled",
            "partiallySucceeded"
          ],
          "x-ms-enum": {
            "name": "EnvironmentStatus",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "notStarted",
                "description": ""
              },
              {
                "value": "inProgress",
                "description": ""
              },
              {
                "value": "succeeded",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              },
              {
                "value": "rejected",
                "description": ""
              },
              {
                "value": "queued",
                "description": ""
              },
              {
                "value": "scheduled",
                "description": ""
              },
              {
                "value": "partiallySucceeded",
                "description": ""
              }
            ]
          }
        },
        "timeToDeploy": {
          "description": "Gets time to deploy.",
          "type": "number",
          "format": "double"
        },
        "triggerReason": {
          "description": "Gets trigger reason.",
          "type": "string"
        },
        "variableGroups": {
          "description": "Gets the list of variable groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariableGroup"
          }
        },
        "variables": {
          "description": "Gets the dictionary of variables.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConfigurationVariableValue"
          }
        },
        "workflowTasks": {
          "description": "Gets list of workflow tasks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowTask"
          }
        }
      }
    },
    "ReleaseEnvironmentCompletedEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "createdByName": {
          "type": "string"
        },
        "definitionId": {
          "type": "integer",
          "format": "int32"
        },
        "definitionName": {
          "type": "string"
        },
        "environment": {
          "$ref": "#/definitions/ReleaseEnvironment"
        },
        "environmentId": {
          "type": "integer",
          "format": "int32"
        },
        "projectName": {
          "type": "string"
        },
        "reason": {
          "enum": [
            "none",
            "manual",
            "automated",
            "scheduled",
            "redeployTrigger"
          ],
          "x-ms-enum": {
            "name": "DeploymentReason",
            "values": [
              {
                "value": "none",
                "description": "The deployment reason is none."
              },
              {
                "value": "manual",
                "description": "The deployment reason is manual."
              },
              {
                "value": "automated",
                "description": "The deployment reason is automated."
              },
              {
                "value": "scheduled",
                "description": "The deployment reason is scheduled."
              },
              {
                "value": "redeployTrigger",
                "description": "The deployment reason is RedeployTrigger."
              }
            ]
          }
        },
        "releaseCreatedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "releaseLogsUri": {
          "type": "string"
        },
        "releaseName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "webAccessUri": {
          "type": "string"
        }
      }
    },
    "ReleaseEnvironmentShallowReference": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "description": "Gets the links to related resources, APIs, and views for the release environment.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "id": {
          "description": "Gets the unique identifier of release environment.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Gets or sets the name of the release environment.",
          "type": "string"
        },
        "url": {
          "description": "Gets the REST API url to access the release environment.",
          "type": "string"
        }
      }
    },
    "ReleaseEnvironmentStatusUpdatedEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RealtimeReleaseDefinitionEvent"
        }
      ],
      "properties": {
        "environmentId": {
          "type": "integer",
          "format": "int32"
        },
        "environmentStatus": {
          "enum": [
            "undefined",
            "notStarted",
            "inProgress",
            "succeeded",
            "canceled",
            "rejected",
            "queued",
            "scheduled",
            "partiallySucceeded"
          ],
          "x-ms-enum": {
            "name": "EnvironmentStatus",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "notStarted",
                "description": ""
              },
              {
                "value": "inProgress",
                "description": ""
              },
              {
                "value": "succeeded",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              },
              {
                "value": "rejected",
                "description": ""
              },
              {
                "value": "queued",
                "description": ""
              },
              {
                "value": "scheduled",
                "description": ""
              },
              {
                "value": "partiallySucceeded",
                "description": ""
              }
            ]
          }
        },
        "latestDeploymentOperationStatus": {
          "enum": [
            "undefined",
            "queued",
            "scheduled",
            "pending",
            "approved",
            "rejected",
            "deferred",
            "queuedForAgent",
            "phaseInProgress",
            "phaseSucceeded",
            "phasePartiallySucceeded",
            "phaseFailed",
            "canceled",
            "phaseCanceled",
            "manualInterventionPending",
            "queuedForPipeline",
            "cancelling",
            "evaluatingGates",
            "gateFailed",
            "all"
          ],
          "x-ms-enum": {
            "name": "DeploymentOperationStatus",
            "values": [
              {
                "value": "undefined",
                "description": "The deployment operation status is undefined."
              },
              {
                "value": "queued",
                "description": "The deployment operation status is queued."
              },
              {
                "value": "scheduled",
                "description": "The deployment operation status is scheduled."
              },
              {
                "value": "pending",
                "description": "The deployment operation status is pending."
              },
              {
                "value": "approved",
                "description": "The deployment operation status is approved."
              },
              {
                "value": "rejected",
                "description": "The deployment operation status is rejected."
              },
              {
                "value": "deferred",
                "description": "The deployment operation status is deferred."
              },
              {
                "value": "queuedForAgent",
                "description": "The deployment operation status is queued for agent."
              },
              {
                "value": "phaseInProgress",
                "description": "The deployment operation status is phase inprogress."
              },
              {
                "value": "phaseSucceeded",
                "description": "The deployment operation status is phase succeeded."
              },
              {
                "value": "phasePartiallySucceeded",
                "description": "The deployment operation status is phase partially succeeded."
              },
              {
                "value": "phaseFailed",
                "description": "The deployment operation status is phase failed."
              },
              {
                "value": "canceled",
                "description": "The deployment operation status is canceled."
              },
              {
                "value": "phaseCanceled",
                "description": "The deployment operation status is phase canceled."
              },
              {
                "value": "manualInterventionPending",
                "description": "The deployment operation status is manualintervention pending."
              },
              {
                "value": "queuedForPipeline",
                "description": "The deployment operation status is queued for pipeline."
              },
              {
                "value": "cancelling",
                "description": "The deployment operation status is cancelling."
              },
              {
                "value": "evaluatingGates",
                "description": "The deployment operation status is EvaluatingGates."
              },
              {
                "value": "gateFailed",
                "description": "The deployment operation status is GateFailed."
              },
              {
                "value": "all",
                "description": "The deployment operation status is all."
              }
            ]
          }
        },
        "latestDeploymentStatus": {
          "enum": [
            "undefined",
            "notDeployed",
            "inProgress",
            "succeeded",
            "partiallySucceeded",
            "failed",
            "all"
          ],
          "x-ms-enum": {
            "name": "DeploymentStatus",
            "values": [
              {
                "value": "undefined",
                "description": "The deployment status is undefined."
              },
              {
                "value": "notDeployed",
                "description": "The deployment status is not deployed."
              },
              {
                "value": "inProgress",
                "description": "The deployment status is inprogress."
              },
              {
                "value": "succeeded",
                "description": "The deployment status is succeeded."
              },
              {
                "value": "partiallySucceeded",
                "description": "The deployment status is partiallysucceeded."
              },
              {
                "value": "failed",
                "description": "The deployment status is failed."
              },
              {
                "value": "all",
                "description": "The deployment status is all."
              }
            ]
          }
        },
        "releaseId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReleaseEnvironmentUpdateMetadata": {
      "description": "",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Gets or sets comment.",
          "type": "string"
        },
        "scheduledDeploymentTime": {
          "description": "Gets or sets scheduled deployment time.",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "Gets or sets status of environment.",
          "enum": [
            "undefined",
            "notStarted",
            "inProgress",
            "succeeded",
            "canceled",
            "rejected",
            "queued",
            "scheduled",
            "partiallySucceeded"
          ],
          "x-ms-enum": {
            "name": "EnvironmentStatus",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "notStarted",
                "description": ""
              },
              {
                "value": "inProgress",
                "description": ""
              },
              {
                "value": "succeeded",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              },
              {
                "value": "rejected",
                "description": ""
              },
              {
                "value": "queued",
                "description": ""
              },
              {
                "value": "scheduled",
                "description": ""
              },
              {
                "value": "partiallySucceeded",
                "description": ""
              }
            ]
          }
        },
        "variables": {
          "description": "Sets list of environment variables to be overridden at deployment time.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConfigurationVariableValue"
          }
        }
      }
    },
    "ReleaseGates": {
      "description": "",
      "type": "object",
      "properties": {
        "deploymentJobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentJob"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "ignoredGates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IgnoredGate"
          }
        },
        "lastModifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "runPlanId": {
          "type": "string",
          "format": "uuid"
        },
        "stabilizationCompletedOn": {
          "type": "string",
          "format": "date-time"
        },
        "startedOn": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "enum": [
            "none",
            "pending",
            "inProgress",
            "succeeded",
            "failed",
            "canceled"
          ],
          "x-ms-enum": {
            "name": "GateStatus",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "pending",
                "description": ""
              },
              {
                "value": "inProgress",
                "description": ""
              },
              {
                "value": "succeeded",
                "description": ""
              },
              {
                "value": "failed",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              }
            ]
          }
        },
        "succeedingSince": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReleaseGatesPhase": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReleaseDeployPhase"
        }
      ],
      "properties": {
        "ignoredGates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IgnoredGate"
          }
        },
        "stabilizationCompletedOn": {
          "type": "string",
          "format": "date-time"
        },
        "succeedingSince": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReleaseManagementInputValue": {
      "description": "",
      "type": "object",
      "properties": {
        "displayValue": {
          "description": "The text to show for the display of this value",
          "type": "string"
        },
        "value": {
          "description": "The value to store for this input",
          "type": "string"
        }
      }
    },
    "ReleaseReference": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "description": "Gets links to access the release.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "artifacts": {
          "description": "Gets list of artifacts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "createdBy": {
          "description": "Gets the identity who created.",
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "description": "Gets date on which it got created.",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Gets description.",
          "type": "string"
        },
        "id": {
          "description": "Gets the unique identifier of this field.",
          "type": "integer",
          "format": "int32"
        },
        "modifiedBy": {
          "description": "Gets the identity who modified.",
          "$ref": "#/definitions/IdentityRef"
        },
        "name": {
          "description": "Gets name of release.",
          "type": "string"
        },
        "reason": {
          "description": "Gets reason for release.",
          "enum": [
            "none",
            "manual",
            "continuousIntegration",
            "schedule",
            "pullRequest"
          ],
          "x-ms-enum": {
            "name": "ReleaseReason",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "manual",
                "description": ""
              },
              {
                "value": "continuousIntegration",
                "description": ""
              },
              {
                "value": "schedule",
                "description": ""
              },
              {
                "value": "pullRequest",
                "description": ""
              }
            ]
          }
        },
        "releaseDefinition": {
          "description": "Gets release definition shallow reference.",
          "$ref": "#/definitions/ReleaseDefinitionShallowReference"
        }
      }
    },
    "ReleaseRevision": {
      "description": "",
      "type": "object",
      "properties": {
        "changedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "changedDate": {
          "type": "string",
          "format": "date-time"
        },
        "changeDetails": {
          "type": "string"
        },
        "changeType": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "definitionSnapshotRevision": {
          "type": "integer",
          "format": "int32"
        },
        "releaseId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReleaseSchedule": {
      "description": "",
      "type": "object",
      "properties": {
        "daysToRelease": {
          "description": "Days of the week to release",
          "enum": [
            "none",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
            "all"
          ],
          "x-ms-enum": {
            "name": "ScheduleDays",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "monday",
                "description": ""
              },
              {
                "value": "tuesday",
                "description": ""
              },
              {
                "value": "wednesday",
                "description": ""
              },
              {
                "value": "thursday",
                "description": ""
              },
              {
                "value": "friday",
                "description": ""
              },
              {
                "value": "saturday",
                "description": ""
              },
              {
                "value": "sunday",
                "description": ""
              },
              {
                "value": "all",
                "description": ""
              }
            ]
          }
        },
        "jobId": {
          "description": "Team Foundation Job Definition Job Id",
          "type": "string",
          "format": "uuid"
        },
        "startHours": {
          "description": "Local time zone hour to start",
          "type": "integer",
          "format": "int32"
        },
        "startMinutes": {
          "description": "Local time zone minute to start",
          "type": "integer",
          "format": "int32"
        },
        "timeZoneId": {
          "description": "Time zone Id of release schedule, such as 'UTC'",
          "type": "string"
        }
      }
    },
    "ReleaseSettings": {
      "description": "",
      "type": "object",
      "properties": {
        "retentionSettings": {
          "$ref": "#/definitions/RetentionSettings"
        }
      }
    },
    "ReleaseShallowReference": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "description": "Gets the links to related resources, APIs, and views for the release.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "id": {
          "description": "Gets the unique identifier of release.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Gets or sets the name of the release.",
          "type": "string"
        },
        "url": {
          "description": "Gets the REST API url to access the release.",
          "type": "string"
        }
      }
    },
    "ReleaseStartEnvironmentMetadata": {
      "description": "",
      "type": "object",
      "properties": {
        "definitionEnvironmentId": {
          "description": "Sets release definition environment id.",
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "description": "Sets list of environments variables to be overridden at deployment time.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConfigurationVariableValue"
          }
        }
      }
    },
    "ReleaseStartMetadata": {
      "description": "",
      "type": "object",
      "properties": {
        "artifacts": {
          "description": "Sets list of artifact to create a release.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactMetadata"
          }
        },
        "definitionId": {
          "description": "Sets definition Id to create a release.",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "Sets description to create a release.",
          "type": "string"
        },
        "environmentsMetadata": {
          "description": "Sets list of environments meta data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseStartEnvironmentMetadata"
          }
        },
        "isDraft": {
          "description": "Sets 'true' to create release in draft mode, 'false' otherwise.",
          "type": "boolean"
        },
        "manualEnvironments": {
          "description": "Sets list of environments to manual as condition.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/PropertiesCollection"
        },
        "reason": {
          "description": "Sets reason to create a release.",
          "enum": [
            "none",
            "manual",
            "continuousIntegration",
            "schedule",
            "pullRequest"
          ],
          "x-ms-enum": {
            "name": "ReleaseReason",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "manual",
                "description": ""
              },
              {
                "value": "continuousIntegration",
                "description": ""
              },
              {
                "value": "schedule",
                "description": ""
              },
              {
                "value": "pullRequest",
                "description": ""
              }
            ]
          }
        },
        "variables": {
          "description": "Sets list of release variables to be overridden at deployment time.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConfigurationVariableValue"
          }
        }
      }
    },
    "ReleaseTask": {
      "description": "",
      "type": "object",
      "properties": {
        "agentName": {
          "type": "string"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "issues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          }
        },
        "lineCount": {
          "type": "integer",
          "format": "int64"
        },
        "logUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "resultCode": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "enum": [
            "unknown",
            "pending",
            "inProgress",
            "success",
            "failure",
            "canceled",
            "skipped",
            "succeeded",
            "failed",
            "partiallySucceeded"
          ],
          "x-ms-enum": {
            "name": "TaskStatus",
            "values": [
              {
                "value": "unknown",
                "description": ""
              },
              {
                "value": "pending",
                "description": ""
              },
              {
                "value": "inProgress",
                "description": ""
              },
              {
                "value": "success",
                "description": ""
              },
              {
                "value": "failure",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              },
              {
                "value": "skipped",
                "description": ""
              },
              {
                "value": "succeeded",
                "description": ""
              },
              {
                "value": "failed",
                "description": ""
              },
              {
                "value": "partiallySucceeded",
                "description": ""
              }
            ]
          }
        },
        "task": {
          "$ref": "#/definitions/WorkflowTaskReference"
        },
        "timelineRecordId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ReleaseTaskAttachment": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "recordId": {
          "type": "string",
          "format": "uuid"
        },
        "timelineId": {
          "type": "string",
          "format": "uuid"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ReleaseTaskLogUpdatedEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RealtimeReleaseEvent"
        }
      ],
      "properties": {
        "lines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stepRecordId": {
          "type": "string",
          "format": "uuid"
        },
        "timelineRecordId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ReleaseTasksUpdatedEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RealtimeReleaseEvent"
        }
      ],
      "properties": {
        "job": {
          "$ref": "#/definitions/ReleaseTask"
        },
        "planId": {
          "type": "string",
          "format": "uuid"
        },
        "releaseDeployPhaseId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseStepId": {
          "type": "integer",
          "format": "int32"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReleaseTask"
          }
        }
      }
    },
    "ReleaseTriggerBase": {
      "description": "",
      "type": "object",
      "properties": {
        "triggerType": {
          "enum": [
            "undefined",
            "artifactSource",
            "schedule",
            "sourceRepo",
            "containerImage",
            "package",
            "pullRequest"
          ],
          "x-ms-enum": {
            "name": "ReleaseTriggerType",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "artifactSource",
                "description": ""
              },
              {
                "value": "schedule",
                "description": ""
              },
              {
                "value": "sourceRepo",
                "description": ""
              },
              {
                "value": "containerImage",
                "description": ""
              },
              {
                "value": "package",
                "description": ""
              },
              {
                "value": "pullRequest",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "ReleaseUpdatedEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RealtimeReleaseEvent"
        }
      ],
      "properties": {
        "release": {
          "$ref": "#/definitions/Release"
        }
      }
    },
    "ReleaseUpdateMetadata": {
      "description": "",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Sets comment for release.",
          "type": "string"
        },
        "keepForever": {
          "description": "Set 'true' to exclude the release from retention policies.",
          "type": "boolean"
        },
        "manualEnvironments": {
          "description": "Sets list of manual environments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "Sets status of the release.",
          "enum": [
            "undefined",
            "draft",
            "active",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "ReleaseStatus",
            "values": [
              {
                "value": "undefined",
                "description": ""
              },
              {
                "value": "draft",
                "description": ""
              },
              {
                "value": "active",
                "description": ""
              },
              {
                "value": "abandoned",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "ReleaseWorkItemRef": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ResourceReference": {
      "description": "Represents a reference to a resource.",
      "type": "object",
      "properties": {
        "alias": {
          "description": "An alias to be used when referencing the resource.",
          "type": "string"
        }
      }
    },
    "RetentionPolicy": {
      "description": "",
      "type": "object",
      "properties": {
        "daysToKeep": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RetentionSettings": {
      "description": "",
      "type": "object",
      "properties": {
        "daysToKeepDeletedReleases": {
          "type": "integer",
          "format": "int32"
        },
        "defaultEnvironmentRetentionPolicy": {
          "$ref": "#/definitions/EnvironmentRetentionPolicy"
        },
        "maximumEnvironmentRetentionPolicy": {
          "$ref": "#/definitions/EnvironmentRetentionPolicy"
        }
      }
    },
    "RunOnServerDeployPhase": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeployPhase"
        }
      ],
      "properties": {
        "deploymentInput": {
          "$ref": "#/definitions/ServerDeploymentInput"
        }
      }
    },
    "ScheduledReleaseTrigger": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReleaseTriggerBase"
        }
      ],
      "properties": {
        "schedule": {
          "description": "Release schedule for Scheduled Release trigger type",
          "$ref": "#/definitions/ReleaseSchedule"
        }
      }
    },
    "ServerDeploymentInput": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseDeploymentInput"
        }
      ],
      "properties": {
        "parallelExecution": {
          "$ref": "#/definitions/ExecutionInput"
        }
      }
    },
    "ServiceEndpointReference": {
      "description": "Represents a referenec to a service endpoint.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ],
      "properties": {
        "id": {
          "description": "The ID of the service endpoint.",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "SourceIdInput": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "SourcePullRequestVersion": {
      "description": "",
      "type": "object",
      "properties": {
        "pullRequestId": {
          "description": "Pull Request Id for which the release will publish status",
          "type": "string"
        },
        "pullRequestMergedAt": {
          "type": "string",
          "format": "date-time"
        },
        "sourceBranchCommitId": {
          "description": "Source branch commit Id of the Pull Request for which the release will publish status",
          "type": "string"
        }
      }
    },
    "SourceRepoTrigger": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReleaseTriggerBase"
        }
      ],
      "properties": {
        "alias": {
          "type": "string"
        },
        "branchFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SummaryMailSection": {
      "description": "",
      "type": "object",
      "properties": {
        "htmlContent": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "sectionType": {
          "enum": [
            "details",
            "environments",
            "issues",
            "testResults",
            "workItems",
            "releaseInfo"
          ],
          "x-ms-enum": {
            "name": "MailSectionType",
            "values": [
              {
                "value": "details",
                "description": ""
              },
              {
                "value": "environments",
                "description": ""
              },
              {
                "value": "issues",
                "description": ""
              },
              {
                "value": "testResults",
                "description": ""
              },
              {
                "value": "workItems",
                "description": ""
              },
              {
                "value": "releaseInfo",
                "description": ""
              }
            ]
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "TagFilter": {
      "description": "",
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string"
        }
      }
    },
    "TaskInputDefinitionBase": {
      "description": "",
      "type": "object",
      "properties": {
        "aliases": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultValue": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "helpMarkDown": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "required": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "validation": {
          "$ref": "#/definitions/TaskInputValidation"
        },
        "visibleRule": {
          "type": "string"
        }
      }
    },
    "TaskInputValidation": {
      "description": "",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Conditional expression",
          "type": "string"
        },
        "message": {
          "description": "Message explaining how user can correct if validation fails",
          "type": "string"
        }
      }
    },
    "TaskOrchestrationPlanGroupReference": {
      "description": "",
      "type": "object",
      "properties": {
        "planGroup": {
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TaskOrchestrationPlanGroupsStartedEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "planGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskOrchestrationPlanGroupReference"
          }
        }
      }
    },
    "TaskSourceDefinitionBase": {
      "description": "",
      "type": "object",
      "properties": {
        "authKey": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "keySelector": {
          "type": "string"
        },
        "selector": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "TfvcArtifactDownloadInput": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactDownloadInputBase"
        }
      ],
      "properties": {}
    },
    "TimeZone": {
      "description": "",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "TimeZoneList": {
      "description": "",
      "type": "object",
      "properties": {
        "utcTimeZone": {
          "$ref": "#/definitions/TimeZone"
        },
        "validTimeZones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeZone"
          }
        }
      }
    },
    "VariableGroup": {
      "description": "",
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "Gets or sets the identity who created.",
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "description": "Gets date on which it got created.",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Gets or sets description.",
          "type": "string"
        },
        "id": {
          "description": "Gets the unique identifier of this field.",
          "type": "integer",
          "format": "int32"
        },
        "isShared": {
          "description": "Denotes if a variable group is shared with other project or not.",
          "type": "boolean"
        },
        "modifiedBy": {
          "description": "Gets or sets the identity who modified.",
          "$ref": "#/definitions/IdentityRef"
        },
        "modifiedOn": {
          "description": "Gets date on which it got modified.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Gets or sets name.",
          "type": "string"
        },
        "providerData": {
          "description": "Gets or sets provider data.",
          "$ref": "#/definitions/VariableGroupProviderData"
        },
        "type": {
          "description": "Gets or sets type.",
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/VariableValue"
          }
        }
      }
    },
    "VariableGroupProviderData": {
      "description": "",
      "type": "object",
      "properties": {}
    },
    "VariableValue": {
      "description": "",
      "type": "object",
      "properties": {
        "isSecret": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialized collections as a single JSON object on the wire, to avoid serializing JSON arrays directly to the client, which can be a security hole",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WorkflowTask": {
      "description": "",
      "type": "object",
      "properties": {
        "alwaysRun": {
          "type": "boolean"
        },
        "condition": {
          "type": "string"
        },
        "continueOnError": {
          "type": "boolean"
        },
        "definitionType": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "environment": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "overrideInputs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "refName": {
          "type": "string"
        },
        "taskId": {
          "type": "string",
          "format": "uuid"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "WorkflowTaskReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "YamlFileSource": {
      "description": "",
      "type": "object",
      "properties": {
        "sourceReference": {
          "description": "Gets or sets definition reference. e.g. {\"project\":{\"id\":\"fed755ea-49c5-4399-acea-fd5b5aa90a6c\",\"name\":\"myProject\"},\"definition\":{\"id\":\"1\",\"name\":\"mybuildDefinition\"},\"connection\":{\"id\":\"1\",\"name\":\"myConnection\"}}",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/YamlSourceReference"
          }
        },
        "type": {
          "enum": [
            "none",
            "tFSGit"
          ],
          "x-ms-enum": {
            "name": "YamlFileSourceTypes",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "tFSGit",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "YamlPipelineProcess": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PipelineProcess"
        }
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filename": {
          "type": "string"
        },
        "fileSource": {
          "$ref": "#/definitions/YamlFileSource"
        },
        "resources": {
          "$ref": "#/definitions/YamlPipelineProcessResources"
        }
      }
    },
    "YamlPipelineProcessResources": {
      "description": "",
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpointReference"
          }
        },
        "queues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgentPoolQueueReference"
          }
        }
      }
    },
    "YamlSourceReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '5.0' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '5.0-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.2": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '5.0-preview.2' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.3": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '5.0-preview.3' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.6": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '5.0-preview.6' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.release": "Grants the ability to read release artifacts, including releases, release definitions and release environment.",
        "vso.release_execute": "Grants the ability to read and update release artifacts, including releases, release definitions and release envrionment, and the ability to queue a new release.",
        "vso.release_manage": "Grants the ability to read, update and delete release artifacts, including releases, release definitions and release envrionment, and the ability to queue and approve a new release."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  }
}