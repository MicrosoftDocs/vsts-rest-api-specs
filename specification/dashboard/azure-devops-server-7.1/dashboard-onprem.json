{
  "swagger": "2.0",
  "info": {
    "title": "Dashboard",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "7.1-preview"
  },
  "host": "https://fabrikam-fiber-inc:8080/DefaultCollection",
  "x-ms-vss-area": "Dashboard",
  "x-ms-vss-resource-area-id": "31c84e0a-3ece-48fd-a29d-100849af99ba",
  "basePath": "/",
  "tags": [
    {
      "name": "Dashboards",
      "description": "APIs for viewing and managing dashboards."
    },
    {
      "name": "Widgets",
      "description": "APIs for viewing and managing widgets."
    },
    {
      "name": "Widget Types",
      "description": "APIs for viewing widget type information."
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{collection}/{project}/_apis/dashboard/widgettypes": {
      "get": {
        "tags": [
          "Widget Types"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "widgetTypes",
        "x-ms-vss-method": "GetWidgetTypes",
        "x-ms-preview": true,
        "description": "Get all available widget metadata in alphabetical order, including widgets marked with isVisibleFromCatalog == false.",
        "operationId": "Widget Types_Get Widget Types",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$scope",
            "description": "",
            "required": true,
            "type": "string",
            "enum": [
              "collection_User",
              "project_Team"
            ],
            "x-ms-enum": {
              "name": "WidgetScope",
              "values": [
                {
                  "value": "collection_User",
                  "description": ""
                },
                {
                  "value": "project_Team",
                  "description": ""
                }
              ]
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WidgetTypesResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/WidgetTypes/GET__dashboard_WidgetTypes-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/dashboard/widgettypes/{contributionId}": {
      "get": {
        "tags": [
          "Widget Types"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "widgetTypes",
        "x-ms-vss-method": "GetWidgetMetadata",
        "x-ms-preview": true,
        "description": "Get the widget metadata satisfying the specified contribution ID.",
        "operationId": "Widget Types_Get Widget Metadata",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "contributionId",
            "description": "The ID of Contribution for the Widget",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WidgetMetadataResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/WidgetTypes/GET__dashboard_WidgetTypes__widgetId_-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/{team}/_apis/dashboard/dashboards": {
      "post": {
        "tags": [
          "Dashboards"
        ],
        "x-ms-docs-override-version": "7.1-preview.3",
        "x-ms-vss-resource": "dashboards",
        "x-ms-vss-method": "CreateDashboard",
        "x-ms-preview": true,
        "description": "Create the supplied dashboard.",
        "operationId": "Dashboards_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The initial state of the dashboard",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.3"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Dashboards/POST_dashboard-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Dashboards"
        ],
        "x-ms-docs-override-version": "7.1-preview.3",
        "x-ms-vss-resource": "dashboards",
        "x-ms-vss-method": "GetDashboardsByProject",
        "x-ms-preview": true,
        "description": "Get a list of dashboards under a project.",
        "operationId": "Dashboards_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.3"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Dashboard"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Dashboards/GET_dashboards_by_project-onprem.json"
          }
        }
      },
      "put": {
        "tags": [
          "Dashboards"
        ],
        "x-ms-docs-override-version": "7.1-preview.3",
        "x-ms-vss-resource": "dashboards",
        "x-ms-vss-method": "ReplaceDashboards",
        "x-ms-preview": true,
        "description": "Update the name and position of dashboards in the supplied group, and remove omitted dashboards. Does not modify dashboard content.",
        "operationId": "Dashboards_Replace Dashboards",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DashboardGroup"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.3"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardGroup"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Dashboards/PUT__dashboard_groups__groupId__dashboards__dashboardId__-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}": {
      "delete": {
        "tags": [
          "Dashboards"
        ],
        "x-ms-docs-override-version": "7.1-preview.3",
        "x-ms-vss-resource": "dashboards",
        "x-ms-vss-method": "DeleteDashboard",
        "x-ms-preview": true,
        "description": "Delete a dashboard given its ID. This also deletes the widgets associated with this dashboard.",
        "operationId": "Dashboards_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "ID of the dashboard to delete.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.3"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Dashboards/DELETE__dashboard_groups__groupId__dashboards__dashboardId_-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Dashboards"
        ],
        "x-ms-docs-override-version": "7.1-preview.3",
        "x-ms-vss-resource": "dashboards",
        "x-ms-vss-method": "GetDashboard",
        "x-ms-preview": true,
        "description": "Get a dashboard by its ID.",
        "operationId": "Dashboards_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.3"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Dashboards/GET_dashboard-onprem.json"
          }
        }
      },
      "put": {
        "tags": [
          "Dashboards"
        ],
        "x-ms-docs-override-version": "7.1-preview.3",
        "x-ms-vss-resource": "dashboards",
        "x-ms-vss-method": "ReplaceDashboard",
        "x-ms-preview": true,
        "description": "Replace configuration for the specified dashboard. Replaces Widget list on Dashboard, only if property is supplied.",
        "operationId": "Dashboards_Replace Dashboard",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Configuration of the dashboard to replace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "ID of the dashboard to replace.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.3"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ]
      }
    },
    "/{collection}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}/widgets": {
      "post": {
        "tags": [
          "Widgets"
        ],
        "x-ms-docs-override-version": "7.1-preview.2",
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "CreateWidget",
        "x-ms-preview": true,
        "description": "Create a widget on the specified dashboard.",
        "operationId": "Widgets_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "State of the widget to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "ID of dashboard the widget will be added to.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Widgets/POST_widgets-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Widgets"
        ],
        "x-ms-docs-override-version": "7.1-preview.2",
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "GetWidgets",
        "x-ms-preview": true,
        "description": "Get widgets contained on the specified dashboard.",
        "operationId": "Widgets_Get Widgets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "ID of the dashboard to read.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "eTag",
            "description": "Dashboard Widgets Version",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Widgets/GET_widgets-onprem.json"
          }
        }
      },
      "put": {
        "tags": [
          "Widgets"
        ],
        "x-ms-docs-override-version": "7.1-preview.2",
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "ReplaceWidgets",
        "x-ms-preview": true,
        "description": "Replace the widgets on specified dashboard with the supplied widgets.",
        "operationId": "Widgets_Replace Widgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Revised state of widgets to store for the dashboard.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "ID of the Dashboard to modify.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "eTag",
            "description": "Dashboard Widgets Version",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Widgets/PUT_widgets-onprem.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Widgets"
        ],
        "x-ms-docs-override-version": "7.1-preview.2",
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "UpdateWidgets",
        "x-ms-preview": true,
        "description": "Update the supplied widgets on the dashboard using supplied state. State of existing Widgets not passed in the widget list is preserved.",
        "operationId": "Widgets_Update Widgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The set of widget states to update on the dashboard.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "ID of the Dashboard to modify.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "eTag",
            "description": "Dashboard Widgets Version",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Widgets/PATCH_widgets-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}/widgets/{widgetId}": {
      "delete": {
        "tags": [
          "Widgets"
        ],
        "x-ms-docs-override-version": "7.1-preview.2",
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "DeleteWidget",
        "x-ms-preview": true,
        "description": "Delete the specified widget.",
        "operationId": "Widgets_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "ID of the dashboard containing the widget.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "widgetId",
            "description": "ID of the widget to update.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Widgets/DELETE__dashboard_groups__groupId__dashboards__dashboardId__widgets__widgetId_-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Widgets"
        ],
        "x-ms-docs-override-version": "7.1-preview.2",
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "GetWidget",
        "x-ms-preview": true,
        "description": "Get the current state of the specified widget.",
        "operationId": "Widgets_Get Widget",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "ID of the dashboard containing the widget.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "widgetId",
            "description": "ID of the widget to read.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Widgets/GET_widgets_widgetid-onprem.json"
          }
        }
      },
      "put": {
        "tags": [
          "Widgets"
        ],
        "x-ms-docs-override-version": "7.1-preview.2",
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "ReplaceWidget",
        "x-ms-preview": true,
        "description": "Override the  state of the specified widget.",
        "operationId": "Widgets_Replace Widget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "State to be written for the widget.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "ID of the dashboard containing the widget.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "widgetId",
            "description": "ID of the widget to update.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Widgets/PUT_widgets_widgetid-onprem.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Widgets"
        ],
        "x-ms-docs-override-version": "7.1-preview.2",
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "UpdateWidget",
        "x-ms-preview": true,
        "description": "Perform a partial update of the specified widget.",
        "operationId": "Widgets_Update Widget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Description of the widget changes to apply. All non-null fields will be replaced.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "ID of the dashboard containing the widget.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "widgetId",
            "description": "ID of the widget to update.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Widgets/PATCH_widgets_widgetid-onprem.json"
          }
        }
      }
    }
  },
  "definitions": {
    "CopyDashboardOptions": {
      "description": "Copy options of a Dashboard.",
      "type": "object",
      "properties": {
        "copyDashboardScope": {
          "description": "Dashboard Scope. Can be either Project or Project_Team",
          "enum": [
            "collection_User",
            "project_Team",
            "project"
          ],
          "x-ms-enum": {
            "name": "DashboardScope",
            "values": [
              {
                "value": "collection_User",
                "description": "[DEPRECATED] Dashboard is scoped to the collection user."
              },
              {
                "value": "project_Team",
                "description": "Dashboard is scoped to the team."
              },
              {
                "value": "project",
                "description": "Dashboard is scoped to the project."
              }
            ]
          }
        },
        "copyQueriesFlag": {
          "description": "When this flag is set to true,option to select the folder to copy Queries of copy dashboard will appear.",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the dashboard",
          "type": "string"
        },
        "name": {
          "description": "Name of the dashboard",
          "type": "string"
        },
        "projectId": {
          "description": "ID of the project. Provided by service at creation time.",
          "type": "string",
          "format": "uuid"
        },
        "queryFolderPath": {
          "description": "Path to which the queries should be copied of copy dashboard",
          "type": "string",
          "format": "uuid"
        },
        "refreshInterval": {
          "description": "Refresh interval of dashboard",
          "type": "integer",
          "format": "int32"
        },
        "teamId": {
          "description": "ID of the team. Provided by service at creation time",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "CopyDashboardResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "copiedDashboard": {
          "description": "Copied Dashboard",
          "$ref": "#/definitions/Dashboard"
        },
        "copyDashboardOptions": {
          "description": "Copy Dashboard options",
          "$ref": "#/definitions/CopyDashboardOptions"
        }
      }
    },
    "Dashboard": {
      "description": "Model of a Dashboard.",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "dashboardScope": {
          "description": "Entity to which the dashboard is scoped.",
          "enum": [
            "collection_User",
            "project_Team",
            "project"
          ],
          "x-ms-enum": {
            "name": "DashboardScope",
            "values": [
              {
                "value": "collection_User",
                "description": "[DEPRECATED] Dashboard is scoped to the collection user."
              },
              {
                "value": "project_Team",
                "description": "Dashboard is scoped to the team."
              },
              {
                "value": "project",
                "description": "Dashboard is scoped to the project."
              }
            ]
          }
        },
        "description": {
          "description": "Description of the dashboard.",
          "type": "string"
        },
        "eTag": {
          "description": "Server defined version tracking value, used for edit collision detection.",
          "type": "string"
        },
        "groupId": {
          "description": "ID of the group for a dashboard. For team-scoped dashboards, this is the unique identifier for the team associated with the dashboard. For project-scoped dashboards this property is empty.",
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "description": "ID of the Dashboard. Provided by service at creation time.",
          "type": "string",
          "format": "uuid"
        },
        "lastAccessedDate": {
          "description": "Dashboard Last Accessed Date.",
          "type": "string",
          "format": "date-time"
        },
        "modifiedBy": {
          "description": "Id of the person who modified Dashboard.",
          "type": "string",
          "format": "uuid"
        },
        "modifiedDate": {
          "description": "Dashboard's last modified date.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Name of the Dashboard.",
          "type": "string"
        },
        "ownerId": {
          "description": "ID of the owner for a dashboard. For team-scoped dashboards, this is the unique identifier for the team associated with the dashboard. For project-scoped dashboards, this is the unique identifier for the user identity associated with the dashboard.",
          "type": "string",
          "format": "uuid"
        },
        "position": {
          "description": "Position of the dashboard, within a dashboard group. If unset at creation time, position is decided by the service.",
          "type": "integer",
          "format": "int32"
        },
        "refreshInterval": {
          "description": "Interval for client to automatically refresh the dashboard. Expressed in minutes.",
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        },
        "widgets": {
          "description": "The set of Widgets on the dashboard.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Widget"
          }
        }
      }
    },
    "DashboardGroup": {
      "description": "Describes a list of dashboards associated to an owner. Currently, teams own dashboard groups.",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "dashboardEntries": {
          "description": "A list of Dashboards held by the Dashboard Group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DashboardGroupEntry"
          }
        },
        "permission": {
          "description": "Deprecated: The old permission model describing the level of permissions for the current team. Pre-M125.",
          "enum": [
            "none",
            "edit",
            "manage",
            "managePermissions"
          ],
          "x-ms-enum": {
            "name": "GroupMemberPermission",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "edit",
                "description": ""
              },
              {
                "value": "manage",
                "description": ""
              },
              {
                "value": "managePermissions",
                "description": ""
              }
            ]
          }
        },
        "teamDashboardPermission": {
          "description": "A permissions bit mask describing the security permissions of the current team for dashboards. When this permission is the value None, use GroupMemberPermission. Permissions are evaluated based on the presence of a value other than None, else the GroupMemberPermission will be saved.",
          "enum": [
            "none",
            "read",
            "create",
            "edit",
            "delete",
            "managePermissions"
          ],
          "x-ms-enum": {
            "name": "TeamDashboardPermission",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "read",
                "description": ""
              },
              {
                "value": "create",
                "description": ""
              },
              {
                "value": "edit",
                "description": ""
              },
              {
                "value": "delete",
                "description": ""
              },
              {
                "value": "managePermissions",
                "description": ""
              }
            ]
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "DashboardGroupEntry": {
      "description": "Dashboard group entry, wrapping around Dashboard (needed?)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dashboard"
        }
      ],
      "properties": {}
    },
    "DashboardGroupEntryResponse": {
      "description": "Response from RestAPI when saving and editing DashboardGroupEntry",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DashboardGroupEntry"
        }
      ],
      "properties": {}
    },
    "DashboardResponse": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DashboardGroupEntry"
        }
      ],
      "properties": {}
    },
    "LightboxOptions": {
      "description": "Lightbox configuration",
      "type": "object",
      "properties": {
        "height": {
          "description": "Height of desired lightbox, in pixels",
          "type": "integer",
          "format": "int32"
        },
        "resizable": {
          "description": "True to allow lightbox resizing, false to disallow lightbox resizing, defaults to false.",
          "type": "boolean"
        },
        "width": {
          "description": "Width of desired lightbox, in pixels",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "SemanticVersion": {
      "description": "versioning for an artifact as described at: http://semver.org/, of the form major.minor.patch.",
      "type": "object",
      "properties": {
        "major": {
          "description": "Major version when you make incompatible API changes",
          "type": "integer",
          "format": "int32"
        },
        "minor": {
          "description": "Minor version when you add functionality in a backwards-compatible manner",
          "type": "integer",
          "format": "int32"
        },
        "patch": {
          "description": "Patch version when you make backwards-compatible bug fixes",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TeamContext": {
      "description": "The Team Context for an operation.",
      "type": "object",
      "properties": {
        "project": {
          "description": "The team project Id or name.  Ignored if ProjectId is set.",
          "type": "string"
        },
        "projectId": {
          "description": "The Team Project ID.  Required if Project is not set.",
          "type": "string",
          "format": "uuid"
        },
        "team": {
          "description": "The Team Id or name.  Ignored if TeamId is set.",
          "type": "string"
        },
        "teamId": {
          "description": "The Team Id",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialize collections as a single JSON object on the wire.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "description": "The serialized item.",
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "description": "The number of serialized items.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Widget": {
      "description": "Widget data",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "allowedSizes": {
          "description": "Refers to the allowed sizes for the widget. This gets populated when user wants to configure the widget",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WidgetSize"
          }
        },
        "areSettingsBlockedForUser": {
          "description": "Read-Only Property from Dashboard Service. Indicates if settings are blocked for the current user.",
          "type": "boolean"
        },
        "artifactId": {
          "description": "Refers to unique identifier of a feature artifact. Used for pinning+unpinning a specific artifact.",
          "type": "string"
        },
        "configurationContributionId": {
          "type": "string"
        },
        "configurationContributionRelativeId": {
          "type": "string"
        },
        "contentUri": {
          "type": "string"
        },
        "contributionId": {
          "description": "The id of the underlying contribution defining the supplied Widget Configuration.",
          "type": "string"
        },
        "dashboard": {
          "description": "Optional partial dashboard content, to support exchanging dashboard-level version ETag for widget-level APIs",
          "$ref": "#/definitions/Dashboard"
        },
        "eTag": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isNameConfigurable": {
          "type": "boolean"
        },
        "lightboxOptions": {
          "$ref": "#/definitions/LightboxOptions"
        },
        "loadingImageUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "$ref": "#/definitions/WidgetPosition"
        },
        "settings": {
          "type": "string"
        },
        "settingsVersion": {
          "$ref": "#/definitions/SemanticVersion"
        },
        "size": {
          "$ref": "#/definitions/WidgetSize"
        },
        "typeId": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "WidgetMetadata": {
      "description": "Contribution based information describing Dashboard Widgets.",
      "type": "object",
      "properties": {
        "allowedSizes": {
          "description": "Sizes supported by the Widget.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WidgetSize"
          }
        },
        "analyticsServiceRequired": {
          "description": "Opt-in boolean that indicates if the widget requires the Analytics Service to function. Widgets requiring the analytics service are hidden from the catalog if the Analytics Service is not available.",
          "type": "boolean"
        },
        "catalogIconUrl": {
          "description": "Resource for an icon in the widget catalog.",
          "type": "string"
        },
        "catalogInfoUrl": {
          "description": "Opt-in URL string pointing at widget information. Defaults to extension marketplace URL if omitted",
          "type": "string"
        },
        "configurationContributionId": {
          "description": "The id of the underlying contribution defining the supplied Widget custom configuration UI. Null if custom configuration UI is not available.",
          "type": "string"
        },
        "configurationContributionRelativeId": {
          "description": "The relative id of the underlying contribution defining the supplied Widget custom configuration UI. Null if custom configuration UI is not available.",
          "type": "string"
        },
        "configurationRequired": {
          "description": "Indicates if the widget requires configuration before being added to dashboard.",
          "type": "boolean"
        },
        "contentUri": {
          "description": "Uri for the widget content to be loaded from .",
          "type": "string"
        },
        "contributionId": {
          "description": "The id of the underlying contribution defining the supplied Widget.",
          "type": "string"
        },
        "defaultSettings": {
          "description": "Optional default settings to be copied into widget settings.",
          "type": "string"
        },
        "description": {
          "description": "Summary information describing the widget.",
          "type": "string"
        },
        "isEnabled": {
          "description": "Widgets can be disabled by the app store.  We'll need to gracefully handle for: - persistence (Allow) - Requests (Tag as disabled, and provide context)",
          "type": "boolean"
        },
        "isNameConfigurable": {
          "description": "Opt-out boolean that indicates if the widget supports widget name/title configuration. Widgets ignoring the name should set it to false in the manifest.",
          "type": "boolean"
        },
        "isVisibleFromCatalog": {
          "description": "Opt-out boolean indicating if the widget is hidden from the catalog. Commonly, this is used to allow developers to disable creation of a deprecated widget. A widget must have a functional default state, or have a configuration experience, in order to be visible from the catalog.",
          "type": "boolean"
        },
        "keywords": {
          "description": "Keywords associated with this widget, non-filterable and invisible",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lightboxOptions": {
          "description": "Opt-in properties for customizing widget presentation in a \"lightbox\" dialog.",
          "$ref": "#/definitions/LightboxOptions"
        },
        "loadingImageUrl": {
          "description": "Resource for a loading placeholder image on dashboard",
          "type": "string"
        },
        "name": {
          "description": "User facing name of the widget type. Each widget must use a unique value here.",
          "type": "string"
        },
        "publisherName": {
          "description": "Publisher Name of this kind of widget.",
          "type": "string"
        },
        "supportedScopes": {
          "description": "Data contract required for the widget to function and to work in its container.",
          "type": "array",
          "items": {
            "enum": [
              "collection_User",
              "project_Team"
            ],
            "x-ms-enum": {
              "name": "WidgetScope",
              "values": [
                {
                  "value": "collection_User",
                  "description": ""
                },
                {
                  "value": "project_Team",
                  "description": ""
                }
              ]
            }
          }
        },
        "tags": {
          "description": "Tags associated with this widget, visible on each widget and filterable.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targets": {
          "description": "Contribution target IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "typeId": {
          "description": "Deprecated: locally unique developer-facing id of this kind of widget. ContributionId provides a globally unique identifier for widget types.",
          "type": "string"
        }
      }
    },
    "WidgetMetadataResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        },
        "widgetMetadata": {
          "$ref": "#/definitions/WidgetMetadata"
        }
      }
    },
    "WidgetPosition": {
      "description": "",
      "type": "object",
      "properties": {
        "column": {
          "type": "integer",
          "format": "int32"
        },
        "row": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WidgetResponse": {
      "description": "Response from RestAPI when saving and editing Widget",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Widget"
        }
      ],
      "properties": {}
    },
    "WidgetSize": {
      "description": "",
      "type": "object",
      "properties": {
        "columnSpan": {
          "description": "The Width of the widget, expressed in dashboard grid columns.",
          "type": "integer",
          "format": "int32"
        },
        "rowSpan": {
          "description": "The height of the widget, expressed in dashboard grid rows.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WidgetsVersionedList": {
      "description": "Wrapper class to support HTTP header generation using CreateResponse, ClientHeaderParameter and ClientResponseType in WidgetV2Controller",
      "type": "object",
      "properties": {
        "eTag": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "widgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Widget"
          }
        }
      }
    },
    "WidgetTypesResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "uri": {
          "type": "string"
        },
        "widgetTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WidgetMetadata"
          }
        }
      }
    }
  },
  "parameters": {
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.2": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1-preview.2' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.3": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1-preview.3' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.dashboards": "Grants the ability to read team dashboard information",
        "vso.dashboards_manage": "Grants the ability to manage team dashboard information"
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "https://{instance}",
    "parameters": [
      {
        "name": "instance",
        "description": "TFS server name ({server:port})",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  }
}