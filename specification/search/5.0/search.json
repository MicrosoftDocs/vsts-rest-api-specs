{
  "swagger": "2.0",
  "info": {
    "title": "Search",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "5.0-preview"
  },
  "host": "almsearch.dev.azure.com",
  "x-ms-vss-area": "Search",
  "basePath": "/",
  "tags": [
    {
      "name": "Code Search Results",
      "description": "Rest api for code search."
    },
    {
      "name": "Wiki Search Results",
      "description": "REST API controller for wiki search."
    },
    {
      "name": "Work Item Search Results",
      "description": "Rest api for work item search."
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{organization}/{project}/_apis/search/codesearchresults": {
      "post": {
        "tags": [
          "Code Search Results"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "codeSearchResults",
        "x-ms-vss-method": "FetchCodeSearchResults",
        "x-ms-preview": true,
        "description": "Provides a set of results for the search text.",
        "operationId": "Fetch Code Search Results",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Code Search Request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeSearchRequest"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CodeSearchResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/codeSearchResults/POST__CodeSearchResults.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/search/wikisearchresults": {
      "post": {
        "tags": [
          "Wiki Search Results"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "wikiSearchResults",
        "x-ms-vss-method": "FetchWikiSearchResults",
        "x-ms-preview": true,
        "description": "Provides a set of results for the search request.",
        "operationId": "Fetch Wiki Search Results",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Wiki Search Request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WikiSearchRequest"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WikiSearchResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.wiki"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/wikiSearchResults/POST__WikiSearchResults.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/search/workitemsearchresults": {
      "post": {
        "tags": [
          "Work Item Search Results"
        ],
        "x-ms-docs-override-version": "5.0-preview.1",
        "x-ms-vss-resource": "workItemSearchResults",
        "x-ms-vss-method": "FetchWorkItemSearchResults",
        "x-ms-preview": true,
        "description": "Provides a set of results for the search text.",
        "operationId": "Fetch Work Item Search Results",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Work Item Search Request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemSearchRequest"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemSearchResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/workItemSearchResults/POST__WorkItemSearchResults.json"
          }
        }
      }
    }
  },
  "definitions": {
    "CodeResult": {
      "description": "Defines the code result containing information of the searched files and its metadata.",
      "type": "object",
      "properties": {
        "collection": {
          "description": "Collection of the result file.",
          "$ref": "#/definitions/Collection"
        },
        "contentId": {
          "description": "ContentId of the result file.",
          "type": "string"
        },
        "fileName": {
          "description": "Name of the result file.",
          "type": "string"
        },
        "matches": {
          "description": "Dictionary of field to hit offsets in the result file. Key identifies the area in which hits were found, for ex: file content/file name etc.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Hit"
            }
          }
        },
        "path": {
          "description": "Path at which result file is present.",
          "type": "string"
        },
        "project": {
          "description": "Project of the result file.",
          "$ref": "#/definitions/Project"
        },
        "repository": {
          "description": "Repository of the result file.",
          "$ref": "#/definitions/Repository"
        },
        "versions": {
          "description": "Versions of the result file.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Version"
          }
        }
      }
    },
    "CodeSearchRequest": {
      "description": "Defines a code search request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchRequest"
        }
      ],
      "properties": {}
    },
    "CodeSearchResponse": {
      "description": "Defines a code search response item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchResponse"
        }
      ],
      "properties": {
        "count": {
          "description": "Total number of matched files.",
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "description": "List of matched files.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeResult"
          }
        }
      }
    },
    "Collection": {
      "description": "Defines the details of the collection.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the collection.",
          "type": "string"
        }
      }
    },
    "EntitySearchRequest": {
      "description": "Base contract for search request types without scroll support.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchRequestBase"
        }
      ],
      "properties": {
        "$orderBy": {
          "description": "Options for sorting search results. If set to null, the results will be returned sorted by relevance. If more than one sort option is provided, the results are sorted in the order specified in the OrderBy.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortOption"
          }
        },
        "$skip": {
          "description": "Number of results to be skipped.",
          "type": "integer",
          "format": "int32"
        },
        "$top": {
          "description": "Number of results to be returned.",
          "type": "integer",
          "format": "int32"
        },
        "includeFacets": {
          "description": "Flag to opt for faceting in the result. Default behavior is false.",
          "type": "boolean"
        }
      }
    },
    "EntitySearchRequestBase": {
      "description": "Base class for search request types.",
      "type": "object",
      "properties": {
        "filters": {
          "description": "Filters to be applied. Set it to null if there are no filters to be applied.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "searchText": {
          "description": "The search text.",
          "type": "string"
        }
      }
    },
    "EntitySearchResponse": {
      "description": "Defines the base contract for search response.",
      "type": "object",
      "properties": {
        "facets": {
          "description": "A dictionary storing an array of <code>Filter</code> object against each facet.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Filter"
            }
          }
        },
        "infoCode": {
          "description": "Numeric code indicating any additional information: 0 - Ok, 1 - Account is being reindexed, 2 - Account indexing has not started, 3 - Invalid Request, 4 - Prefix wildcard query not supported, 5 - MultiWords with code facet not supported, 6 - Account is being onboarded, 7 - Account is being onboarded or reindexed, 8 - Top value trimmed to maxresult allowed 9 - Branches are being indexed, 10 - Faceting not enabled, 11 - Work items not accessible, 19 - Phrase queries with code type filters not supported, 20 - Wildcard queries with code type filters not supported. Any other info code is used for internal purpose.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Filter": {
      "description": "Describes a filter bucket item representing the total matches of search result, name and id.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the filter bucket.",
          "type": "string"
        },
        "name": {
          "description": "Name of the filter bucket.",
          "type": "string"
        },
        "resultCount": {
          "description": "Count of matches in the filter bucket.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Hit": {
      "description": "Describes the position of a piece of text in a document.",
      "type": "object",
      "properties": {
        "charOffset": {
          "description": "Gets or sets the start character offset of a piece of text.",
          "type": "integer",
          "format": "int32"
        },
        "length": {
          "description": "Gets or sets the length of a piece of text.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Project": {
      "description": "Defines the details of the project.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the project.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Name of the project.",
          "type": "string"
        }
      }
    },
    "ProjectReference": {
      "description": "Defines the details of the project.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the project.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Name of the project.",
          "type": "string"
        },
        "visibility": {
          "description": "Visibility of the project.",
          "type": "string"
        }
      }
    },
    "Repository": {
      "description": "Defines the details of the repository.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the repository.",
          "type": "string"
        },
        "name": {
          "description": "Name of the repository.",
          "type": "string"
        },
        "type": {
          "description": "Version control type of the result file.",
          "enum": [
            "git",
            "tfvc",
            "custom"
          ],
          "x-ms-enum": {
            "name": "VersionControlType",
            "values": [
              {
                "value": "git",
                "description": ""
              },
              {
                "value": "tfvc",
                "description": ""
              },
              {
                "value": "custom",
                "description": "For internal use."
              }
            ]
          }
        }
      }
    },
    "SortOption": {
      "description": "Defines how to sort the result.",
      "type": "object",
      "properties": {
        "field": {
          "description": "Field name on which sorting should be done.",
          "type": "string"
        },
        "sortOrder": {
          "description": "Order (ASC/DESC) in which the results should be sorted.",
          "type": "string"
        }
      }
    },
    "Version": {
      "description": "Describes the details pertaining to a version of the result file.",
      "type": "object",
      "properties": {
        "branchName": {
          "description": "Name of the branch.",
          "type": "string"
        },
        "changeId": {
          "description": "ChangeId in the given branch associated with this match.",
          "type": "string"
        }
      }
    },
    "Wiki": {
      "description": "Defines the details of wiki.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the wiki.",
          "type": "string"
        },
        "mappedPath": {
          "description": "Mapped path for the wiki.",
          "type": "string"
        },
        "name": {
          "description": "Name of the wiki.",
          "type": "string"
        },
        "version": {
          "description": "Version for wiki.",
          "type": "string"
        }
      }
    },
    "WikiHit": {
      "description": "Defines the matched terms in the field of the wiki result.",
      "type": "object",
      "properties": {
        "fieldReferenceName": {
          "description": "Reference name of the highlighted field.",
          "type": "string"
        },
        "highlights": {
          "description": "Matched/highlighted snippets of the field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WikiResult": {
      "description": "Defines the wiki result that matched a wiki search request.",
      "type": "object",
      "properties": {
        "collection": {
          "description": "Collection of the result file.",
          "$ref": "#/definitions/Collection"
        },
        "contentId": {
          "description": "ContentId of the result file.",
          "type": "string"
        },
        "fileName": {
          "description": "Name of the result file.",
          "type": "string"
        },
        "hits": {
          "description": "Highlighted snippets of fields that match the search request. The list is sorted by relevance of the snippets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WikiHit"
          }
        },
        "path": {
          "description": "Path at which result file is present.",
          "type": "string"
        },
        "project": {
          "description": "Project details of the wiki document.",
          "$ref": "#/definitions/ProjectReference"
        },
        "wiki": {
          "description": "Wiki information for the result.",
          "$ref": "#/definitions/Wiki"
        }
      }
    },
    "WikiSearchRequest": {
      "description": "Defines a wiki search request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchRequest"
        }
      ],
      "properties": {}
    },
    "WikiSearchResponse": {
      "description": "Defines a wiki search response item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchResponse"
        }
      ],
      "properties": {
        "count": {
          "description": "Total number of matched wiki documents.",
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "description": "List of top matched wiki documents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WikiResult"
          }
        }
      }
    },
    "WorkItemHit": {
      "description": "Defines the matched terms in the field of the work item result.",
      "type": "object",
      "properties": {
        "fieldReferenceName": {
          "description": "Reference name of the highlighted field.",
          "type": "string"
        },
        "highlights": {
          "description": "Matched/highlighted snippets of the field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WorkItemResult": {
      "description": "Defines the work item result that matched a work item search request.",
      "type": "object",
      "properties": {
        "fields": {
          "description": "A standard set of work item fields and their values.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "hits": {
          "description": "Highlighted snippets of fields that match the search request. The list is sorted by relevance of the snippets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemHit"
          }
        },
        "project": {
          "description": "Project details of the work item.",
          "$ref": "#/definitions/Project"
        },
        "url": {
          "description": "Reference to the work item.",
          "type": "string"
        }
      }
    },
    "WorkItemSearchRequest": {
      "description": "Defines a work item search request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchRequest"
        }
      ],
      "properties": {}
    },
    "WorkItemSearchResponse": {
      "description": "Defines a response item that is returned for a work item search request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchResponse"
        }
      ],
      "properties": {
        "count": {
          "description": "Total number of matched work items.",
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "description": "List of top matched work items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemResult"
          }
        }
      }
    }
  },
  "parameters": {
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '5.0-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.code": "Grants the ability to read source code and metadata about commits, changesets, branches, and other version control artifacts. Also grants the ability to search code and get notified about version control events via service hooks.",
        "vso.work": "Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries, search work items and to receive notifications about work item events via service hooks.",
        "vso.wiki": "Grants the ability to read wikis, wiki pages and wiki attachments. Also grants the ability to search wiki pages."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  }
}