{
  "swagger": "2.0",
  "info": {
    "title": "Search",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "7.1"
  },
  "host": "https://fabrikam-fiber-inc:8080/DefaultCollection",
  "x-ms-vss-area": "Search",
  "x-ms-vss-resource-area-id": "ea48a0a1-269c-42d8-b8ad-ddc8fcdcf578",
  "basePath": "/",
  "tags": [
    {
      "name": "Code Search Results",
      "description": "Rest api for code search."
    },
    {
      "name": "Package Search Results",
      "description": "REST API for package search."
    },
    {
      "name": "Repositories",
      "description": "REST API controller for Repository Status."
    },
    {
      "name": "Tfvc",
      "description": "REST API controller for TFVC Repository Status."
    },
    {
      "name": "Wiki Search Results",
      "description": "REST API controller for wiki search."
    },
    {
      "name": "Work Item Search Results",
      "description": "Rest api for work item search."
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{collection}/_apis/search/packagesearchresults": {
      "post": {
        "tags": [
          "Package Search Results"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "packageSearchResults",
        "x-ms-vss-method": "FetchPackageSearchResults",
        "description": "Provides a set of results for the search text.",
        "operationId": "Package Search Results_Fetch Package Search Results",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Package Search Request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackageSearchRequest"
            }
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PackageSearchResponseContent"
            },
            "headers": {
              "ActivityId": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.packaging"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/packageSearchResults/POST__PackageSearchResults-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/search/codesearchresults": {
      "post": {
        "tags": [
          "Code Search Results"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "codeSearchResults",
        "x-ms-vss-method": "FetchCodeSearchResults",
        "description": "Provides a set of results for the search text.",
        "operationId": "Code Search Results_Fetch Code Search Results",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Code Search Request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeSearchRequest"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CodeSearchResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/codeSearchResults/POST__CodeSearchResults-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/search/status/repositories/{repository}": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "repositories",
        "x-ms-vss-method": "GetRepositoryStatus",
        "description": "Provides status of Repository.",
        "operationId": "Repositories_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "repository",
            "description": "Repository ID or repository name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RepositoryStatusResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/{collection}/{project}/_apis/search/status/tfvc": {
      "get": {
        "tags": [
          "Tfvc"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "tfvc",
        "x-ms-vss-method": "GetTfvcRepositoryStatus",
        "description": "Provides status of TFVC Repository.",
        "operationId": "Tfvc_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TfvcRepositoryStatusResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/{collection}/{project}/_apis/search/wikisearchresults": {
      "post": {
        "tags": [
          "Wiki Search Results"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "wikiSearchResults",
        "x-ms-vss-method": "FetchWikiSearchResults",
        "description": "Provides a set of results for the search request.",
        "operationId": "Wiki Search Results_Fetch Wiki Search Results",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Wiki Search Request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WikiSearchRequest"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WikiSearchResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.wiki"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/wikiSearchResults/POST__WikiSearchResults-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/search/workitemsearchresults": {
      "post": {
        "tags": [
          "Work Item Search Results"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "workItemSearchResults",
        "x-ms-vss-method": "FetchWorkItemSearchResults",
        "description": "Provides a set of results for the search text.",
        "operationId": "Work Item Search Results_Fetch Work Item Search Results",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Work Item Search Request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemSearchRequest"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemSearchResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/workItemSearchResults/POST__WorkItemSearchResults-onprem.json"
          }
        }
      }
    }
  },
  "definitions": {
    "BoardResult": {
      "description": "Defines the Board result that matched a Board search request.",
      "type": "object",
      "properties": {
        "boardtype": {
          "description": "Board Type of the board document.",
          "type": "string"
        },
        "collection": {
          "description": "Collection details of the baord document.",
          "$ref": "#/definitions/Collection"
        },
        "project": {
          "description": "Project details of the board document.",
          "$ref": "#/definitions/Project"
        },
        "team": {
          "description": "Team details of the board document.",
          "$ref": "#/definitions/Team"
        }
      }
    },
    "BoardSearchRequest": {
      "description": "Defines a Board search request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchRequest"
        }
      ],
      "properties": {}
    },
    "BoardSearchResponse": {
      "description": "Defines a Board search response item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchResponse"
        }
      ],
      "properties": {
        "count": {
          "description": "Total number of matched Board documents.",
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "description": "List of top matched Board documents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoardResult"
          }
        }
      }
    },
    "BranchInfo": {
      "description": "Information about the configured branch.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the indexed branch",
          "type": "string"
        }
      }
    },
    "CodeResult": {
      "description": "Defines the code result containing information of the searched files and its metadata.",
      "type": "object",
      "properties": {
        "collection": {
          "description": "Collection of the result file.",
          "$ref": "#/definitions/Collection"
        },
        "contentId": {
          "description": "ContentId of the result file.",
          "type": "string"
        },
        "fileName": {
          "description": "Name of the result file.",
          "type": "string"
        },
        "matches": {
          "description": "Dictionary of field to hit offsets in the result file. Key identifies the area in which hits were found, for ex: file content/file name etc.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Hit"
            }
          }
        },
        "path": {
          "description": "Path at which result file is present.",
          "type": "string"
        },
        "project": {
          "description": "Project of the result file.",
          "$ref": "#/definitions/Project"
        },
        "repository": {
          "description": "Repository of the result file.",
          "$ref": "#/definitions/Repository"
        },
        "versions": {
          "description": "Versions of the result file.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Version"
          }
        }
      }
    },
    "CodeSearchRequest": {
      "description": "Defines a code search request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchRequest"
        }
      ],
      "properties": {
        "includeSnippet": {
          "description": "Flag to opt for including matched code snippet in the result. Default behavior is false.",
          "type": "boolean"
        }
      }
    },
    "CodeSearchResponse": {
      "description": "Defines a code search response item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchResponse"
        }
      ],
      "properties": {
        "count": {
          "description": "Total number of matched files.",
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "description": "List of matched files.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeResult"
          }
        }
      }
    },
    "Collection": {
      "description": "Defines the details of the collection.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the collection.",
          "type": "string"
        }
      }
    },
    "CustomRepositoryBranchStatusResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "lastIndexedChangeId": {
          "type": "integer",
          "format": "int64"
        },
        "lastIndexedChangeIdChangeTime": {
          "type": "string",
          "format": "date-time"
        },
        "latestChangeId": {
          "type": "integer",
          "format": "int64"
        },
        "latestChangeIdChangeTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CustomRepositoryStatusResponse": {
      "description": "Defines the custom repository status.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Repository Id.",
          "type": "string",
          "format": "uuid"
        },
        "indexedTopLevelFolders": {
          "description": "List of indexed top level folders info.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DepotInfo"
          }
        },
        "name": {
          "description": "Repository Name.",
          "type": "string"
        }
      }
    },
    "DepotInfo": {
      "description": "Information about the custom repository indexing freshness for configured branches and depots.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the indexed top level folder (depot).",
          "type": "string"
        }
      }
    },
    "EntitySearchRequest": {
      "description": "Base contract for search request types without scroll support.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchRequestBase"
        }
      ],
      "properties": {
        "$orderBy": {
          "description": "Options for sorting search results. If set to null, the results will be returned sorted by relevance. If more than one sort option is provided, the results are sorted in the order specified in the OrderBy.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortOption"
          }
        },
        "$skip": {
          "description": "Number of results to be skipped.",
          "type": "integer",
          "format": "int32"
        },
        "$top": {
          "description": "Number of results to be returned.",
          "type": "integer",
          "format": "int32"
        },
        "includeFacets": {
          "description": "Flag to opt for faceting in the result. Default behavior is false.",
          "type": "boolean"
        }
      }
    },
    "EntitySearchRequestBase": {
      "description": "Base class for search request types.",
      "type": "object",
      "properties": {
        "filters": {
          "description": "Filters to be applied. Set it to null if there are no filters to be applied.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "searchText": {
          "description": "The search text.",
          "type": "string"
        }
      }
    },
    "EntitySearchResponse": {
      "description": "Defines the base contract for search response.",
      "type": "object",
      "properties": {
        "facets": {
          "description": "A dictionary storing an array of <code>Filter</code> object against each facet.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Filter"
            }
          }
        },
        "infoCode": {
          "description": "Numeric code indicating any additional information: 0 - Ok, 1 - Account is being reindexed, 2 - Account indexing has not started, 3 - Invalid Request, 4 - Prefix wildcard query not supported, 5 - MultiWords with code facet not supported, 6 - Account is being onboarded, 7 - Account is being onboarded or reindexed, 8 - Top value trimmed to maxresult allowed 9 - Branches are being indexed, 10 - Faceting not enabled, 11 - Work items not accessible, 19 - Phrase queries with code type filters not supported, 20 - Wildcard queries with code type filters not supported. Any other info code is used for internal purpose.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FeedInfo": {
      "description": "Defines the details of a feed.",
      "type": "object",
      "properties": {
        "collectionId": {
          "description": "Id of the collection.",
          "type": "string"
        },
        "collectionName": {
          "description": "Name of the collection.",
          "type": "string"
        },
        "feedId": {
          "description": "Id of the feed.",
          "type": "string"
        },
        "feedName": {
          "description": "Name of the feed.",
          "type": "string"
        },
        "latestMatchedVersion": {
          "description": "Latest matched version of package in this Feed.",
          "type": "string"
        },
        "latestVersion": {
          "description": "Latest version of package in this Feed.",
          "type": "string"
        },
        "packageUrl": {
          "description": "Url of package in this Feed.",
          "type": "string"
        },
        "views": {
          "description": "List of views which contain the matched package.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Filter": {
      "description": "Describes a filter bucket item representing the total matches of search result, name and id.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the filter bucket.",
          "type": "string"
        },
        "name": {
          "description": "Name of the filter bucket.",
          "type": "string"
        },
        "resultCount": {
          "description": "Count of matches in the filter bucket.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Hit": {
      "description": "Describes the position of a piece of text in a document.",
      "type": "object",
      "properties": {
        "charOffset": {
          "description": "Gets or sets the start character offset of a piece of text.",
          "type": "integer",
          "format": "int32"
        },
        "codeSnippet": {
          "description": "Gets or sets an extract of code where the match appears. Usually it is the line where there is the match.",
          "type": "string"
        },
        "column": {
          "description": "Gets or sets the column number where the match appears in the line.",
          "type": "integer",
          "format": "int32"
        },
        "length": {
          "description": "Gets or sets the length of a piece of text.",
          "type": "integer",
          "format": "int32"
        },
        "line": {
          "description": "Gets or sets the line number where the match appears in the file.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Gets or sets the name of type of a piece of text.",
          "type": "string"
        }
      }
    },
    "PackageHit": {
      "description": "Defines the matched terms in the field of the package result.",
      "type": "object",
      "properties": {
        "fieldReferenceName": {
          "description": "Reference name of the highlighted field.",
          "type": "string"
        },
        "highlights": {
          "description": "Matched/highlighted snippets of the field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PackageResult": {
      "description": "Defines the package result that matched a package search request.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the package.",
          "type": "string"
        },
        "feeds": {
          "description": "List of feeds which contain the matching package.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeedInfo"
          }
        },
        "hits": {
          "description": "List of highlighted fields for the match.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackageHit"
          }
        },
        "id": {
          "description": "Id of the package.",
          "type": "string"
        },
        "name": {
          "description": "Name of the package.",
          "type": "string"
        },
        "protocolType": {
          "description": "Type of the package.",
          "type": "string"
        }
      }
    },
    "PackageSearchRequest": {
      "description": "Defines a package search request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchRequest"
        }
      ],
      "properties": {}
    },
    "PackageSearchResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "activityId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "content": {
          "$ref": "#/definitions/PackageSearchResponseContent"
        }
      }
    },
    "PackageSearchResponseContent": {
      "description": "Defines a response item that is returned for a package search request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchResponse"
        }
      ],
      "properties": {
        "count": {
          "description": "Total number of matched packages.",
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "description": "List of matched packages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackageResult"
          }
        }
      }
    },
    "Project": {
      "description": "Defines the details of the project.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the project.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Name of the project.",
          "type": "string"
        }
      }
    },
    "ProjectReference": {
      "description": "Defines the details of the project.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the project.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Name of the project.",
          "type": "string"
        },
        "visibility": {
          "description": "Visibility of the project.",
          "type": "string"
        }
      }
    },
    "Repository": {
      "description": "Defines the details of the repository.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the repository.",
          "type": "string"
        },
        "name": {
          "description": "Name of the repository.",
          "type": "string"
        },
        "type": {
          "description": "Version control type of the result file.",
          "enum": [
            "git",
            "tfvc",
            "custom"
          ],
          "x-ms-enum": {
            "name": "VersionControlType",
            "values": [
              {
                "value": "git",
                "description": ""
              },
              {
                "value": "tfvc",
                "description": ""
              },
              {
                "value": "custom",
                "description": "For internal use."
              }
            ]
          }
        }
      }
    },
    "RepositoryStatusResponse": {
      "description": "Defines the repository status.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Repository Id.",
          "type": "string",
          "format": "uuid"
        },
        "indexedBranches": {
          "description": "List of Indexed branches info.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BranchInfo"
          }
        },
        "name": {
          "description": "Repository Name.",
          "type": "string"
        }
      }
    },
    "ScrollSearchRequest": {
      "description": "Defines a scroll code search request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchRequestBase"
        }
      ],
      "properties": {
        "$scrollId": {
          "description": "Scroll Id for scroll search query.",
          "type": "string"
        },
        "$scrollSize": {
          "description": "Size of data to return for scroll search query. Min value is 201.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SettingResult": {
      "description": "Defines the setting result that matched a setting search request",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the settings page",
          "type": "string"
        },
        "icon": {
          "description": "Icon name of the settings page",
          "type": "string"
        },
        "routeId": {
          "description": "Contribution url route id of the corresponding settings page",
          "type": "string"
        },
        "routeParameterMapping": {
          "description": "Contribution url route parameter of the corresponding settings page",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scope": {
          "description": "Scope of the settings page, either collection, project or user",
          "enum": [
            "none",
            "collection",
            "project",
            "user"
          ],
          "x-ms-enum": {
            "name": "SearchScope",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "collection",
                "description": ""
              },
              {
                "value": "project",
                "description": ""
              },
              {
                "value": "user",
                "description": ""
              }
            ]
          }
        },
        "title": {
          "description": "Title of the settings page",
          "type": "string"
        }
      }
    },
    "SettingSearchRequest": {
      "description": "Defines a setting search request",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchRequest"
        }
      ],
      "properties": {}
    },
    "SettingSearchResponse": {
      "description": "Defines a setting search response item",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchResponse"
        }
      ],
      "properties": {
        "count": {
          "description": "Total number of matched setting documents.",
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "description": "List of top matched setting documents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SettingResult"
          }
        }
      }
    },
    "SortOption": {
      "description": "Defines how to sort the result.",
      "type": "object",
      "properties": {
        "field": {
          "description": "Field name on which sorting should be done.",
          "type": "string"
        },
        "sortOrder": {
          "description": "Order (ASC/DESC) in which the results should be sorted.",
          "type": "string"
        }
      }
    },
    "Team": {
      "description": "Defines the details of the team.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the team.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Name of the Team.",
          "type": "string"
        }
      }
    },
    "TfvcRepositoryStatusResponse": {
      "description": "Defines the TFVC repository status.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Repository Id.",
          "type": "string",
          "format": "uuid"
        },
        "indexingInformation": {
          "description": "List of Indexing Information for TFVC repository",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BranchInfo"
          }
        },
        "name": {
          "description": "Repository Name.",
          "type": "string"
        }
      }
    },
    "Version": {
      "description": "Describes the details pertaining to a version of the result file.",
      "type": "object",
      "properties": {
        "branchName": {
          "description": "Name of the branch.",
          "type": "string"
        },
        "changeId": {
          "description": "ChangeId in the given branch associated with this match.",
          "type": "string"
        }
      }
    },
    "Wiki": {
      "description": "Defines the details of wiki.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the wiki.",
          "type": "string"
        },
        "mappedPath": {
          "description": "Mapped path for the wiki.",
          "type": "string"
        },
        "name": {
          "description": "Name of the wiki.",
          "type": "string"
        },
        "version": {
          "description": "Version for wiki.",
          "type": "string"
        }
      }
    },
    "WikiHit": {
      "description": "Defines the matched terms in the field of the wiki result.",
      "type": "object",
      "properties": {
        "fieldReferenceName": {
          "description": "Reference name of the highlighted field.",
          "type": "string"
        },
        "highlights": {
          "description": "Matched/highlighted snippets of the field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WikiResult": {
      "description": "Defines the wiki result that matched a wiki search request.",
      "type": "object",
      "properties": {
        "collection": {
          "description": "Collection of the result file.",
          "$ref": "#/definitions/Collection"
        },
        "contentId": {
          "description": "ContentId of the result file.",
          "type": "string"
        },
        "fileName": {
          "description": "Name of the result file.",
          "type": "string"
        },
        "hits": {
          "description": "Highlighted snippets of fields that match the search request. The list is sorted by relevance of the snippets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WikiHit"
          }
        },
        "path": {
          "description": "Path at which result file is present.",
          "type": "string"
        },
        "project": {
          "description": "Project details of the wiki document.",
          "$ref": "#/definitions/ProjectReference"
        },
        "wiki": {
          "description": "Wiki information for the result.",
          "$ref": "#/definitions/Wiki"
        }
      }
    },
    "WikiSearchRequest": {
      "description": "Defines a wiki search request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchRequest"
        }
      ],
      "properties": {}
    },
    "WikiSearchResponse": {
      "description": "Defines a wiki search response item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchResponse"
        }
      ],
      "properties": {
        "count": {
          "description": "Total number of matched wiki documents.",
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "description": "List of top matched wiki documents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WikiResult"
          }
        }
      }
    },
    "WorkItemHit": {
      "description": "Defines the matched terms in the field of the work item result.",
      "type": "object",
      "properties": {
        "fieldReferenceName": {
          "description": "Reference name of the highlighted field.",
          "type": "string"
        },
        "highlights": {
          "description": "Matched/highlighted snippets of the field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WorkItemResult": {
      "description": "Defines the work item result that matched a work item search request.",
      "type": "object",
      "properties": {
        "fields": {
          "description": "A standard set of work item fields and their values.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "hits": {
          "description": "Highlighted snippets of fields that match the search request. The list is sorted by relevance of the snippets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemHit"
          }
        },
        "project": {
          "description": "Project details of the work item.",
          "$ref": "#/definitions/Project"
        },
        "url": {
          "description": "Reference to the work item.",
          "type": "string"
        }
      }
    },
    "WorkItemSearchRequest": {
      "description": "Defines a work item search request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchRequest"
        }
      ],
      "properties": {}
    },
    "WorkItemSearchResponse": {
      "description": "Defines a response item that is returned for a work item search request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EntitySearchResponse"
        }
      ],
      "properties": {
        "count": {
          "description": "Total number of matched work items.",
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "description": "List of top matched work items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemResult"
          }
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.code": "Grants the ability to read source code and metadata about commits, changesets, branches, and other version control artifacts. Also grants the ability to search code and get notified about version control events via service hooks.",
        "vso.work": "Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries, search work items and to receive notifications about work item events via service hooks.",
        "vso.wiki": "Grants the ability to read wikis, wiki pages and wiki attachments. Also grants the ability to search wiki pages.",
        "vso.packaging": "Grants the ability to read feeds and packages. Also grants the ability to search packages."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "https://{instance}",
    "parameters": [
      {
        "name": "instance",
        "description": "TFS server name ({server:port})",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  }
}