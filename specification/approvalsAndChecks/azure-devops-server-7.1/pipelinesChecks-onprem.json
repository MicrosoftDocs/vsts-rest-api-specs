{
  "swagger": "2.0",
  "info": {
    "title": "PipelinesChecks",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "7.1-preview"
  },
  "host": "https://fabrikam-fiber-inc:8080/DefaultCollection",
  "x-ms-vss-area": "PipelinesChecks",
  "x-ms-vss-resource-area-id": "4a933897-0488-45af-bd82-6fd3ad33f46a",
  "basePath": "/",
  "tags": [
    {
      "name": "Check Configurations"
    },
    {
      "name": "Check Evaluations"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{collection}/{project}/_apis/pipelines/checks/configurations": {
      "post": {
        "tags": [
          "Check Configurations"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "configurations",
        "x-ms-vss-method": "AddCheckConfiguration",
        "x-ms-preview": true,
        "description": "Add a check configuration",
        "operationId": "Check Configurations_Add",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckConfiguration"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CheckConfiguration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build_execute",
              "vso.pipelineresources_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "Approval": {
            "$ref": "./httpExamples/configurations/POST__AddApprovalCheckConfiguration-onprem.json"
          },
          "Task Check": {
            "$ref": "./httpExamples/configurations/POST__AddTaskCheckConfiguration-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Check Configurations"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "configurations",
        "x-ms-vss-method": "GetCheckConfigurationsOnResource",
        "x-ms-preview": true,
        "description": "Get Check configuration by resource type and id",
        "operationId": "Check Configurations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resourceType",
            "description": "resource type",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resourceId",
            "description": "resource id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "settings"
            ],
            "x-ms-enum": {
              "name": "CheckConfigurationExpandParameter",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "settings",
                  "description": ""
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckConfiguration"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/configurations/GET__CheckConfigurationsOnResource-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/pipelines/checks/configurations/{id}": {
      "delete": {
        "tags": [
          "Check Configurations"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "configurations",
        "x-ms-vss-method": "DeleteCheckConfiguration",
        "x-ms-preview": true,
        "description": "Delete check configuration by id",
        "operationId": "Check Configurations_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "check configuration id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build_execute",
              "vso.pipelineresources_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/configurations/DELETE__CheckConfiguration-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Check Configurations"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "configurations",
        "x-ms-vss-method": "GetCheckConfiguration",
        "x-ms-preview": true,
        "description": "Get Check configuration by Id",
        "operationId": "Check Configurations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "settings"
            ],
            "x-ms-enum": {
              "name": "CheckConfigurationExpandParameter",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "settings",
                  "description": ""
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CheckConfiguration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/configurations/GET__CheckConfiguration-onprem.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Check Configurations"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "configurations",
        "x-ms-vss-method": "UpdateCheckConfiguration",
        "x-ms-preview": true,
        "description": "Update check configuration",
        "operationId": "Check Configurations_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "check configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckConfiguration"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "check configuration id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CheckConfiguration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build_execute",
              "vso.pipelineresources_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/configurations/PATCH__TaskCheckConfiguration-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/pipelines/checks/queryconfigurations": {
      "post": {
        "tags": [
          "Check Configurations"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "queryconfigurations",
        "x-ms-vss-method": "QueryCheckConfigurationsOnResources",
        "x-ms-preview": true,
        "description": "Get check configurations for multiple resources by resource type and id.",
        "operationId": "Check Configurations_Query",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "List of resources.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Resource"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "The properties that should be expanded in the list of check configurations.",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "settings"
            ],
            "x-ms-enum": {
              "name": "CheckConfigurationExpandParameter",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "settings",
                  "description": ""
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckConfiguration"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/queryconfigurations/POST__QueryCheckConfigurationsOnResources-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/pipelines/checks/runs": {
      "post": {
        "tags": [
          "Check Evaluations"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "runs",
        "x-ms-vss-method": "EvaluateCheckSuite",
        "x-ms-preview": true,
        "description": "Initiate an evaluation for a check in a pipeline",
        "operationId": "Check Evaluations_Evaluate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckSuiteRequest"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "resources"
            ],
            "x-ms-enum": {
              "name": "CheckSuiteExpandParameter",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "resources",
                  "description": ""
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CheckSuite"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build_execute"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/runs/POST__EvaluateCheckSuite-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/pipelines/checks/runs/{checkSuiteId}": {
      "get": {
        "tags": [
          "Check Evaluations"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "runs",
        "x-ms-vss-method": "GetCheckSuite",
        "x-ms-preview": true,
        "description": "Get details for a specific check evaluation",
        "operationId": "Check Evaluations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "checkSuiteId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "resources"
            ],
            "x-ms-enum": {
              "name": "CheckSuiteExpandParameter",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "resources",
                  "description": ""
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CheckSuite"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/runs/GET__CheckSuite-onprem.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ApprovalCheckConfiguration": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CheckConfiguration"
        }
      ],
      "properties": {
        "settings": {
          "description": "Settings for the approval check configuration.",
          "$ref": "#/definitions/ApprovalConfigSettings"
        }
      }
    },
    "ApprovalConfig": {
      "description": "Config to create a new approval.",
      "type": "object",
      "properties": {
        "approvers": {
          "description": "Ordered list of approvers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityRef"
          }
        },
        "blockedApprovers": {
          "description": "Identities which are not allowed to approve.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityRef"
          }
        },
        "executionOrder": {
          "description": "Order in which approvers will be actionable.",
          "enum": [
            "anyOrder",
            "inSequence"
          ],
          "x-ms-enum": {
            "name": "ApprovalExecutionOrder",
            "values": [
              {
                "value": "anyOrder",
                "description": "Indicates that the approvers can approve in any order."
              },
              {
                "value": "inSequence",
                "description": "Indicates that the approvers can only approve in a sequential order(Order in which they were assigned)."
              }
            ]
          }
        },
        "instructions": {
          "description": "Instructions for the approver.",
          "type": "string"
        },
        "minRequiredApprovers": {
          "description": "Minimum number of approvers that should approve for the entire approval to be considered approved. Defaults to all.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ApprovalConfigSettings": {
      "description": "Config to create a new approval.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApprovalConfig"
        }
      ],
      "properties": {
        "requesterCannotBeApprover": {
          "description": "Determines whether check requester can approve the check.",
          "type": "boolean"
        }
      }
    },
    "CheckConfiguration": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CheckConfigurationRef"
        }
      ],
      "properties": {
        "_links": {
          "description": "Reference links.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "createdBy": {
          "description": "Identity of person who configured check.",
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "description": "Time when check got configured.",
          "type": "string",
          "format": "date-time"
        },
        "isDisabled": {
          "description": "Is check disabled.",
          "type": "boolean"
        },
        "issue": {
          "description": "Issue connected to check configuration.",
          "$ref": "#/definitions/CheckIssue"
        },
        "modifiedBy": {
          "description": "Identity of person who modified the configured check.",
          "$ref": "#/definitions/IdentityRef"
        },
        "modifiedOn": {
          "description": "Time when configured check was modified.",
          "type": "string",
          "format": "date-time"
        },
        "timeout": {
          "description": "Timeout in minutes for the check.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CheckConfigurationData": {
      "description": "",
      "type": "object",
      "properties": {
        "checkConfiguration": {
          "description": "Check configuration of the check.",
          "$ref": "#/definitions/CheckConfiguration"
        },
        "definitionRefId": {
          "description": "Definition Ref Id of the particular check.",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "CheckConfigurationRef": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "description": "Check configuration id.",
          "type": "integer",
          "format": "int32"
        },
        "resource": {
          "description": "Resource on which check get configured.",
          "$ref": "#/definitions/Resource"
        },
        "type": {
          "description": "Check configuration type",
          "$ref": "#/definitions/CheckType"
        },
        "url": {
          "description": "The URL from which one can fetch the configured check.",
          "type": "string"
        }
      }
    },
    "CheckData": {
      "description": "",
      "type": "object",
      "properties": {
        "checkConfigurationDataList": {
          "description": "List of check configuration data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckConfigurationData"
          }
        },
        "checkDefinitions": {
          "description": "List of check definitions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckDefinitionData"
          }
        },
        "defaultCheckSettings": {
          "description": "List of default check settings",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "timeZoneList": {
          "description": "List of time zones.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeZone"
          }
        }
      }
    },
    "CheckDefinitionData": {
      "description": "",
      "type": "object",
      "properties": {
        "allowMultipleConfigurations": {
          "description": "Flag to allow multiple configurations of a particular check on a resource.",
          "type": "boolean"
        },
        "checkDefinition": {
          "description": "Details about the check",
          "$ref": "#/definitions/JObject"
        },
        "definitionRefId": {
          "description": "Check DefinitionRef Id",
          "type": "string",
          "format": "uuid"
        },
        "description": {
          "description": "Description about the check",
          "type": "string"
        },
        "icon": {
          "description": "Icon for the check",
          "$ref": "#/definitions/CheckIcon"
        },
        "name": {
          "description": "Name of the check",
          "type": "string"
        },
        "uiContributionDependencies": {
          "description": "Check UI contribution Dependencies",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uiContributionType": {
          "description": "Check UI contribution Type",
          "type": "string"
        }
      }
    },
    "CheckIcon": {
      "description": "",
      "type": "object",
      "properties": {
        "assetLocation": {
          "description": "Asset Location of the icon",
          "type": "string"
        },
        "name": {
          "description": "Name of the icon",
          "type": "string"
        },
        "url": {
          "description": "Url of the icon",
          "type": "string"
        }
      }
    },
    "CheckIssue": {
      "description": "An issue (error, warning) associated with a check configuration.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Short summary of the check - its name and resource.",
          "type": "string"
        },
        "detailedMessage": {
          "description": "A more detailed description of issue.",
          "type": "string"
        },
        "message": {
          "description": "A description of issue.",
          "type": "string"
        },
        "type": {
          "description": "The type (error, warning) of the issue.",
          "enum": [
            "error",
            "warning"
          ],
          "x-ms-enum": {
            "name": "CheckIssueType",
            "values": [
              {
                "value": "error",
                "description": ""
              },
              {
                "value": "warning",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "CheckIssueData": {
      "description": "",
      "type": "object",
      "properties": {
        "defaultCheckIssueSettings": {
          "description": "List of default check issue settings",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourcesWithCheckIssuesList": {
          "description": "List of resources with check issues",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceCheckIssue"
          }
        }
      }
    },
    "CheckRun": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CheckRunResult"
        }
      ],
      "properties": {
        "checkConfigurationRef": {
          "$ref": "#/definitions/CheckConfigurationRef"
        },
        "completedDate": {
          "type": "string",
          "format": "date-time"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "CheckRunResult": {
      "description": "",
      "type": "object",
      "properties": {
        "resultMessage": {
          "type": "string"
        },
        "status": {
          "enum": [
            "none",
            "queued",
            "running",
            "approved",
            "rejected",
            "canceled",
            "timedOut",
            "failed",
            "completed",
            "all"
          ],
          "x-ms-enum": {
            "name": "CheckRunStatus",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "queued",
                "description": ""
              },
              {
                "value": "running",
                "description": ""
              },
              {
                "value": "approved",
                "description": ""
              },
              {
                "value": "rejected",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              },
              {
                "value": "timedOut",
                "description": ""
              },
              {
                "value": "failed",
                "description": ""
              },
              {
                "value": "completed",
                "description": ""
              },
              {
                "value": "all",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "CheckSuite": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CheckSuiteRef"
        }
      ],
      "properties": {
        "_links": {
          "description": "Reference links.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "checkRuns": {
          "description": "List of check runs associated with the given check suite request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckRun"
          }
        },
        "completedDate": {
          "description": "Completed date of the given check suite request",
          "type": "string",
          "format": "date-time"
        },
        "message": {
          "description": "Optional message for the given check suite request",
          "type": "string"
        },
        "status": {
          "description": "Overall check runs status for the given suite request. This is check suite status",
          "enum": [
            "none",
            "queued",
            "running",
            "approved",
            "rejected",
            "canceled",
            "timedOut",
            "failed",
            "completed",
            "all"
          ],
          "x-ms-enum": {
            "name": "CheckRunStatus",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "queued",
                "description": ""
              },
              {
                "value": "running",
                "description": ""
              },
              {
                "value": "approved",
                "description": ""
              },
              {
                "value": "rejected",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              },
              {
                "value": "timedOut",
                "description": ""
              },
              {
                "value": "failed",
                "description": ""
              },
              {
                "value": "completed",
                "description": ""
              },
              {
                "value": "all",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "CheckSuiteRef": {
      "description": "",
      "type": "object",
      "properties": {
        "context": {
          "description": "Evaluation context for the check suite request",
          "$ref": "#/definitions/JObject"
        },
        "id": {
          "description": "Unique suite id generated by the pipeline orchestrator for the pipeline check runs request on the list of resources Pipeline orchestrator will used this identifier to map the check requests on a stage",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "CheckSuiteRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/JObject"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      }
    },
    "CheckType": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets check type id.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Name of the check type.",
          "type": "string"
        }
      }
    },
    "GenericCheckConfiguration": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CheckConfiguration"
        }
      ],
      "properties": {
        "settings": {
          "description": "Settings for the generic check configuration.",
          "$ref": "#/definitions/JObject"
        }
      }
    },
    "GraphSubjectBase": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "description": "This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional relationships or more detailed information about this graph subject.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "descriptor": {
          "description": "The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Collections.",
          "type": "string"
        },
        "displayName": {
          "description": "This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.",
          "type": "string"
        },
        "url": {
          "description": "This url is the full route to the source resource of this graph subject.",
          "type": "string"
        }
      }
    },
    "IdentityRef": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GraphSubjectBase"
        }
      ],
      "properties": {
        "directoryAlias": {
          "description": "Deprecated - Can be retrieved by querying the Graph user referenced in the \"self\" entry of the IdentityRef \"_links\" dictionary",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "description": "Deprecated - Available in the \"avatar\" entry of the IdentityRef \"_links\" dictionary",
          "type": "string"
        },
        "inactive": {
          "description": "Deprecated - Can be retrieved by querying the Graph membership state referenced in the \"membershipState\" entry of the GraphUser \"_links\" dictionary",
          "type": "boolean"
        },
        "isAadIdentity": {
          "description": "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsAadUserType/Descriptor.IsAadGroupType)",
          "type": "boolean"
        },
        "isContainer": {
          "description": "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsGroupType)",
          "type": "boolean"
        },
        "isDeletedInOrigin": {
          "type": "boolean"
        },
        "profileUrl": {
          "description": "Deprecated - not in use in most preexisting implementations of ToIdentityRef",
          "type": "string"
        },
        "uniqueName": {
          "description": "Deprecated - use Domain+PrincipalName instead",
          "type": "string"
        }
      }
    },
    "JObject": {
      "description": "Represents a JSON object.",
      "type": "object",
      "properties": {
        "item": {
          "type": "string",
          "format": "JToken"
        },
        "type": {
          "description": "Gets the node type for this JToken.",
          "type": "string",
          "format": "JTokenType"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "Resource": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string"
        }
      }
    },
    "ResourceCheckIssue": {
      "description": "A check configuration issue (error, warning) associated with a resource.",
      "type": "object",
      "properties": {
        "checkIssue": {
          "description": "Check configuration related issue.",
          "$ref": "#/definitions/CheckIssue"
        },
        "resource": {
          "description": "Resource tied to a check configuration issue.",
          "$ref": "#/definitions/Resource"
        }
      }
    },
    "TaskCheckConfig": {
      "description": "Config to facilitate task check",
      "type": "object",
      "properties": {
        "definitionRef": {
          "$ref": "#/definitions/TaskCheckDefinitionReference"
        },
        "displayName": {
          "type": "string"
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "linkedVariableGroup": {
          "type": "string"
        },
        "retryInterval": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskCheckConfiguration": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CheckConfiguration"
        }
      ],
      "properties": {
        "settings": {
          "description": "Settings for the task check configuration.",
          "$ref": "#/definitions/TaskCheckConfig"
        }
      }
    },
    "TaskCheckDefinitionReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "TimeZone": {
      "description": "",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the time zone.",
          "type": "string"
        },
        "id": {
          "description": "Id of the time zone.",
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialize collections as a single JSON object on the wire.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "description": "The serialized item.",
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "description": "The number of serialized items.",
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.build_execute": "Grants the ability to access build artifacts, including build results, definitions, and requests, and the ability to queue a build, update build properties, and the ability to receive notifications about build events via service hooks.",
        "vso.pipelineresources_manage": "Grants the ability to manage a protected resource or a pipeline's request to use a protected resource: agent pool, environment, queue, repository, secure files, service connection, and variable group",
        "vso.build": "Grants the ability to access build artifacts, including build results, definitions, and requests, and the ability to receive notifications about build events via service hooks."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "https://{instance}",
    "parameters": [
      {
        "name": "instance",
        "description": "TFS server name ({server:port})",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  }
}