{
  "swagger": "2.0",
  "info": {
    "title": "PipelinePermissions",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "7.1-preview"
  },
  "host": "https://fabrikam-fiber-inc:8080/DefaultCollection",
  "x-ms-vss-area": "pipelinePermissions",
  "x-ms-vss-resource-area-id": "a81a0441-de52-4000-aa15-ff0e07bfbbaa",
  "basePath": "/",
  "tags": [
    {
      "name": "Pipeline Permissions"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{collection}/{project}/_apis/pipelines/pipelinepermissions": {
      "patch": {
        "tags": [
          "Pipeline Permissions"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "pipelinePermissions",
        "x-ms-vss-method": "UpdatePipelinePermisionsForResources",
        "x-ms-preview": true,
        "description": "Batch API to authorize/unauthorize a list of definitions for a multiple resources.",
        "operationId": "Pipeline Permissions_Update Pipeline Permisions For Resources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourcePipelinePermissions"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourcePipelinePermissions"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.pipelineresources_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/pipelinePermissions/PATCH__UpdatePipelinePermissionsForResources-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/pipelines/pipelinepermissions/{resourceType}/{resourceId}": {
      "get": {
        "tags": [
          "Pipeline Permissions"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "pipelinePermissions",
        "x-ms-vss-method": "GetPipelinePermissionsForResource",
        "x-ms-preview": true,
        "description": "Given a ResourceType and ResourceId, returns authorized definitions for that resource.",
        "operationId": "Pipeline Permissions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceType",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourcePipelinePermissions"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.build"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/pipelinePermissions/GET__GetPipelinePermissionsForResource-onprem.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Pipeline Permissions"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "pipelinePermissions",
        "x-ms-vss-method": "UpdatePipelinePermisionsForResource",
        "x-ms-preview": true,
        "description": "Authorizes/Unauthorizes a list of definitions for a given resource.",
        "operationId": "Pipeline Permissions_Update Pipeline Permisions For Resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourcePipelinePermissions"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceType",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourcePipelinePermissions"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.pipelineresources_manage"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/pipelinePermissions/PATCH__UpdatePipelinePermissionsForResource-onprem.json"
          }
        }
      }
    }
  },
  "definitions": {
    "GraphSubjectBase": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "description": "This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional relationships or more detailed information about this graph subject.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "descriptor": {
          "description": "The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Collections.",
          "type": "string"
        },
        "displayName": {
          "description": "This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.",
          "type": "string"
        },
        "url": {
          "description": "This url is the full route to the source resource of this graph subject.",
          "type": "string"
        }
      }
    },
    "IdentityRef": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GraphSubjectBase"
        }
      ],
      "properties": {
        "directoryAlias": {
          "description": "Deprecated - Can be retrieved by querying the Graph user referenced in the \"self\" entry of the IdentityRef \"_links\" dictionary",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "description": "Deprecated - Available in the \"avatar\" entry of the IdentityRef \"_links\" dictionary",
          "type": "string"
        },
        "inactive": {
          "description": "Deprecated - Can be retrieved by querying the Graph membership state referenced in the \"membershipState\" entry of the GraphUser \"_links\" dictionary",
          "type": "boolean"
        },
        "isAadIdentity": {
          "description": "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsAadUserType/Descriptor.IsAadGroupType)",
          "type": "boolean"
        },
        "isContainer": {
          "description": "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsGroupType)",
          "type": "boolean"
        },
        "isDeletedInOrigin": {
          "type": "boolean"
        },
        "profileUrl": {
          "description": "Deprecated - not in use in most preexisting implementations of ToIdentityRef",
          "type": "string"
        },
        "uniqueName": {
          "description": "Deprecated - use Domain+PrincipalName instead",
          "type": "string"
        }
      }
    },
    "Permission": {
      "description": "",
      "type": "object",
      "properties": {
        "authorized": {
          "type": "boolean"
        },
        "authorizedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "authorizedOn": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PipelinePermission": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Permission"
        }
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PipelineProcessResources": {
      "description": "",
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineResourceReference"
          }
        }
      }
    },
    "PipelineResourceReference": {
      "description": "",
      "type": "object",
      "properties": {
        "authorized": {
          "type": "boolean"
        },
        "authorizedBy": {
          "type": "string",
          "format": "uuid"
        },
        "authorizedOn": {
          "type": "string",
          "format": "date-time"
        },
        "definitionId": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "Resource": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string"
        }
      }
    },
    "ResourcePipelinePermissions": {
      "description": "",
      "type": "object",
      "properties": {
        "allPipelines": {
          "$ref": "#/definitions/Permission"
        },
        "pipelines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelinePermission"
          }
        },
        "resource": {
          "$ref": "#/definitions/Resource"
        }
      }
    }
  },
  "parameters": {
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.build": "Grants the ability to access build artifacts, including build results, definitions, and requests, and the ability to receive notifications about build events via service hooks.",
        "vso.pipelineresources_manage": "Grants the ability to manage a protected resource or a pipeline's request to use a protected resource: agent pool, environment, queue, repository, secure files, service connection, and variable group"
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "https://{instance}",
    "parameters": [
      {
        "name": "instance",
        "description": "TFS server name ({server:port})",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  }
}