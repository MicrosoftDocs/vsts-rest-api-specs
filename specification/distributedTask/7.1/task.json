{
  "swagger": "2.0",
  "info": {
    "title": "Task",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "7.1"
  },
  "host": "dev.azure.com",
  "x-ms-vss-area": "Task",
  "basePath": "/",
  "tags": [
    {
      "name": "Events"
    },
    {
      "name": "Logs"
    },
    {
      "name": "Oidctoken"
    },
    {
      "name": "Records"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/events": {
      "post": {
        "tags": [
          "Events"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "events",
        "x-ms-vss-method": "PostEvent",
        "description": "Send a pipeline job event to be processed by the execution plan.",
        "operationId": "Events_Post Event",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The event data to be processed by the plan.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobEvent"
            }
          },
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub. Common examples: \"build\", \"rm\", \"checks\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "The ID of the plan.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-ms-examples": {
          "Send a TaskCompletedEvent": {
            "$ref": "./httpExamples/events/POST_distributedtask_PostEvent_.json"
          }
        }
      }
    },
    "/{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/jobs/{jobId}/oidctoken": {
      "post": {
        "tags": [
          "Oidctoken"
        ],
        "x-ms-docs-override-version": "7.1-preview.1",
        "x-ms-vss-resource": "oidctoken",
        "x-ms-vss-method": "CreateOidcToken",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Oidctoken_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub. Common examples: \"build\", \"rm\", \"checks\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "jobId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "serviceConnectionId",
            "description": "",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskHubOidcToken"
            }
          }
        }
      }
    },
    "/{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/logs": {
      "post": {
        "tags": [
          "Logs"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "logs",
        "x-ms-vss-method": "CreateLog",
        "description": "Create a log and connect it to a pipeline run's execution plan.",
        "operationId": "Logs_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "An object that contains information about log's path.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskLog"
            }
          },
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub. Common examples: \"build\", \"rm\", \"checks\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "The ID of the plan.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskLog"
            }
          }
        },
        "x-ms-examples": {
          "Create a log": {
            "$ref": "./httpExamples/logs/POST__distributedtask_CreateLog_.json"
          }
        }
      }
    },
    "/{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/logs/{logId}": {
      "post": {
        "tags": [
          "Logs"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "logs",
        "x-ms-vss-method": "AppendLogContent",
        "description": "Append a log to a task's log. The log should be sent in the body of the request as a TaskLog object stream.",
        "operationId": "Logs_Append Log Content",
        "consumes": [
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Stream to upload",
            "required": true,
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          },
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub. Common examples: \"build\", \"rm\", \"checks\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "The ID of the plan.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "logId",
            "description": "The ID of the log.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskLog"
            }
          }
        },
        "x-ms-examples": {
          "Append content to a log": {
            "$ref": "./httpExamples/logs/POST__distributedtask_AppendLogContent_.json"
          }
        }
      }
    },
    "/{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/timelines/{timelineId}/records": {
      "patch": {
        "tags": [
          "Records"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "records",
        "x-ms-vss-method": "UpdateRecords",
        "description": "Update timeline records if they already exist, otherwise create new ones for the same timeline.",
        "operationId": "Records_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The array of timeline records to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VssJsonCollectionWrapper"
            }
          },
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub. Common examples: \"build\", \"rm\", \"checks\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "The ID of the plan.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timelineId",
            "description": "The ID of the timeline.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimelineRecord"
              }
            }
          }
        },
        "x-ms-examples": {
          "Update timeline's records": {
            "$ref": "./httpExamples/records/PATCH__distributedtask_UpdateRecords_.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Issue": {
      "description": "An issue (error, warning) associated with a pipeline run.",
      "type": "object",
      "properties": {
        "category": {
          "description": "The category of the issue. <br />Example: Code - refers to compilation errors <br />Example: General - refers to generic errors",
          "type": "string"
        },
        "data": {
          "description": "A dictionary containing details about the issue.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "description": "A description of issue.",
          "type": "string"
        },
        "type": {
          "description": "The type (error, warning) of the issue.",
          "enum": [
            "error",
            "warning"
          ],
          "x-ms-enum": {
            "name": "IssueType",
            "values": [
              {
                "value": "error",
                "description": ""
              },
              {
                "value": "warning",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "JobEvent": {
      "description": "A pipeline job event to be processed by the execution plan.",
      "type": "object",
      "properties": {
        "jobId": {
          "description": "The ID of the pipeline job affected by the event.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "The name of the pipeline job event.",
          "type": "string"
        }
      }
    },
    "JObject": {
      "description": "Represents a JSON object.",
      "type": "object",
      "properties": {
        "item": {
          "type": "string",
          "format": "JToken"
        },
        "type": {
          "description": "Gets the node type for this JToken.",
          "type": "string",
          "format": "JTokenType"
        }
      }
    },
    "JobOption": {
      "description": "Represents an option that may affect the way an agent runs the job.",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "Gets the id of the option.",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "MaskHint": {
      "description": "",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "variable",
            "regex"
          ],
          "x-ms-enum": {
            "name": "MaskType",
            "values": [
              {
                "value": "variable",
                "description": ""
              },
              {
                "value": "regex",
                "description": ""
              }
            ]
          }
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PlanEnvironment": {
      "description": "",
      "type": "object",
      "properties": {
        "mask": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaskHint"
          }
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JobOption"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ProjectReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "TaskAgentJob": {
      "description": "",
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "sidecarContainers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskAgentJobStep"
          }
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskAgentJobVariable"
          }
        }
      }
    },
    "TaskAgentJobStep": {
      "description": "",
      "type": "object",
      "properties": {
        "condition": {
          "type": "string"
        },
        "continueOnError": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "retryCountOnTaskFailure": {
          "type": "integer",
          "format": "int32"
        },
        "task": {
          "$ref": "#/definitions/TaskAgentJobTask"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "enum": [
            "task",
            "action"
          ],
          "x-ms-enum": {
            "name": "TaskAgentJobStepType",
            "values": [
              {
                "value": "task",
                "description": ""
              },
              {
                "value": "action",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "TaskAgentJobTask": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "TaskAgentJobVariable": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "secret": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "TaskAttachment": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "lastChangedBy": {
          "type": "string",
          "format": "uuid"
        },
        "lastChangedOn": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "recordId": {
          "type": "string",
          "format": "uuid"
        },
        "timelineId": {
          "type": "string",
          "format": "uuid"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "TaskHubOidcToken": {
      "description": "",
      "type": "object",
      "properties": {
        "oidcToken": {
          "type": "string"
        }
      }
    },
    "TaskLog": {
      "description": "A task log connected to a timeline record.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskLogReference"
        }
      ],
      "properties": {
        "createdOn": {
          "description": "The time of the task log creation.",
          "type": "string",
          "format": "date-time"
        },
        "indexLocation": {
          "description": "The REST URL of the task log when indexed.",
          "type": "string"
        },
        "lastChangedOn": {
          "description": "The time of the last modification of the task log.",
          "type": "string",
          "format": "date-time"
        },
        "lineCount": {
          "description": "The number of the task log lines.",
          "type": "integer",
          "format": "int64"
        },
        "path": {
          "description": "The path of the task log.",
          "type": "string"
        }
      }
    },
    "TaskLogReference": {
      "description": "A reference to a task log. This class contains information about the output printed to the timeline record's logs console during pipeline run.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the task log.",
          "type": "integer",
          "format": "int32"
        },
        "location": {
          "description": "The REST URL of the task log.",
          "type": "string"
        }
      }
    },
    "TaskOrchestrationContainer": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskOrchestrationItem"
        }
      ],
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskOrchestrationItem"
          }
        },
        "continueOnError": {
          "type": "boolean"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "maxConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "parallel": {
          "type": "boolean"
        },
        "rollback": {
          "$ref": "#/definitions/TaskOrchestrationContainer"
        }
      }
    },
    "TaskOrchestrationItem": {
      "description": "",
      "type": "object",
      "properties": {
        "itemType": {
          "enum": [
            "container",
            "job"
          ],
          "x-ms-enum": {
            "name": "TaskOrchestrationItemType",
            "values": [
              {
                "value": "container",
                "description": ""
              },
              {
                "value": "job",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "TaskOrchestrationOwner": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TaskOrchestrationPlan": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskOrchestrationPlanReference"
        }
      ],
      "properties": {
        "environment": {
          "$ref": "#/definitions/PlanEnvironment"
        },
        "expandedYaml": {
          "$ref": "#/definitions/TaskLogReference"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "implementation": {
          "$ref": "#/definitions/TaskOrchestrationContainer"
        },
        "initializationLog": {
          "$ref": "#/definitions/TaskLogReference"
        },
        "requestedById": {
          "type": "string",
          "format": "uuid"
        },
        "requestedForId": {
          "type": "string",
          "format": "uuid"
        },
        "result": {
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "TaskResult",
            "values": [
              {
                "value": "succeeded",
                "description": ""
              },
              {
                "value": "succeededWithIssues",
                "description": ""
              },
              {
                "value": "failed",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              },
              {
                "value": "skipped",
                "description": ""
              },
              {
                "value": "abandoned",
                "description": ""
              }
            ]
          }
        },
        "resultCode": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "enum": [
            "inProgress",
            "queued",
            "completed",
            "throttled"
          ],
          "x-ms-enum": {
            "name": "TaskOrchestrationPlanState",
            "values": [
              {
                "value": "inProgress",
                "description": ""
              },
              {
                "value": "queued",
                "description": ""
              },
              {
                "value": "completed",
                "description": ""
              },
              {
                "value": "throttled",
                "description": ""
              }
            ]
          }
        },
        "timeline": {
          "$ref": "#/definitions/TimelineReference"
        }
      }
    },
    "TaskOrchestrationPlanGroupsQueueMetrics": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "enum": [
            "running",
            "queued",
            "all"
          ],
          "x-ms-enum": {
            "name": "PlanGroupStatus",
            "values": [
              {
                "value": "running",
                "description": ""
              },
              {
                "value": "queued",
                "description": ""
              },
              {
                "value": "all",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "TaskOrchestrationPlanReference": {
      "description": "",
      "type": "object",
      "properties": {
        "artifactLocation": {
          "type": "string"
        },
        "artifactUri": {
          "type": "string"
        },
        "definition": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "owner": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "planGroup": {
          "type": "string"
        },
        "planId": {
          "type": "string",
          "format": "uuid"
        },
        "planType": {
          "type": "string"
        },
        "scopeIdentifier": {
          "type": "string",
          "format": "uuid"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskOrchestrationQueuedPlan": {
      "description": "",
      "type": "object",
      "properties": {
        "assignTime": {
          "type": "string",
          "format": "date-time"
        },
        "definition": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "owner": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "planGroup": {
          "type": "string"
        },
        "planId": {
          "type": "string",
          "format": "uuid"
        },
        "poolId": {
          "type": "integer",
          "format": "int32"
        },
        "queuePosition": {
          "type": "integer",
          "format": "int32"
        },
        "queueTime": {
          "type": "string",
          "format": "date-time"
        },
        "scopeIdentifier": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TaskOrchestrationQueuedPlanGroup": {
      "description": "",
      "type": "object",
      "properties": {
        "definition": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "owner": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "planGroup": {
          "type": "string"
        },
        "plans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskOrchestrationQueuedPlan"
          }
        },
        "project": {
          "$ref": "#/definitions/ProjectReference"
        },
        "queuePosition": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskReference": {
      "description": "A reference to a task.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the task definition. Corresponds to the id value of task.json file. <br />Example: CmdLineV2 { \"id\": \"D9BAFED4-0B18-4F58-968D-86655B4D2CE9\" }",
          "type": "string",
          "format": "uuid"
        },
        "inputs": {
          "description": "A dictionary of inputs specific to a task definition. Corresponds to inputs value of task.json file.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "The name of the task definition. Corresponds to the name value of task.json file. <br />Example: CmdLineV2 { \"name\": \"CmdLine\" }",
          "type": "string"
        },
        "version": {
          "description": "The version of the task definition. Corresponds to the version value of task.json file. <br />Example: CmdLineV2 { \"version\": { \"Major\": 2, \"Minor\": 212, \"Patch\": 0 } }",
          "type": "string"
        }
      }
    },
    "Timeline": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TimelineReference"
        }
      ],
      "properties": {
        "lastChangedBy": {
          "type": "string",
          "format": "uuid"
        },
        "lastChangedOn": {
          "type": "string",
          "format": "date-time"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimelineRecord"
          }
        }
      }
    },
    "TimelineAttempt": {
      "description": "An attempt to update a TimelineRecord.",
      "type": "object",
      "properties": {
        "attempt": {
          "description": "The attempt of the record.",
          "type": "integer",
          "format": "int32"
        },
        "identifier": {
          "description": "The unique identifier for the record.",
          "type": "string"
        },
        "recordId": {
          "description": "The record identifier located within the specified timeline.",
          "type": "string",
          "format": "uuid"
        },
        "timelineId": {
          "description": "The timeline identifier which owns the record representing this attempt.",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TimelineRecord": {
      "description": "Detailed information about the execution of different operations during pipeline run.",
      "type": "object",
      "properties": {
        "agentSpecification": {
          "description": "The specification of an agent running a pipeline job, in binary format. Applicable when record is of type Job. <br />Example: { \"VMImage\" : \"windows-2019\" }",
          "$ref": "#/definitions/JObject"
        },
        "attempt": {
          "description": "The number of record attempts.",
          "type": "integer",
          "format": "int32"
        },
        "changeId": {
          "description": "The ID connecting all records updated at the same time. This value is taken from timeline's ChangeId.",
          "type": "integer",
          "format": "int32"
        },
        "currentOperation": {
          "description": "A string that indicates the current operation.",
          "type": "string"
        },
        "details": {
          "description": "A reference to a sub-timeline.",
          "$ref": "#/definitions/TimelineReference"
        },
        "errorCount": {
          "description": "The number of errors produced by this operation.",
          "type": "integer",
          "format": "int32"
        },
        "finishTime": {
          "description": "The finish time of the record.",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "The ID of the record.",
          "type": "string",
          "format": "uuid"
        },
        "identifier": {
          "description": "String identifier that is consistent across attempts.",
          "type": "string"
        },
        "issues": {
          "description": "The list of issues produced by this operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          }
        },
        "lastModified": {
          "description": "The time the record was last modified.",
          "type": "string",
          "format": "date-time"
        },
        "location": {
          "description": "The REST URL of the record.",
          "type": "string"
        },
        "log": {
          "description": "A reference to the log produced by this operation.",
          "$ref": "#/definitions/TaskLogReference"
        },
        "name": {
          "description": "The name of the record.",
          "type": "string"
        },
        "order": {
          "description": "An ordinal value relative to other records within the timeline.",
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "description": "The ID of the record's parent. <br />Example: Stage is a parent of a Phase, Phase is a parent of a Job, Job is a parent of a Task.",
          "type": "string",
          "format": "uuid"
        },
        "percentComplete": {
          "description": "The percentage of record completion.",
          "type": "integer",
          "format": "int32"
        },
        "previousAttempts": {
          "description": "The previous record attempts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimelineAttempt"
          }
        },
        "queueId": {
          "description": "The ID of the queue which connects projects to agent pools on which the operation ran on. Applicable when record is of type Job.",
          "type": "integer",
          "format": "int32"
        },
        "refName": {
          "description": "Name of the referenced record.",
          "type": "string"
        },
        "result": {
          "description": "The result of the record.",
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "TaskResult",
            "values": [
              {
                "value": "succeeded",
                "description": ""
              },
              {
                "value": "succeededWithIssues",
                "description": ""
              },
              {
                "value": "failed",
                "description": ""
              },
              {
                "value": "canceled",
                "description": ""
              },
              {
                "value": "skipped",
                "description": ""
              },
              {
                "value": "abandoned",
                "description": ""
              }
            ]
          }
        },
        "resultCode": {
          "description": "Evaluation of predefined conditions upon completion of record's operation. <br />Example: Evaluating `succeeded()`, Result = True <br />Example: Evaluating `and(succeeded(), eq(variables['system.debug'], False))`, Result = False",
          "type": "string"
        },
        "startTime": {
          "description": "The start time of the record.",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "The state of the record.",
          "enum": [
            "pending",
            "inProgress",
            "completed"
          ],
          "x-ms-enum": {
            "name": "TimelineRecordState",
            "values": [
              {
                "value": "pending",
                "description": ""
              },
              {
                "value": "inProgress",
                "description": ""
              },
              {
                "value": "completed",
                "description": ""
              }
            ]
          }
        },
        "task": {
          "description": "A reference to the task. Applicable when record is of type Task.",
          "$ref": "#/definitions/TaskReference"
        },
        "type": {
          "description": "The type of operation being tracked by the record. <br />Example: Stage, Phase, Job, Task...",
          "type": "string"
        },
        "variables": {
          "description": "The variables of the record.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/VariableValue"
          }
        },
        "warningCount": {
          "description": "The number of warnings produced by this operation.",
          "type": "integer",
          "format": "int32"
        },
        "workerName": {
          "description": "The name of the agent running the operation. Applicable when record is of type Job.",
          "type": "string"
        }
      }
    },
    "TimelineRecordFeedLinesWrapper": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "endLine": {
          "type": "integer",
          "format": "int64"
        },
        "startLine": {
          "type": "integer",
          "format": "int64"
        },
        "stepId": {
          "type": "string",
          "format": "uuid"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TimelineReference": {
      "description": "A reference to a timeline.",
      "type": "object",
      "properties": {
        "changeId": {
          "description": "The change ID.",
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "description": "The ID of the timeline.",
          "type": "string",
          "format": "uuid"
        },
        "location": {
          "description": "The REST URL of the timeline.",
          "type": "string"
        }
      }
    },
    "VariableValue": {
      "description": "A wrapper class for a generic variable.",
      "type": "object",
      "properties": {
        "isReadOnly": {
          "description": "Indicates whether the variable can be changed during script's execution runtime.",
          "type": "boolean"
        },
        "isSecret": {
          "description": "Indicates whether the variable should be encrypted at rest.",
          "type": "boolean"
        },
        "value": {
          "description": "The value of the variable.",
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialize collections as a single JSON object on the wire.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "description": "The serialized item.",
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "description": "The number of serialized items.",
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  }
}