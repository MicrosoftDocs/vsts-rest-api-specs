{
  "swagger": "2.0",
  "info": {
    "title": "Test",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "7.1"
  },
  "host": "https://fabrikam-fiber-inc:8080/DefaultCollection",
  "x-ms-vss-area": "Test",
  "x-ms-vss-resource-area-id": "c2aa639c-3ccc-4740-b3b6-ce2a1e1d984e",
  "basePath": "/",
  "tags": [
    {
      "name": "Attachments",
      "description": "Work with test attachments programmatically using the REST APIs for Azure DevOps Server and Azure DevOps Server."
    },
    {
      "name": "Code Coverage",
      "description": "Work with code coverage programmatically using the REST APIs for Azure DevOps Server and Azure DevOps Server."
    },
    {
      "name": "Iterations",
      "description": "API to work with Manual testing test result iterations."
    },
    {
      "name": "Points",
      "description": "Work with test points programmatically using the REST APIs for Azure DevOps Server and Azure DevOps Server."
    },
    {
      "name": "Result Retention Settings",
      "description": "Work with test result retention settings programmatically using the REST APIs for Azure DevOps Server and Azure DevOps Server."
    },
    {
      "name": "Results"
    },
    {
      "name": "Runs"
    },
    {
      "name": "Session",
      "description": "Test Sessions"
    },
    {
      "name": "Test  Suites",
      "description": "Test suites help in organizing test cases in a test plan. A test suite can contain multiple child test suites, helping you build a folder structure under a test plan, or it can contain test cases. Last child test suites typically contain test cases, whereas intermediate suites represent a structure hierarchy. Intermediate suites can only be Static type, whereas last child suites can be of static suites, requirement-based suites, or query-based suites."
    },
    {
      "name": "Test Cases",
      "description": "Controller to handle TestCase REST calls"
    },
    {
      "name": "Test History"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{collection}/{project}/_apis/test/codecoverage": {
      "get": {
        "tags": [
          "Code Coverage"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "codeCoverage",
        "x-ms-vss-method": "GetBuildCodeCoverage",
        "description": "Get code coverage data for a build.",
        "operationId": "Code Coverage_Get Build Code Coverage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "buildId",
            "description": "ID of the build for which code coverage data needs to be fetched.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "flags",
            "description": "Value of flags determine the level of code coverage details to be fetched. Flags are additive. Expected Values are 1 for Modules, 2 for Functions, 4 for BlockData.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BuildCoverage"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/CodeCoverage/GET__test_codeCoverage_buildId-_buildIdParam__flags-7-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/Plans/{planId}/Suites/{suiteId}/points": {
      "get": {
        "tags": [
          "Points"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "points",
        "x-ms-vss-method": "GetPoints",
        "description": "Get a list of test points.",
        "operationId": "Points_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "ID of the test plan.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "ID of the suite that contains the points.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "witFields",
            "description": "Comma-separated list of work item field names.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "configurationId",
            "description": "Get test points for specific configuration.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "testCaseId",
            "description": "Get test points for a specific test case, valid when configurationId is not set.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "testPointIds",
            "description": "Get test points for comma-separated list of test point IDs, valid only when configurationId and testCaseId are not set.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includePointDetails",
            "description": "Include all properties for the test point.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$skip",
            "description": "Number of test points to skip..",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Number of test points to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestPoint"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "With fields": {
            "$ref": "./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points_witFields-_fields_-onprem.json"
          },
          "By configuration": {
            "$ref": "./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points_configuration-_configuration_-onprem.json"
          },
          "By test case": {
            "$ref": "./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points_testcaseid-_testcaseId_-onprem.json"
          },
          "Specific points": {
            "$ref": "./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points_testPointIds-_testpointIds_-onprem.json"
          },
          "With details": {
            "$ref": "./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points_includePointDetails-true-onprem.json"
          },
          "A page at a time": {
            "$ref": "./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points__skip-_skip___top-_top_-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/Plans/{planId}/Suites/{suiteId}/points/{pointIds}": {
      "get": {
        "tags": [
          "Points"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "points",
        "x-ms-vss-method": "GetPoint",
        "description": "Get a test point.",
        "operationId": "Points_Get Point",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "ID of the test plan.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "ID of the suite that contains the point.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pointIds",
            "description": "ID of the test point to get.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "witFields",
            "description": "Comma-separated list of work item field names.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestPoint"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "By id": {
            "$ref": "./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points__pointId_-onprem.json"
          },
          "With fields": {
            "$ref": "./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points__pointId__witFields-_fields_-onprem.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Points"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "points",
        "x-ms-vss-method": "UpdateTestPoints",
        "description": "Update test points.",
        "operationId": "Points_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Data to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PointUpdateModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "ID of the test plan.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "ID of the suite that contains the points.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pointIds",
            "description": "ID of the test point to get. Use a comma-separated list of IDs to update multiple test points.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestPoint"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Re-activate": {
            "$ref": "./httpExamples/Points/PATCH__test__projectName__plans__planId__suites__suiteId__points__pointId_-onprem.json"
          },
          "Set the outcome": {
            "$ref": "./httpExamples/Points/PATCH__test__projectName__plans__planId__suites__suiteId__points__pointId_2-onprem.json"
          },
          "Change the tester": {
            "$ref": "./httpExamples/Points/PATCH__test__projectName__plans__planId__suites__suiteId__points__pointId_23-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/Plans/{planId}/suites/{suiteId}/testcases": {
      "get": {
        "tags": [
          "Test  Suites"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "suites",
        "x-ms-vss-method": "GetTestCases",
        "description": "Get all test cases in a suite.",
        "operationId": "Test  Suites_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "ID of the test plan that contains the suites.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "ID of the suite to get.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuiteTestCase"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Suites/testcases-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/Plans/{planId}/suites/{suiteId}/testcases/{testCaseIds}": {
      "post": {
        "tags": [
          "Test  Suites"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "suites",
        "x-ms-vss-method": "AddTestCasesToSuite",
        "description": "Add test cases to suite.",
        "operationId": "Test  Suites_Add",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "ID of the test plan that contains the suite.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "ID of the test suite to which the test cases must be added.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseIds",
            "description": "IDs of the test cases to add to the suite. Ids are specified in comma separated format.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuiteTestCase"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Suites/POST_testmanagement_testsuite_testcase_ids-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Test  Suites"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "suites",
        "x-ms-vss-method": "GetTestCaseById",
        "description": "Get a specific test case in a test suite with test case id.",
        "operationId": "Test  Suites_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "ID of the test plan that contains the suites.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "ID of the suite that contains the test case.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseIds",
            "description": "ID of the test case to get.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuiteTestCase"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Suites/GET_testmanagement_testsuite_testcase_id-onprem.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Test  Suites"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "suites",
        "x-ms-vss-method": "RemoveTestCasesFromSuiteUrl",
        "description": "The test points associated with the test cases are removed from the test suite. The test case work item is not deleted from the system. See test cases resource to delete a test case permanently.",
        "operationId": "Test  Suites_Remove Test Cases From Suite Url",
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "ID of the test plan that contains the suite.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "ID of the suite to get.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseIds",
            "description": "IDs of the test cases to remove from the suite.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Suites/DELETE_testmanagement_testsuite_testcase_ids-onprem.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Test  Suites"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "suites",
        "x-ms-vss-method": "UpdateSuiteTestCases",
        "description": "Updates the properties of the test case association in a suite.",
        "operationId": "Test  Suites_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Model for updation of the properties of test case suite association.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuiteTestCaseUpdateModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "ID of the test plan that contains the suite.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "ID of the test suite to which the test cases must be added.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseIds",
            "description": "IDs of the test cases to add to the suite. Ids are specified in comma separated format.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuiteTestCase"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Suites/PATCH_testmanagement_testsuite_testcase_ids-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/points": {
      "post": {
        "tags": [
          "Points"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "points",
        "x-ms-vss-method": "GetPointsByQuery",
        "description": "Get test points using query.",
        "operationId": "Points_Get Points By Query",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "TestPointsQuery to get test points.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestPointsQuery"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skip",
            "description": "Number of test points to skip..",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Number of test points to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestPointsQuery"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "By test case id": {
            "$ref": "./httpExamples/Points/POST__test__projectName__points_-onprem.json"
          },
          "With Configuration filter": {
            "$ref": "./httpExamples/Points/POST__test__projectName__points__configuration_-onprem.json"
          },
          "With tester filter": {
            "$ref": "./httpExamples/Points/POST__test__projectName__points__tester_-onprem.json"
          },
          "fetch a page using skip , top": {
            "$ref": "./httpExamples/Points/POST__test__projectName__points__page_-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/resultretentionsettings": {
      "get": {
        "tags": [
          "Result Retention Settings"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "resultRetentionSettings",
        "x-ms-vss-method": "GetResultRetentionSettings",
        "description": "Get test result retention settings",
        "operationId": "Result Retention Settings_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultRetentionSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/ResultRetentionSettings/GET__test_resultretentionsettings-onprem.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Result Retention Settings"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "resultRetentionSettings",
        "x-ms-vss-method": "UpdateResultRetentionSettings",
        "description": "Update test result retention settings",
        "operationId": "Result Retention Settings_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Test result retention settings details to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResultRetentionSettings"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultRetentionSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/ResultRetentionSettings/PATCH__test_resultretentionsettings-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/Results/testhistory": {
      "post": {
        "tags": [
          "Test History"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "testHistory",
        "x-ms-vss-method": "QueryTestHistory",
        "description": "Get history of a test method using TestHistoryQuery",
        "operationId": "Test History_Query",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "TestHistoryQuery to get history",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestHistoryQuery"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestHistoryQuery"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ]
      }
    },
    "/{collection}/{project}/_apis/test/runs": {
      "post": {
        "tags": [
          "Runs"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "runs",
        "x-ms-vss-method": "CreateTestRun",
        "description": "Create new test run.",
        "operationId": "Runs_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Run details RunCreateModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunCreateModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestRun"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Runs/POST__test__projectName__runs-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Runs"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "runs",
        "x-ms-vss-method": "GetTestRuns",
        "description": "Get a list of test runs.",
        "operationId": "Runs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "buildUri",
            "description": "URI of the build that the runs used.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "owner",
            "description": "Team foundation ID of the owner of the runs.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "tmiRunId",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "planId",
            "description": "ID of the test plan that the runs are a part of.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeRunDetails",
            "description": "If true, include all the properties of the runs.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "automated",
            "description": "If true, only returns automated runs.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$skip",
            "description": "Number of test runs to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Number of test runs to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestRun"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "General example": {
            "$ref": "./httpExamples/Runs/GET__test__projectName__runs-onprem.json"
          },
          "Get top 3 test runs": {
            "$ref": "./httpExamples/Runs/GET__test__projectName__runs_top-3-onprem.json"
          },
          "Get runs with details": {
            "$ref": "./httpExamples/Runs/GET__test__projectName__runs_includeRunDetails-true-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/runs/{runId}": {
      "delete": {
        "tags": [
          "Runs"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "runs",
        "x-ms-vss-method": "DeleteTestRun",
        "description": "Delete a test run by its ID.",
        "operationId": "Runs_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the run to delete.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Runs/DELETE_test_runs_id-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Runs"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "runs",
        "x-ms-vss-method": "GetTestRunById",
        "description": "Get a test run by its ID.",
        "operationId": "Runs_Get Test Run By Id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the run to get.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeDetails",
            "description": "Default value is true. It includes details like run statistics, release, build, test environment, post process state, and more.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestRun"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Runs/GET_test_run_id-onprem.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Runs"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "runs",
        "x-ms-vss-method": "UpdateTestRun",
        "description": "Update test run by its ID.",
        "operationId": "Runs_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Run details RunUpdateModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunUpdateModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the run to update.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestRun"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "General example": {
            "$ref": "./httpExamples/Runs/PATCH__test__projectName__runs__runId_-onprem.json"
          },
          "Updating run comment": {
            "$ref": "./httpExamples/Runs/PATCH__test__projectName__runs__comment-onprem.json"
          },
          "Updating due date": {
            "$ref": "./httpExamples/Runs/PATCH__test__projectName__runs__duedate-onprem.json"
          },
          "Updating started date": {
            "$ref": "./httpExamples/Runs/PATCH__test__projectName__runs__startedDate-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/Runs/{runId}/attachments": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "CreateTestRunAttachment",
        "description": "Attach a file to a test run.",
        "operationId": "Attachments_Create Test Run Attachment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Attachment details TestAttachmentRequestModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestAttachmentRequestModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the test run against which attachment has to be uploaded.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestAttachmentReference"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Attachments/POST__test_runs__newRunId__attachments-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Attachments"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "GetTestRunAttachments",
        "description": "Get list of test run attachments reference.",
        "operationId": "Attachments_Get Test Run Attachments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the test run.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestAttachment"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Attachments/GET__test_runs__newRunId__attachments-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/Runs/{runId}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "GetTestRunAttachment",
        "description": "Download a test run attachment by its ID.",
        "operationId": "Attachments_Get Test Run Attachment Zip",
        "produces": [
          "application/octet-stream",
          "application/zip"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the test run whose attachment has to be downloaded.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "attachmentId",
            "description": "ID of the test run attachment to be downloaded.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ]
      }
    },
    "/{collection}/{project}/_apis/test/Runs/{runId}/codecoverage": {
      "get": {
        "tags": [
          "Code Coverage"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "codeCoverage",
        "x-ms-vss-method": "GetTestRunCodeCoverage",
        "description": "Get code coverage data for a test run",
        "operationId": "Code Coverage_Get Test Run Code Coverage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the test run for which code coverage data needs to be fetched.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "flags",
            "description": "Value of flags determine the level of code coverage details to be fetched. Flags are additive. Expected Values are 1 for Modules, 2 for Functions, 4 for BlockData.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestRunCoverage"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/CodeCoverage/GET__test_runs__runId__codeCoverage_flags-7-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/Runs/{runId}/results": {
      "post": {
        "tags": [
          "Results"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "results",
        "x-ms-vss-method": "AddTestResultsToTestRun",
        "description": "Add test results to a test run.",
        "operationId": "Results_Add",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "List of test results to add.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCaseResult"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "Test run ID into which test results to add.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCaseResult"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Results/POST__test_runs__newRunId__results_3_0-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Results"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "results",
        "x-ms-vss-method": "GetTestResults",
        "description": "Get test results for a test run.",
        "operationId": "Results_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "Test run ID of test results to fetch.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "detailsToInclude",
            "description": "Details to include with test results. Default is None. Other values are Iterations and WorkItems.",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "iterations",
              "workItems",
              "subResults",
              "point"
            ],
            "x-ms-enum": {
              "name": "ResultDetails",
              "values": [
                {
                  "value": "none",
                  "description": "Core fields of test result. Core fields includes State, Outcome, Priority, AutomatedTestName, AutomatedTestStorage, Comments, ErrorMessage etc."
                },
                {
                  "value": "iterations",
                  "description": "Test iteration details in a test result."
                },
                {
                  "value": "workItems",
                  "description": "Workitems associated with a test result."
                },
                {
                  "value": "subResults",
                  "description": "Subresults in a test result."
                },
                {
                  "value": "point",
                  "description": "Point and plan detail in a test result."
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "$skip",
            "description": "Number of test results to skip from beginning.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Number of test results to return. Maximum is 1000 when detailsToInclude is None and 200 otherwise.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "outcomes",
            "description": "Comma separated list of test outcomes to filter test results.",
            "required": false,
            "type": "string",
            "format": "array (TestOutcome)"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCaseResult"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "Get a list of test results": {
            "$ref": "./httpExamples/Results/GET__test_runs__runId__results_3_0-onprem.json"
          },
          "With workitem details": {
            "$ref": "./httpExamples/Results/GET__test_runs__runId__results_detailsToInclude-WorkItems__top-100_3_0-onprem.json"
          },
          "With test iterations and workitem details": {
            "$ref": "./httpExamples/Results/GET__test_runs_31_results__top-100_detailsToInclude-WorkItems,Iterations-onprem.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Results"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "results",
        "x-ms-vss-method": "UpdateTestResults",
        "description": "Update test results in a test run.",
        "operationId": "Results_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "List of test results to update.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCaseResult"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "Test run ID whose test results to update.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCaseResult"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Results/PATCH__test_runs__newRunId__results_3_0-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/Runs/{runId}/results/{testCaseResultId}": {
      "get": {
        "tags": [
          "Results"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "results",
        "x-ms-vss-method": "GetTestResultById",
        "description": "Get a test result for a test run.",
        "operationId": "Results_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "Test run ID of a test result to fetch.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "Test result ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "detailsToInclude",
            "description": "Details to include with test results. Default is None. Other values are Iterations, WorkItems and SubResults.",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "iterations",
              "workItems",
              "subResults",
              "point"
            ],
            "x-ms-enum": {
              "name": "ResultDetails",
              "values": [
                {
                  "value": "none",
                  "description": "Core fields of test result. Core fields includes State, Outcome, Priority, AutomatedTestName, AutomatedTestStorage, Comments, ErrorMessage etc."
                },
                {
                  "value": "iterations",
                  "description": "Test iteration details in a test result."
                },
                {
                  "value": "workItems",
                  "description": "Workitems associated with a test result."
                },
                {
                  "value": "subResults",
                  "description": "Subresults in a test result."
                },
                {
                  "value": "point",
                  "description": "Point and plan detail in a test result."
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestCaseResult"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Results/GET__test_runs__runId__results_100000_3_0-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/attachments": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "CreateTestResultAttachment",
        "description": "Attach a file to a test result.",
        "operationId": "Attachments_Create Test Result Attachment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Attachment details TestAttachmentRequestModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestAttachmentRequestModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the test run that contains the result.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "ID of the test result against which attachment has to be uploaded.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestAttachmentReference"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Attachments/POST__test_runs__newRunId__results__result1__attachments-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Attachments"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "GetTestResultAttachments",
        "description": "Get list of test result attachments reference.",
        "operationId": "Attachments_Get Test Result Attachments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the test run that contains the result.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "ID of the test result.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestAttachment"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Attachments/GET__test_runs__newRunId__results__result1__attachments-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "GetTestResultAttachment",
        "description": "Download a test result attachment by its ID.",
        "operationId": "Attachments_Get Test Result Attachment Zip",
        "produces": [
          "application/octet-stream",
          "application/zip"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the test run that contains the testCaseResultId.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "ID of the test result whose attachment has to be downloaded.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "attachmentId",
            "description": "ID of the test result attachment to be downloaded.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ]
      }
    },
    "/{collection}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/iterations": {
      "get": {
        "tags": [
          "Iterations"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "iterations",
        "x-ms-vss-method": "GetTestIterations",
        "description": "Get iterations for a result",
        "operationId": "Iterations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the test run that contains the result.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "ID of the test result that contains the iterations.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeActionResults",
            "description": "Include result details for each action performed in the test iteration. ActionResults refer to outcome (pass/fail) of test steps that are executed as part of a running a manual test. Including the ActionResults flag gets the outcome of test steps in the actionResults section and test parameters in the parameters section for each test iteration.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestIterationDetailsModel"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Iterations/GET_testmanagement_iterationresults-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/iterations/{iterationId}": {
      "get": {
        "tags": [
          "Iterations"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "iterations",
        "x-ms-vss-method": "GetTestIteration",
        "description": "Get iteration for a result",
        "operationId": "Iterations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the test run that contains the result.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "ID of the test result that contains the iterations.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "Id of the test results Iteration.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeActionResults",
            "description": "Include result details for each action performed in the test iteration. ActionResults refer to outcome (pass/fail) of test steps that are executed as part of a running a manual test. Including the ActionResults flag gets the outcome of test steps in the actionResults section and test parameters in the parameters section for each test iteration.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestIterationDetailsModel"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "Get test Iteration with id": {
            "$ref": "./httpExamples/Iterations/GET__test__projectName__runs__runId__results_100000_iterations_1-onprem.json"
          },
          "Get test Iteration With Action Result": {
            "$ref": "./httpExamples/Iterations/GET__test__projectName__runs__runId__results_100000_iterations_1_includeActionResults-true-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/runs/{runId}/Statistics": {
      "get": {
        "tags": [
          "Runs"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "runs",
        "x-ms-vss-method": "GetTestRunStatistics",
        "description": "Get test run statistics , used when we want to get summary of a run by outcome.",
        "operationId": "Runs_Get Test Run Statistics",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the run to get.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestRunStatistic"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Runs/GET_run_statistics-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/_apis/test/testcases/{testCaseId}": {
      "delete": {
        "tags": [
          "Test Cases"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "testCases",
        "x-ms-vss-method": "DeleteTestCase",
        "description": "Delete a test case.",
        "operationId": "Test Cases_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "testCaseId",
            "description": "Id of test case to delete.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/TestCases/DELETE__test_testcase_5-onprem.json"
          }
        }
      }
    },
    "/{collection}/{project}/{team}/_apis/test/session": {
      "post": {
        "tags": [
          "Session"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "session",
        "x-ms-vss-method": "CreateTestSession",
        "description": "Create a test session",
        "operationId": "Session_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Test session details for creation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestSession"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestSession"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Session/POST__test_session-onprem.json"
          }
        }
      },
      "get": {
        "tags": [
          "Session"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "session",
        "x-ms-vss-method": "GetTestSessions",
        "description": "Get a list of test sessions",
        "operationId": "Session_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "period",
            "description": "Period in days from now, for which test sessions are fetched.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "allSessions",
            "description": "If false, returns test sessions for current user. Otherwise, it returns test sessions for all users",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeAllProperties",
            "description": "If true, it returns all properties of the test sessions. Otherwise, it returns the skinny version.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "source",
            "description": "Source of the test session.",
            "required": false,
            "type": "string",
            "enum": [
              "unknown",
              "xtDesktop",
              "feedbackDesktop",
              "xtWeb",
              "feedbackWeb",
              "xtDesktop2",
              "sessionInsightsForAll"
            ],
            "x-ms-enum": {
              "name": "TestSessionSource",
              "values": [
                {
                  "value": "unknown",
                  "description": "Source of test session uncertain as it is stale"
                },
                {
                  "value": "xtDesktop",
                  "description": "The session was created from Microsoft Test Manager exploratory desktop tool."
                },
                {
                  "value": "feedbackDesktop",
                  "description": "The session was created from feedback client."
                },
                {
                  "value": "xtWeb",
                  "description": "The session was created from browser extension."
                },
                {
                  "value": "feedbackWeb",
                  "description": "The session was created from browser extension."
                },
                {
                  "value": "xtDesktop2",
                  "description": "The session was created from web access using Microsoft Test Manager exploratory desktop tool."
                },
                {
                  "value": "sessionInsightsForAll",
                  "description": "To show sessions from all supported sources."
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "includeOnlyCompletedSessions",
            "description": "If true, it returns test sessions in completed state. Otherwise, it returns test sessions for all states",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestSession"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Session/GET__test_session-onprem.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Session"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "session",
        "x-ms-vss-method": "UpdateTestSession",
        "description": "Update a test session",
        "operationId": "Session_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Test session details for update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestSession"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestSession"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/Session/PATCH__test_session-onprem.json"
          }
        }
      }
    }
  },
  "x-ms-paths": {
    "/{collection}/{project}/_apis/test/runs?minLastUpdatedDate={minLastUpdatedDate}&maxLastUpdatedDate={maxLastUpdatedDate}": {
      "get": {
        "tags": [
          "Runs"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "runs",
        "x-ms-vss-method": "QueryTestRuns",
        "description": "Query Test Runs based on filters. Mandatory fields are minLastUpdatedDate and maxLastUpdatedDate.",
        "operationId": "Runs_Query",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "minLastUpdatedDate",
            "description": "Minimum Last Modified Date of run to be queried (Mandatory).",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "maxLastUpdatedDate",
            "description": "Maximum Last Modified Date of run to be queried (Mandatory, difference between min and max date can be atmost 7 days).",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "state",
            "description": "Current state of the Runs to be queried.",
            "required": false,
            "type": "string",
            "enum": [
              "unspecified",
              "notStarted",
              "inProgress",
              "completed",
              "aborted",
              "waiting",
              "needsInvestigation"
            ],
            "x-ms-enum": {
              "name": "TestRunState",
              "values": [
                {
                  "value": "unspecified",
                  "description": "Only used during an update to preserve the existing value."
                },
                {
                  "value": "notStarted",
                  "description": "The run is still being created.  No tests have started yet."
                },
                {
                  "value": "inProgress",
                  "description": "Tests are running."
                },
                {
                  "value": "completed",
                  "description": "All tests have completed or been skipped."
                },
                {
                  "value": "aborted",
                  "description": "Run is stopped and remaining tests have been aborted"
                },
                {
                  "value": "waiting",
                  "description": "Run is currently initializing This is a legacy state and should not be used any more"
                },
                {
                  "value": "needsInvestigation",
                  "description": "Run requires investigation because of a test point failure This is a legacy state and should not be used any more"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "planIds",
            "description": "Plan Ids of the Runs to be queried, comma separated list of valid ids (limit no. of ids 10).",
            "required": false,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "in": "query",
            "name": "isAutomated",
            "description": "Automation type of the Runs to be queried.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "publishContext",
            "description": "PublishContext of the Runs to be queried.",
            "required": false,
            "type": "string",
            "enum": [
              "build",
              "release",
              "all"
            ],
            "x-ms-enum": {
              "name": "TestRunPublishContext",
              "values": [
                {
                  "value": "build",
                  "description": "Run is published for Build Context."
                },
                {
                  "value": "release",
                  "description": "Run is published for Release Context."
                },
                {
                  "value": "all",
                  "description": "Run is published for any Context."
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "buildIds",
            "description": "Build Ids of the Runs to be queried, comma separated list of valid ids (limit no. of ids 10).",
            "required": false,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "in": "query",
            "name": "buildDefIds",
            "description": "Build Definition Ids of the Runs to be queried, comma separated list of valid ids (limit no. of ids 10).",
            "required": false,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "in": "query",
            "name": "branchName",
            "description": "Source Branch name of the Runs to be queried.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "releaseIds",
            "description": "Release Ids of the Runs to be queried, comma separated list of valid ids (limit no. of ids 10).",
            "required": false,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "in": "query",
            "name": "releaseDefIds",
            "description": "Release Definition Ids of the Runs to be queried, comma separated list of valid ids (limit no. of ids 10).",
            "required": false,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "in": "query",
            "name": "releaseEnvIds",
            "description": "Release Environment Ids of the Runs to be queried, comma separated list of valid ids (limit no. of ids 10).",
            "required": false,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "in": "query",
            "name": "releaseEnvDefIds",
            "description": "Release Environment Definition Ids of the Runs to be queried, comma separated list of valid ids (limit no. of ids 10).",
            "required": false,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "in": "query",
            "name": "runTitle",
            "description": "Run Title of the Runs to be queried.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Number of runs to be queried. Limit is 100",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "continuationToken received from previous batch or null for first batch. It is not supposed to be created (or altered, if received from last batch) by user.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestRun"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ]
      }
    },
    "/{collection}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/attachments?testSubResultId={testSubResultId}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "GetTestSubResultAttachments",
        "description": "Get list of test sub result attachments",
        "operationId": "Attachments_Get Test Sub Result Attachments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the test run that contains the result.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "ID of the test results that contains sub result.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "testSubResultId",
            "description": "ID of the test sub result whose attachment has to be downloaded",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestAttachment"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Attachments"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "CreateTestSubResultAttachment",
        "description": "Attach a file to a test result",
        "operationId": "Attachments_Create Test Sub Result Attachment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Attachment Request Model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestAttachmentRequestModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the test run that contains the result.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "ID of the test results that contains sub result.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "testSubResultId",
            "description": "ID of the test sub results against which attachment has to be uploaded.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestAttachmentReference"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test_write"
            ]
          }
        ]
      }
    },
    "/{collection}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/attachments/{attachmentId}?testSubResultId={testSubResultId}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "x-ms-docs-override-version": "7.1",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "GetTestSubResultAttachment",
        "description": "Download a test sub result attachment",
        "operationId": "Attachments_Get Test Sub Result Attachment Zip",
        "produces": [
          "application/octet-stream",
          "application/zip"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection",
            "description": "The name of the Azure DevOps collection.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "ID of the test run that contains the result.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "ID of the test results that contains sub result.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "attachmentId",
            "description": "ID of the test result attachment to be downloaded",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "testSubResultId",
            "description": "ID of the test sub result whose attachment has to be downloaded",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.test"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "AbortTestRunRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "options": {
          "type": "integer",
          "format": "int32"
        },
        "projectName": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AfnStrip": {
      "description": "",
      "type": "object",
      "properties": {
        "auxiliaryUrl": {
          "description": "Auxiliary Url to be consumed by MTM",
          "type": "string"
        },
        "creationDate": {
          "description": "Creation date of the AfnStrip",
          "type": "string",
          "format": "date-time"
        },
        "fileName": {
          "description": "File name of the attachment created",
          "type": "string"
        },
        "id": {
          "description": "ID of AfnStrip. This is same as the attachment ID.",
          "type": "integer",
          "format": "int32"
        },
        "project": {
          "description": "Project identifier which contains AfnStrip",
          "type": "string"
        },
        "storedIn": {
          "description": "Service in which this attachment is stored in",
          "type": "string"
        },
        "stream": {
          "description": "Afn strip stream.",
          "type": "string"
        },
        "testCaseId": {
          "description": "ID of the testcase.",
          "type": "integer",
          "format": "int32"
        },
        "testResultId": {
          "description": "Backing test result id.",
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "description": "Backing test run id.",
          "type": "integer",
          "format": "int32"
        },
        "unCompressedStreamLength": {
          "description": "Byte stream (uncompressed) length of Afn strip.",
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "description": "Url of the attachment created.",
          "type": "string"
        }
      }
    },
    "AggregatedDataForResultTrend": {
      "description": "",
      "type": "object",
      "properties": {
        "duration": {
          "description": "This is tests execution duration.",
          "type": "string",
          "format": "TimeSpan"
        },
        "resultsByOutcome": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AggregatedResultsByOutcome"
          }
        },
        "runSummaryByState": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AggregatedRunsByState"
          }
        },
        "testResultsContext": {
          "$ref": "#/definitions/TestResultsContext"
        },
        "totalTests": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AggregatedResultDetailsByOutcome": {
      "description": "Result deatils for a particular test result outcome.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Number of results for current outcome.",
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "description": "Time taken by results.",
          "type": "string",
          "format": "TimeSpan"
        },
        "outcome": {
          "description": "Test result outcome",
          "enum": [
            "unspecified",
            "none",
            "passed",
            "failed",
            "inconclusive",
            "timeout",
            "aborted",
            "blocked",
            "notExecuted",
            "warning",
            "error",
            "notApplicable",
            "paused",
            "inProgress",
            "notImpacted"
          ],
          "x-ms-enum": {
            "name": "TestOutcome",
            "values": [
              {
                "value": "unspecified",
                "description": "Only used during an update to preserve the existing value."
              },
              {
                "value": "none",
                "description": "Test has not been completed, or the test type does not report pass/failure."
              },
              {
                "value": "passed",
                "description": "Test was executed w/o any issues."
              },
              {
                "value": "failed",
                "description": "Test was executed, but there were issues. Issues may involve exceptions or failed assertions."
              },
              {
                "value": "inconclusive",
                "description": "Test has completed, but we can't say if it passed or failed. May be used for aborted tests..."
              },
              {
                "value": "timeout",
                "description": "The test timed out"
              },
              {
                "value": "aborted",
                "description": "Test was aborted. This was not caused by a user gesture, but rather by a framework decision."
              },
              {
                "value": "blocked",
                "description": "Test had it chance for been executed but was not, as ITestElement.IsRunnable == false."
              },
              {
                "value": "notExecuted",
                "description": "Test was not executed. This was caused by a user gesture - e.g. user hit stop button."
              },
              {
                "value": "warning",
                "description": "To be used by Run level results. This is not a failure."
              },
              {
                "value": "error",
                "description": "There was a system error while we were trying to execute a test."
              },
              {
                "value": "notApplicable",
                "description": "Test is Not Applicable for execution."
              },
              {
                "value": "paused",
                "description": "Test is paused."
              },
              {
                "value": "inProgress",
                "description": "Test is currently executing. Added this for TCM charts"
              },
              {
                "value": "notImpacted",
                "description": "Test is not impacted. Added fot TIA."
              }
            ]
          }
        },
        "rerunResultCount": {
          "description": "Number of results on rerun",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AggregatedResultsAnalysis": {
      "description": "",
      "type": "object",
      "properties": {
        "duration": {
          "type": "string",
          "format": "TimeSpan"
        },
        "notReportedResultsByOutcome": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AggregatedResultsByOutcome"
          }
        },
        "previousContext": {
          "$ref": "#/definitions/TestResultsContext"
        },
        "resultsByOutcome": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AggregatedResultsByOutcome"
          }
        },
        "resultsDifference": {
          "$ref": "#/definitions/AggregatedResultsDifference"
        },
        "runSummaryByOutcome": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AggregatedRunsByOutcome"
          }
        },
        "runSummaryByState": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AggregatedRunsByState"
          }
        },
        "totalTests": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AggregatedResultsByOutcome": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "type": "string",
          "format": "TimeSpan"
        },
        "groupByField": {
          "type": "string"
        },
        "groupByValue": {
          "type": "object"
        },
        "outcome": {
          "enum": [
            "unspecified",
            "none",
            "passed",
            "failed",
            "inconclusive",
            "timeout",
            "aborted",
            "blocked",
            "notExecuted",
            "warning",
            "error",
            "notApplicable",
            "paused",
            "inProgress",
            "notImpacted"
          ],
          "x-ms-enum": {
            "name": "TestOutcome",
            "values": [
              {
                "value": "unspecified",
                "description": "Only used during an update to preserve the existing value."
              },
              {
                "value": "none",
                "description": "Test has not been completed, or the test type does not report pass/failure."
              },
              {
                "value": "passed",
                "description": "Test was executed w/o any issues."
              },
              {
                "value": "failed",
                "description": "Test was executed, but there were issues. Issues may involve exceptions or failed assertions."
              },
              {
                "value": "inconclusive",
                "description": "Test has completed, but we can't say if it passed or failed. May be used for aborted tests..."
              },
              {
                "value": "timeout",
                "description": "The test timed out"
              },
              {
                "value": "aborted",
                "description": "Test was aborted. This was not caused by a user gesture, but rather by a framework decision."
              },
              {
                "value": "blocked",
                "description": "Test had it chance for been executed but was not, as ITestElement.IsRunnable == false."
              },
              {
                "value": "notExecuted",
                "description": "Test was not executed. This was caused by a user gesture - e.g. user hit stop button."
              },
              {
                "value": "warning",
                "description": "To be used by Run level results. This is not a failure."
              },
              {
                "value": "error",
                "description": "There was a system error while we were trying to execute a test."
              },
              {
                "value": "notApplicable",
                "description": "Test is Not Applicable for execution."
              },
              {
                "value": "paused",
                "description": "Test is paused."
              },
              {
                "value": "inProgress",
                "description": "Test is currently executing. Added this for TCM charts"
              },
              {
                "value": "notImpacted",
                "description": "Test is not impacted. Added fot TIA."
              }
            ]
          }
        },
        "rerunResultCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AggregatedResultsDifference": {
      "description": "",
      "type": "object",
      "properties": {
        "increaseInDuration": {
          "type": "string",
          "format": "TimeSpan"
        },
        "increaseInFailures": {
          "type": "integer",
          "format": "int32"
        },
        "increaseInNonImpactedTests": {
          "type": "integer",
          "format": "int32"
        },
        "increaseInOtherTests": {
          "type": "integer",
          "format": "int32"
        },
        "increaseInPassedTests": {
          "type": "integer",
          "format": "int32"
        },
        "increaseInTotalTests": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AggregatedRunsByOutcome": {
      "description": "",
      "type": "object",
      "properties": {
        "outcome": {
          "enum": [
            "passed",
            "failed",
            "notImpacted",
            "others"
          ],
          "x-ms-enum": {
            "name": "TestRunOutcome",
            "values": [
              {
                "value": "passed",
                "description": "Run with zero failed tests and has at least one impacted test"
              },
              {
                "value": "failed",
                "description": "Run with at-least one failed test."
              },
              {
                "value": "notImpacted",
                "description": "Run with no impacted tests."
              },
              {
                "value": "others",
                "description": "Runs with All tests in other category."
              }
            ]
          }
        },
        "runsCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AggregatedRunsByState": {
      "description": "",
      "type": "object",
      "properties": {
        "resultsByOutcome": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AggregatedResultsByOutcome"
          }
        },
        "runsCount": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "enum": [
            "unspecified",
            "notStarted",
            "inProgress",
            "completed",
            "aborted",
            "waiting",
            "needsInvestigation"
          ],
          "x-ms-enum": {
            "name": "TestRunState",
            "values": [
              {
                "value": "unspecified",
                "description": "Only used during an update to preserve the existing value."
              },
              {
                "value": "notStarted",
                "description": "The run is still being created.  No tests have started yet."
              },
              {
                "value": "inProgress",
                "description": "Tests are running."
              },
              {
                "value": "completed",
                "description": "All tests have completed or been skipped."
              },
              {
                "value": "aborted",
                "description": "Run is stopped and remaining tests have been aborted"
              },
              {
                "value": "waiting",
                "description": "Run is currently initializing This is a legacy state and should not be used any more"
              },
              {
                "value": "needsInvestigation",
                "description": "Run requires investigation because of a test point failure This is a legacy state and should not be used any more"
              }
            ]
          }
        }
      }
    },
    "BatchResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response"
          }
        },
        "status": {
          "enum": [
            "continue",
            "switchingProtocols",
            "ok",
            "created",
            "accepted",
            "nonAuthoritativeInformation",
            "noContent",
            "resetContent",
            "partialContent",
            "multipleChoices",
            "ambiguous",
            "movedPermanently",
            "moved",
            "found",
            "redirect",
            "seeOther",
            "redirectMethod",
            "notModified",
            "useProxy",
            "unused",
            "temporaryRedirect",
            "redirectKeepVerb",
            "badRequest",
            "unauthorized",
            "paymentRequired",
            "forbidden",
            "notFound",
            "methodNotAllowed",
            "notAcceptable",
            "proxyAuthenticationRequired",
            "requestTimeout",
            "conflict",
            "gone",
            "lengthRequired",
            "preconditionFailed",
            "requestEntityTooLarge",
            "requestUriTooLong",
            "unsupportedMediaType",
            "requestedRangeNotSatisfiable",
            "expectationFailed",
            "upgradeRequired",
            "internalServerError",
            "notImplemented",
            "badGateway",
            "serviceUnavailable",
            "gatewayTimeout",
            "httpVersionNotSupported"
          ],
          "x-ms-enum": {
            "name": "HttpStatusCode",
            "values": [
              {
                "value": "continue",
                "description": ""
              },
              {
                "value": "switchingProtocols",
                "description": ""
              },
              {
                "value": "ok",
                "description": ""
              },
              {
                "value": "created",
                "description": ""
              },
              {
                "value": "accepted",
                "description": ""
              },
              {
                "value": "nonAuthoritativeInformation",
                "description": ""
              },
              {
                "value": "noContent",
                "description": ""
              },
              {
                "value": "resetContent",
                "description": ""
              },
              {
                "value": "partialContent",
                "description": ""
              },
              {
                "value": "multipleChoices",
                "description": ""
              },
              {
                "value": "ambiguous",
                "description": ""
              },
              {
                "value": "movedPermanently",
                "description": ""
              },
              {
                "value": "moved",
                "description": ""
              },
              {
                "value": "found",
                "description": ""
              },
              {
                "value": "redirect",
                "description": ""
              },
              {
                "value": "seeOther",
                "description": ""
              },
              {
                "value": "redirectMethod",
                "description": ""
              },
              {
                "value": "notModified",
                "description": ""
              },
              {
                "value": "useProxy",
                "description": ""
              },
              {
                "value": "unused",
                "description": ""
              },
              {
                "value": "temporaryRedirect",
                "description": ""
              },
              {
                "value": "redirectKeepVerb",
                "description": ""
              },
              {
                "value": "badRequest",
                "description": ""
              },
              {
                "value": "unauthorized",
                "description": ""
              },
              {
                "value": "paymentRequired",
                "description": ""
              },
              {
                "value": "forbidden",
                "description": ""
              },
              {
                "value": "notFound",
                "description": ""
              },
              {
                "value": "methodNotAllowed",
                "description": ""
              },
              {
                "value": "notAcceptable",
                "description": ""
              },
              {
                "value": "proxyAuthenticationRequired",
                "description": ""
              },
              {
                "value": "requestTimeout",
                "description": ""
              },
              {
                "value": "conflict",
                "description": ""
              },
              {
                "value": "gone",
                "description": ""
              },
              {
                "value": "lengthRequired",
                "description": ""
              },
              {
                "value": "preconditionFailed",
                "description": ""
              },
              {
                "value": "requestEntityTooLarge",
                "description": ""
              },
              {
                "value": "requestUriTooLong",
                "description": ""
              },
              {
                "value": "unsupportedMediaType",
                "description": ""
              },
              {
                "value": "requestedRangeNotSatisfiable",
                "description": ""
              },
              {
                "value": "expectationFailed",
                "description": ""
              },
              {
                "value": "upgradeRequired",
                "description": ""
              },
              {
                "value": "internalServerError",
                "description": ""
              },
              {
                "value": "notImplemented",
                "description": ""
              },
              {
                "value": "badGateway",
                "description": ""
              },
              {
                "value": "serviceUnavailable",
                "description": ""
              },
              {
                "value": "gatewayTimeout",
                "description": ""
              },
              {
                "value": "httpVersionNotSupported",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "BuildConfiguration": {
      "description": "BuildConfiguration Details.",
      "type": "object",
      "properties": {
        "branchName": {
          "description": "Branch name for which build is generated.",
          "type": "string"
        },
        "buildDefinitionId": {
          "description": "BuildDefinitionId for build.",
          "type": "integer",
          "format": "int32"
        },
        "buildSystem": {
          "description": "Build system.",
          "type": "string"
        },
        "creationDate": {
          "description": "Build Creation Date.",
          "type": "string",
          "format": "date-time"
        },
        "flavor": {
          "description": "Build flavor (eg Build/Release).",
          "type": "string"
        },
        "id": {
          "description": "BuildConfiguration Id.",
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "description": "Build Number.",
          "type": "string"
        },
        "platform": {
          "description": "BuildConfiguration Platform.",
          "type": "string"
        },
        "project": {
          "description": "Project associated with this BuildConfiguration.",
          "$ref": "#/definitions/ShallowReference"
        },
        "repositoryGuid": {
          "description": "Repository Guid for the Build.",
          "type": "string"
        },
        "repositoryType": {
          "description": "Repository Type (eg. TFSGit).",
          "type": "string"
        },
        "sourceVersion": {
          "description": "Source Version(/first commit) for the build was triggered.",
          "type": "string"
        },
        "targetBranchName": {
          "description": "Target BranchName.",
          "type": "string"
        },
        "uri": {
          "description": "Build Uri.",
          "type": "string"
        }
      }
    },
    "BuildCoverage": {
      "description": "Build Coverage Detail",
      "type": "object",
      "properties": {
        "codeCoverageFileUrl": {
          "description": "Code Coverage File Url",
          "type": "string"
        },
        "configuration": {
          "description": "Build Configuration",
          "$ref": "#/definitions/BuildConfiguration"
        },
        "lastError": {
          "description": "Last Error",
          "type": "string"
        },
        "modules": {
          "description": "List of Modules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModuleCoverage"
          }
        },
        "state": {
          "description": "State",
          "type": "string"
        }
      }
    },
    "BuildReference": {
      "description": "Reference to a build.",
      "type": "object",
      "properties": {
        "branchName": {
          "description": "Branch name.",
          "type": "string"
        },
        "buildSystem": {
          "description": "Build system.",
          "type": "string"
        },
        "definitionId": {
          "description": "Build Definition ID.",
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "description": "Build ID.",
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "description": "Build Number.",
          "type": "string"
        },
        "repositoryId": {
          "description": "Repository ID.",
          "type": "string"
        },
        "uri": {
          "description": "Build URI.",
          "type": "string"
        }
      }
    },
    "BuildReference2": {
      "description": "",
      "type": "object",
      "properties": {
        "branchName": {
          "type": "string"
        },
        "buildConfigurationId": {
          "type": "integer",
          "format": "int32"
        },
        "buildDefinitionId": {
          "type": "integer",
          "format": "int32"
        },
        "buildDeleted": {
          "type": "boolean"
        },
        "buildFlavor": {
          "type": "string"
        },
        "buildId": {
          "type": "integer",
          "format": "int32"
        },
        "buildNumber": {
          "type": "string"
        },
        "buildPlatform": {
          "type": "string"
        },
        "buildSystem": {
          "type": "string"
        },
        "buildUri": {
          "type": "string"
        },
        "coverageId": {
          "type": "integer",
          "format": "int32"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "repoId": {
          "type": "string"
        },
        "repoType": {
          "type": "string"
        },
        "sourceVersion": {
          "type": "string"
        }
      }
    },
    "BulkResultUpdateRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResultUpdateRequest"
          }
        }
      }
    },
    "CloneOperationInformation": {
      "description": "Detail About Clone Operation.",
      "type": "object",
      "properties": {
        "cloneStatistics": {
          "description": "Clone Statistics",
          "$ref": "#/definitions/CloneStatistics"
        },
        "completionDate": {
          "description": "If the operation is complete, the DateTime of completion. If operation is not complete, this is DateTime.MaxValue",
          "type": "string",
          "format": "date-time"
        },
        "creationDate": {
          "description": "DateTime when the operation was started",
          "type": "string",
          "format": "date-time"
        },
        "destinationObject": {
          "description": "Shallow reference of the destination",
          "$ref": "#/definitions/ShallowReference"
        },
        "destinationPlan": {
          "description": "Shallow reference of the destination",
          "$ref": "#/definitions/ShallowReference"
        },
        "destinationProject": {
          "description": "Shallow reference of the destination",
          "$ref": "#/definitions/ShallowReference"
        },
        "message": {
          "description": "If the operation has Failed, Message contains the reason for failure. Null otherwise.",
          "type": "string"
        },
        "opId": {
          "description": "The ID of the operation",
          "type": "integer",
          "format": "int32"
        },
        "resultObjectType": {
          "description": "The type of the object generated as a result of the Clone operation",
          "enum": [
            "testSuite",
            "testPlan"
          ],
          "x-ms-enum": {
            "name": "ResultObjectType",
            "values": [
              {
                "value": "testSuite",
                "description": "Suite Clone"
              },
              {
                "value": "testPlan",
                "description": "Plan Clone"
              }
            ]
          }
        },
        "sourceObject": {
          "description": "Shallow reference of the source",
          "$ref": "#/definitions/ShallowReference"
        },
        "sourcePlan": {
          "description": "Shallow reference of the source",
          "$ref": "#/definitions/ShallowReference"
        },
        "sourceProject": {
          "description": "Shallow reference of the source",
          "$ref": "#/definitions/ShallowReference"
        },
        "state": {
          "description": "Current state of the operation. When State reaches Succeeded or Failed, the operation is complete",
          "enum": [
            "failed",
            "inProgress",
            "queued",
            "succeeded"
          ],
          "x-ms-enum": {
            "name": "CloneOperationState",
            "values": [
              {
                "value": "failed",
                "description": "value for Failed State"
              },
              {
                "value": "inProgress",
                "description": "value for Inprogress state"
              },
              {
                "value": "queued",
                "description": "Value for Queued State"
              },
              {
                "value": "succeeded",
                "description": "value for Success state"
              }
            ]
          }
        },
        "url": {
          "description": "Url for getting the clone information",
          "type": "string"
        }
      }
    },
    "CloneOptions": {
      "description": "Clone options for cloning the test suite.",
      "type": "object",
      "properties": {
        "cloneRequirements": {
          "description": "If set to true requirements will be cloned",
          "type": "boolean"
        },
        "copyAllSuites": {
          "description": "copy all suites from a source plan",
          "type": "boolean"
        },
        "copyAncestorHierarchy": {
          "description": "copy ancestor hierarchy",
          "type": "boolean"
        },
        "destinationWorkItemType": {
          "description": "Name of the workitem type of the clone",
          "type": "string"
        },
        "overrideParameters": {
          "description": "Key value pairs where the key value is overridden by the value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "relatedLinkComment": {
          "description": "Comment on the link that will link the new clone  test case to the original Set null for no comment",
          "type": "string"
        }
      }
    },
    "CloneStatistics": {
      "description": "Clone Statistics Details.",
      "type": "object",
      "properties": {
        "clonedRequirementsCount": {
          "description": "Number of requirements cloned so far.",
          "type": "integer",
          "format": "int32"
        },
        "clonedSharedStepsCount": {
          "description": "Number of shared steps cloned so far.",
          "type": "integer",
          "format": "int32"
        },
        "clonedTestCasesCount": {
          "description": "Number of test cases cloned so far",
          "type": "integer",
          "format": "int32"
        },
        "totalRequirementsCount": {
          "description": "Total number of requirements to be cloned",
          "type": "integer",
          "format": "int32"
        },
        "totalTestCasesCount": {
          "description": "Total number of test cases to be cloned",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CloneTestCaseOptions": {
      "description": "",
      "type": "object",
      "properties": {
        "includeAttachments": {
          "description": "If set to true, include the attachments",
          "type": "boolean"
        },
        "includeLinks": {
          "description": "If set to true, include the links",
          "type": "boolean"
        },
        "relatedLinkComment": {
          "description": "Comment on the link that will link the new clone  test case to the original Set null for no comment",
          "type": "string"
        }
      }
    },
    "CodeCoverageData": {
      "description": "Represents the build configuration (platform, flavor) and coverage data for the build",
      "type": "object",
      "properties": {
        "buildFlavor": {
          "description": "Flavor of build for which data is retrieved/published",
          "type": "string"
        },
        "buildPlatform": {
          "description": "Platform of build for which data is retrieved/published",
          "type": "string"
        },
        "coverageStats": {
          "description": "List of coverage data for the build",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeCoverageStatistics"
          }
        }
      }
    },
    "CodeCoverageStatistics": {
      "description": "Represents the code coverage statistics for a particular coverage label (modules, statements, blocks, etc.)",
      "type": "object",
      "properties": {
        "covered": {
          "description": "Covered units",
          "type": "integer",
          "format": "int32"
        },
        "delta": {
          "description": "Delta of coverage",
          "type": "number",
          "format": "double"
        },
        "isDeltaAvailable": {
          "description": "Is delta valid",
          "type": "boolean"
        },
        "label": {
          "description": "Label of coverage data (\"Blocks\", \"Statements\", \"Modules\", etc.)",
          "type": "string"
        },
        "position": {
          "description": "Position of label",
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "description": "Total units",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CodeCoverageSummary": {
      "description": "Represents the code coverage summary results Used to publish or retrieve code coverage summary against a build",
      "type": "object",
      "properties": {
        "build": {
          "description": "Uri of build for which data is retrieved/published",
          "$ref": "#/definitions/ShallowReference"
        },
        "coverageData": {
          "description": "List of coverage data and details for the build",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeCoverageData"
          }
        },
        "coverageDetailedSummaryStatus": {
          "enum": [
            "none",
            "inProgress",
            "finalized",
            "pending",
            "updateRequestQueued",
            "noModulesFound",
            "numberOfFilesExceeded",
            "noInputFiles",
            "buildCancelled",
            "failedJobs",
            "moduleMergeJobTimeout",
            "codeCoverageSuccess",
            "invalidBuildConfiguration",
            "coverageAnalyzerBuildNotFound",
            "failedToRequeue",
            "buildBailedOut",
            "noCodeCoverageTask",
            "mergeJobFailed",
            "mergeInvokerJobFailed",
            "monitorJobFailed",
            "moduleMergeInvokerJobTimeout",
            "monitorJobTimeout",
            "invalidCoverageInput"
          ],
          "x-ms-enum": {
            "name": "CoverageDetailedSummaryStatus",
            "values": [
              {
                "value": "none",
                "description": "No coverage status"
              },
              {
                "value": "inProgress",
                "description": "The summary evaluation is in progress"
              },
              {
                "value": "finalized",
                "description": "The summary evaluation is finalized and won't change"
              },
              {
                "value": "pending",
                "description": "The summary evaluation is pending"
              },
              {
                "value": "updateRequestQueued",
                "description": "Summary evaluation may be ongoing but another merge has been requested."
              },
              {
                "value": "noModulesFound",
                "description": "No coverage modules found"
              },
              {
                "value": "numberOfFilesExceeded",
                "description": "Number of Files exceeded"
              },
              {
                "value": "noInputFiles",
                "description": "TNo Input Files"
              },
              {
                "value": "buildCancelled",
                "description": "Build got cancelled by user"
              },
              {
                "value": "failedJobs",
                "description": "Coverage Jobs failed"
              },
              {
                "value": "moduleMergeJobTimeout",
                "description": "Module merge Timeout"
              },
              {
                "value": "codeCoverageSuccess",
                "description": "Coverage successfully completed"
              },
              {
                "value": "invalidBuildConfiguration",
                "description": "Invalid Build Configuration"
              },
              {
                "value": "coverageAnalyzerBuildNotFound",
                "description": "Coverage Analyzer Build not found"
              },
              {
                "value": "failedToRequeue",
                "description": "Failed to requeue the build"
              },
              {
                "value": "buildBailedOut",
                "description": "Build got Bailed out"
              },
              {
                "value": "noCodeCoverageTask",
                "description": "No Code coverage configured"
              },
              {
                "value": "mergeJobFailed",
                "description": "CoverageMerge Job failed"
              },
              {
                "value": "mergeInvokerJobFailed",
                "description": "CoverageMergeInvoker Job failed"
              },
              {
                "value": "monitorJobFailed",
                "description": "CoverageMonitor Job failed"
              },
              {
                "value": "moduleMergeInvokerJobTimeout",
                "description": "CoverageMergeInvoker Job timeout"
              },
              {
                "value": "monitorJobTimeout",
                "description": "CoverageMonitor Job timeout"
              },
              {
                "value": "invalidCoverageInput",
                "description": "Invalid Coverage Input file"
              }
            ]
          }
        },
        "deltaBuild": {
          "description": "Uri of build against which difference in coverage is computed",
          "$ref": "#/definitions/ShallowReference"
        },
        "status": {
          "description": "Uri of build against which difference in coverage is computed",
          "enum": [
            "none",
            "inProgress",
            "completed",
            "finalized",
            "pending",
            "updateRequestQueued"
          ],
          "x-ms-enum": {
            "name": "CoverageSummaryStatus",
            "values": [
              {
                "value": "none",
                "description": "No coverage status"
              },
              {
                "value": "inProgress",
                "description": "The summary evaluation is in progress"
              },
              {
                "value": "completed",
                "description": "The summary evaluation for the previous request is completed. Summary can change in future"
              },
              {
                "value": "finalized",
                "description": "The summary evaluation is finalized and won't change"
              },
              {
                "value": "pending",
                "description": "The summary evaluation is pending"
              },
              {
                "value": "updateRequestQueued",
                "description": "Summary evaluation may be ongoing but another merge has been requested."
              }
            ]
          }
        }
      }
    },
    "CodeCoverageSummary2": {
      "description": "",
      "type": "object",
      "properties": {
        "buildConfigurationId": {
          "type": "integer",
          "format": "int32"
        },
        "covered": {
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Coverage2": {
      "description": "",
      "type": "object",
      "properties": {
        "coverageId": {
          "type": "integer",
          "format": "int32"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "dateModified": {
          "type": "string",
          "format": "date-time"
        },
        "lastError": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "CoverageStatistics": {
      "description": "",
      "type": "object",
      "properties": {
        "blocksCovered": {
          "type": "integer",
          "format": "int32"
        },
        "blocksNotCovered": {
          "type": "integer",
          "format": "int32"
        },
        "linesCovered": {
          "type": "integer",
          "format": "int32"
        },
        "linesNotCovered": {
          "type": "integer",
          "format": "int32"
        },
        "linesPartiallyCovered": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CreateTestMessageLogEntryRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "testMessageLogEntry": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestMessageLogEntry"
          }
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CreateTestResultsRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegacyTestCaseResult"
          }
        }
      }
    },
    "CreateTestRunRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegacyTestCaseResult"
          }
        },
        "testRun": {
          "$ref": "#/definitions/LegacyTestRun"
        },
        "testSettings": {
          "$ref": "#/definitions/LegacyTestSettings"
        }
      }
    },
    "CustomTestField": {
      "description": "A custom field information. Allowed Key : Value pairs - ( AttemptId: int value, IsTestResultFlaky: bool)",
      "type": "object",
      "properties": {
        "fieldName": {
          "description": "Field Name.",
          "type": "string"
        },
        "value": {
          "description": "Field value.",
          "type": "object"
        }
      }
    },
    "CustomTestFieldDefinition": {
      "description": "",
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "integer",
          "format": "int32"
        },
        "fieldName": {
          "type": "string"
        },
        "fieldType": {
          "enum": [
            "bit",
            "dateTime",
            "int",
            "float",
            "string",
            "guid"
          ],
          "x-ms-enum": {
            "name": "CustomTestFieldType",
            "values": [
              {
                "value": "bit",
                "description": ""
              },
              {
                "value": "dateTime",
                "description": ""
              },
              {
                "value": "int",
                "description": ""
              },
              {
                "value": "float",
                "description": ""
              },
              {
                "value": "string",
                "description": ""
              },
              {
                "value": "guid",
                "description": ""
              }
            ]
          }
        },
        "scope": {
          "enum": [
            "none",
            "testRun",
            "testResult",
            "system",
            "all"
          ],
          "x-ms-enum": {
            "name": "CustomTestFieldScope",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "testRun",
                "description": ""
              },
              {
                "value": "testResult",
                "description": ""
              },
              {
                "value": "system",
                "description": ""
              },
              {
                "value": "all",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "DatedTestFieldData": {
      "description": "",
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "$ref": "#/definitions/TestFieldData"
        }
      }
    },
    "DefaultAfnStripBinding": {
      "description": "",
      "type": "object",
      "properties": {
        "testCaseId": {
          "type": "integer",
          "format": "int32"
        },
        "testResultId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DeleteTestRunRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "testRunIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "DownloadAttachmentsRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "lengths": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "DtlEnvironmentDetails": {
      "description": "This is a temporary class to provide the details for the test run environment.",
      "type": "object",
      "properties": {
        "csmContent": {
          "type": "string"
        },
        "csmParameters": {
          "type": "string"
        },
        "subscriptionName": {
          "type": "string"
        }
      }
    },
    "FailingSince": {
      "description": "Failing since information of a test result.",
      "type": "object",
      "properties": {
        "build": {
          "description": "Build reference since failing.",
          "$ref": "#/definitions/BuildReference"
        },
        "date": {
          "description": "Time since failing(UTC).",
          "type": "string",
          "format": "date-time"
        },
        "release": {
          "description": "Release reference since failing.",
          "$ref": "#/definitions/ReleaseReference"
        }
      }
    },
    "FetchTestResultsRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "idAndRevs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestCaseResultIdAndRev"
          }
        },
        "includeActionResults": {
          "type": "boolean"
        },
        "projectName": {
          "type": "string"
        }
      }
    },
    "FetchTestResultsResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "actionResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestActionResult"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultAttachment"
          }
        },
        "deletedIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegacyTestCaseResultIdentifier"
          }
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegacyTestCaseResult"
          }
        },
        "testParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultParameter"
          }
        }
      }
    },
    "FieldDetailsForTestResults": {
      "description": "",
      "type": "object",
      "properties": {
        "fieldName": {
          "description": "Group by field name",
          "type": "string"
        },
        "groupsForField": {
          "description": "Group by field values",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "FileCoverage": {
      "description": "",
      "type": "object",
      "properties": {
        "lineBlocksCoverage": {
          "description": "List of line blocks along with their coverage status",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineBlockCoverage"
          }
        },
        "path": {
          "description": "File path for which coverage information is sought for",
          "type": "string"
        }
      }
    },
    "FileCoverageRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "filePath": {
          "type": "string"
        },
        "pullRequestBaseIterationId": {
          "type": "integer",
          "format": "int32"
        },
        "pullRequestId": {
          "type": "integer",
          "format": "int32"
        },
        "pullRequestIterationId": {
          "type": "integer",
          "format": "int32"
        },
        "repoId": {
          "type": "string"
        }
      }
    },
    "FilterPointQuery": {
      "description": "",
      "type": "object",
      "properties": {
        "planId": {
          "type": "integer",
          "format": "int32"
        },
        "pointIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "pointOutcome": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "resultState": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "FlakyDetection": {
      "description": "",
      "type": "object",
      "properties": {
        "flakyDetectionPipelines": {
          "description": "FlakyDetectionPipelines defines Pipelines for Detection.",
          "$ref": "#/definitions/FlakyDetectionPipelines"
        },
        "flakyDetectionType": {
          "description": "FlakyDetectionType defines Detection type i.e. 1. System or 2. Manual.",
          "enum": [
            "custom",
            "system"
          ],
          "x-ms-enum": {
            "name": "FlakyDetectionType",
            "values": [
              {
                "value": "custom",
                "description": "Custom defines manual detection type."
              },
              {
                "value": "system",
                "description": "Defines System detection type."
              }
            ]
          }
        }
      }
    },
    "FlakyDetectionPipelines": {
      "description": "",
      "type": "object",
      "properties": {
        "allowedPipelines": {
          "description": "AllowedPipelines - List All Pipelines allowed for detection.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "isAllPipelinesAllowed": {
          "description": "IsAllPipelinesAllowed if users configure all system's pipelines.",
          "type": "boolean"
        }
      }
    },
    "FlakySettings": {
      "description": "",
      "type": "object",
      "properties": {
        "flakyDetection": {
          "description": "FlakyDetection defines types of detection.",
          "$ref": "#/definitions/FlakyDetection"
        },
        "flakyInSummaryReport": {
          "description": "FlakyInSummaryReport defines flaky data should show in summary report or not.",
          "type": "boolean"
        },
        "isFlakyBugCreated": {
          "description": "IsFlakyBugCreated defines if there is any bug that has been created with flaky testresult.",
          "type": "boolean"
        },
        "manualMarkUnmarkFlaky": {
          "description": "ManualMarkUnmarkFlaky defines manual marking unmarking of flaky testcase.",
          "type": "boolean"
        }
      }
    },
    "FunctionCoverage": {
      "description": "",
      "type": "object",
      "properties": {
        "class": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "sourceFile": {
          "type": "string"
        },
        "statistics": {
          "$ref": "#/definitions/CoverageStatistics"
        }
      }
    },
    "FunctionCoverage2": {
      "description": "",
      "type": "object",
      "properties": {
        "blocksCovered": {
          "type": "integer",
          "format": "int32"
        },
        "blocksNotCovered": {
          "type": "integer",
          "format": "int32"
        },
        "class": {
          "type": "string"
        },
        "coverageId": {
          "type": "integer",
          "format": "int32"
        },
        "functionId": {
          "type": "integer",
          "format": "int32"
        },
        "linesCovered": {
          "type": "integer",
          "format": "int32"
        },
        "linesNotCovered": {
          "type": "integer",
          "format": "int32"
        },
        "linesPartiallyCovered": {
          "type": "integer",
          "format": "int32"
        },
        "moduleId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "sourceFile": {
          "type": "string"
        }
      }
    },
    "GraphSubjectBase": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "description": "This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional relationships or more detailed information about this graph subject.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "descriptor": {
          "description": "The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Collections.",
          "type": "string"
        },
        "displayName": {
          "description": "This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.",
          "type": "string"
        },
        "url": {
          "description": "This url is the full route to the source resource of this graph subject.",
          "type": "string"
        }
      }
    },
    "HttpPostedTcmAttachment": {
      "description": "",
      "type": "object",
      "properties": {
        "attachmentContent": {
          "type": "string"
        },
        "contentLength": {
          "type": "integer",
          "format": "int32"
        },
        "contentType": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        }
      }
    },
    "IdentityRef": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GraphSubjectBase"
        }
      ],
      "properties": {
        "directoryAlias": {
          "description": "Deprecated - Can be retrieved by querying the Graph user referenced in the \"self\" entry of the IdentityRef \"_links\" dictionary",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "description": "Deprecated - Available in the \"avatar\" entry of the IdentityRef \"_links\" dictionary",
          "type": "string"
        },
        "inactive": {
          "description": "Deprecated - Can be retrieved by querying the Graph membership state referenced in the \"membershipState\" entry of the GraphUser \"_links\" dictionary",
          "type": "boolean"
        },
        "isAadIdentity": {
          "description": "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsAadUserType/Descriptor.IsAadGroupType)",
          "type": "boolean"
        },
        "isContainer": {
          "description": "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsGroupType)",
          "type": "boolean"
        },
        "isDeletedInOrigin": {
          "type": "boolean"
        },
        "profileUrl": {
          "description": "Deprecated - not in use in most preexisting implementations of ToIdentityRef",
          "type": "string"
        },
        "uniqueName": {
          "description": "Deprecated - use Domain+PrincipalName instead",
          "type": "string"
        }
      }
    },
    "JobReference": {
      "description": "Job in pipeline. This is related to matrixing in YAML.",
      "type": "object",
      "properties": {
        "attempt": {
          "description": "Attempt number of the job",
          "type": "integer",
          "format": "int32"
        },
        "jobName": {
          "description": "Matrixing in YAML generates copies of a job with different inputs in matrix. JobName is the name of those input. Maximum supported length for name is 256 character.",
          "type": "string"
        }
      }
    },
    "LastResultDetails": {
      "description": "Last result details of test point.",
      "type": "object",
      "properties": {
        "dateCompleted": {
          "description": "Completed date of last result.",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Duration of the last result in milliseconds.",
          "type": "integer",
          "format": "int64"
        },
        "runBy": {
          "description": "The user who executed the last result.",
          "$ref": "#/definitions/IdentityRef"
        }
      }
    },
    "LegacyBuildConfiguration": {
      "description": "",
      "type": "object",
      "properties": {
        "branchName": {
          "type": "string"
        },
        "buildConfigurationId": {
          "type": "integer",
          "format": "int32"
        },
        "buildDefinitionId": {
          "type": "integer",
          "format": "int32"
        },
        "buildDefinitionName": {
          "type": "string"
        },
        "buildFlavor": {
          "type": "string"
        },
        "buildId": {
          "type": "integer",
          "format": "int32"
        },
        "buildNumber": {
          "type": "string"
        },
        "buildPlatform": {
          "type": "string"
        },
        "buildQuality": {
          "type": "string"
        },
        "buildSystem": {
          "type": "string"
        },
        "buildUri": {
          "type": "string"
        },
        "completedDate": {
          "type": "string",
          "format": "date-time"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "oldBuildConfigurationId": {
          "type": "integer",
          "format": "int32"
        },
        "repositoryId": {
          "type": "string"
        },
        "repositoryType": {
          "type": "string"
        },
        "sourceVersion": {
          "type": "string"
        },
        "teamProjectName": {
          "type": "string"
        }
      }
    },
    "LegacyReleaseReference": {
      "description": "",
      "type": "object",
      "properties": {
        "attempt": {
          "type": "integer",
          "format": "int32"
        },
        "environmentCreationDate": {
          "type": "string",
          "format": "date-time"
        },
        "primaryArtifactBuildId": {
          "type": "integer",
          "format": "int32"
        },
        "primaryArtifactProjectId": {
          "type": "string"
        },
        "primaryArtifactType": {
          "type": "string"
        },
        "releaseCreationDate": {
          "type": "string",
          "format": "date-time"
        },
        "releaseDefId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseEnvDefId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseEnvId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseEnvName": {
          "type": "string"
        },
        "releaseEnvUri": {
          "type": "string"
        },
        "releaseId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseName": {
          "type": "string"
        },
        "releaseRefId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseUri": {
          "type": "string"
        }
      }
    },
    "LegacyTestCaseResult": {
      "description": "",
      "type": "object",
      "properties": {
        "afnStripId": {
          "type": "integer",
          "format": "int32"
        },
        "areaId": {
          "type": "integer",
          "format": "int32"
        },
        "areaUri": {
          "type": "string"
        },
        "automatedTestId": {
          "type": "string"
        },
        "automatedTestName": {
          "type": "string"
        },
        "automatedTestStorage": {
          "type": "string"
        },
        "automatedTestType": {
          "type": "string"
        },
        "automatedTestTypeId": {
          "type": "string"
        },
        "buildNumber": {
          "type": "string"
        },
        "buildReference": {
          "$ref": "#/definitions/LegacyBuildConfiguration"
        },
        "comment": {
          "type": "string"
        },
        "computerName": {
          "type": "string"
        },
        "configurationId": {
          "type": "integer",
          "format": "int32"
        },
        "configurationName": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestExtensionField"
          }
        },
        "dateCompleted": {
          "type": "string",
          "format": "date-time"
        },
        "dateStarted": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "errorMessage": {
          "type": "string"
        },
        "failingSince": {
          "$ref": "#/definitions/FailingSince"
        },
        "failureType": {
          "type": "string",
          "format": "byte"
        },
        "id": {
          "$ref": "#/definitions/LegacyTestCaseResultIdentifier"
        },
        "isRerun": {
          "type": "boolean"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "lastUpdatedByName": {
          "type": "string"
        },
        "outcome": {
          "type": "string",
          "format": "byte"
        },
        "owner": {
          "type": "string",
          "format": "uuid"
        },
        "ownerName": {
          "type": "string"
        },
        "priority": {
          "type": "string",
          "format": "byte"
        },
        "releaseReference": {
          "$ref": "#/definitions/LegacyReleaseReference"
        },
        "resetCount": {
          "type": "integer",
          "format": "int32"
        },
        "resolutionStateId": {
          "type": "integer",
          "format": "int32"
        },
        "resultGroupType": {
          "enum": [
            "none",
            "rerun",
            "dataDriven",
            "orderedTest",
            "generic"
          ],
          "x-ms-enum": {
            "name": "ResultGroupType",
            "values": [
              {
                "value": "none",
                "description": "Leaf node of test result."
              },
              {
                "value": "rerun",
                "description": "Hierarchy type of test result."
              },
              {
                "value": "dataDriven",
                "description": "Hierarchy type of test result."
              },
              {
                "value": "orderedTest",
                "description": "Hierarchy type of test result."
              },
              {
                "value": "generic",
                "description": "Unknown hierarchy type."
              }
            ]
          }
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "runBy": {
          "type": "string",
          "format": "uuid"
        },
        "runByName": {
          "type": "string"
        },
        "sequenceId": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "$ref": "#/definitions/TestExtensionField"
        },
        "state": {
          "type": "string",
          "format": "byte"
        },
        "subResultCount": {
          "type": "integer",
          "format": "int32"
        },
        "suiteName": {
          "type": "string"
        },
        "testCaseArea": {
          "type": "string"
        },
        "testCaseAreaUri": {
          "type": "string"
        },
        "testCaseId": {
          "type": "integer",
          "format": "int32"
        },
        "testCaseReferenceId": {
          "type": "integer",
          "format": "int32"
        },
        "testCaseRevision": {
          "type": "integer",
          "format": "int32"
        },
        "testCaseTitle": {
          "type": "string"
        },
        "testPlanId": {
          "type": "integer",
          "format": "int32"
        },
        "testPointId": {
          "type": "integer",
          "format": "int32"
        },
        "testResultId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunTitle": {
          "type": "string"
        },
        "testSuiteId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LegacyTestCaseResultIdentifier": {
      "description": "",
      "type": "object",
      "properties": {
        "areaUri": {
          "type": "string"
        },
        "testResultId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LegacyTestRun": {
      "description": "",
      "type": "object",
      "properties": {
        "bugsCount": {
          "type": "integer",
          "format": "int32"
        },
        "buildConfigurationId": {
          "type": "integer",
          "format": "int32"
        },
        "buildFlavor": {
          "type": "string"
        },
        "buildNumber": {
          "type": "string"
        },
        "buildPlatform": {
          "type": "string"
        },
        "buildReference": {
          "$ref": "#/definitions/LegacyBuildConfiguration"
        },
        "buildUri": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "completeDate": {
          "type": "string",
          "format": "date-time"
        },
        "configurationIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "controller": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "csmContent": {
          "type": "string"
        },
        "csmParameters": {
          "type": "string"
        },
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestExtensionField"
          }
        },
        "dropLocation": {
          "type": "string"
        },
        "dtlAutEnvironment": {
          "$ref": "#/definitions/ShallowReference"
        },
        "dtlTestEnvironment": {
          "$ref": "#/definitions/ShallowReference"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/RunFilter"
        },
        "incompleteTests": {
          "type": "integer",
          "format": "int32"
        },
        "isAutomated": {
          "type": "boolean"
        },
        "isBvt": {
          "type": "boolean"
        },
        "iteration": {
          "type": "string"
        },
        "iterationId": {
          "type": "integer",
          "format": "int32"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "lastUpdatedByName": {
          "type": "string"
        },
        "legacySharePath": {
          "type": "string"
        },
        "notApplicableTests": {
          "type": "integer",
          "format": "int32"
        },
        "owner": {
          "type": "string",
          "format": "uuid"
        },
        "ownerName": {
          "type": "string"
        },
        "passedTests": {
          "type": "integer",
          "format": "int32"
        },
        "postProcessState": {
          "type": "string",
          "format": "byte"
        },
        "publicTestSettingsId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseEnvironmentUri": {
          "type": "string"
        },
        "releaseReference": {
          "$ref": "#/definitions/LegacyReleaseReference"
        },
        "releaseUri": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "rowVersion": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "runHasDtlEnvironment": {
          "type": "boolean"
        },
        "runTimeout": {
          "type": "string",
          "format": "TimeSpan"
        },
        "serviceVersion": {
          "type": "string"
        },
        "sourceWorkflow": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string",
          "format": "byte"
        },
        "subscriptionName": {
          "type": "string"
        },
        "substate": {
          "type": "string",
          "format": "byte"
        },
        "teamProject": {
          "type": "string"
        },
        "teamProjectUri": {
          "type": "string"
        },
        "testConfigurationsMapping": {
          "type": "string"
        },
        "testEnvironmentId": {
          "type": "string",
          "format": "uuid"
        },
        "testMessageLogEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestMessageLogDetails"
          }
        },
        "testMessageLogId": {
          "type": "integer",
          "format": "int32"
        },
        "testPlanId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegacyTestRunStatistic"
          }
        },
        "testSettingsId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "totalTests": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string",
          "format": "byte"
        },
        "unanalyzedTests": {
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LegacyTestRunStatistic": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "outcome": {
          "type": "string",
          "format": "byte"
        },
        "resolutionState": {
          "$ref": "#/definitions/TestResolutionState"
        },
        "state": {
          "type": "string",
          "format": "byte"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LegacyTestSettings": {
      "description": "",
      "type": "object",
      "properties": {
        "areaId": {
          "type": "integer",
          "format": "int32"
        },
        "areaPath": {
          "type": "string"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "createdByName": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "isAutomated": {
          "type": "boolean"
        },
        "isPublic": {
          "type": "boolean"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "lastUpdatedByName": {
          "type": "string"
        },
        "machineRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestSettingsMachineRole"
          }
        },
        "name": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "settings": {
          "type": "string"
        },
        "teamProjectUri": {
          "type": "string"
        }
      }
    },
    "LineBlockCoverage": {
      "description": "",
      "type": "object",
      "properties": {
        "end": {
          "description": "End of line block",
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "description": "Start of line block",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "Coverage status. Covered: 0, NotCovered: 1,  PartiallyCovered: 2",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LinkedWorkItemsQuery": {
      "description": "",
      "type": "object",
      "properties": {
        "automatedTestNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "planId": {
          "type": "integer",
          "format": "int32"
        },
        "pointIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "suiteIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "testCaseIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "workItemCategory": {
          "type": "string"
        }
      }
    },
    "LinkedWorkItemsQueryResult": {
      "description": "",
      "type": "object",
      "properties": {
        "automatedTestName": {
          "type": "string"
        },
        "planId": {
          "type": "integer",
          "format": "int32"
        },
        "pointId": {
          "type": "integer",
          "format": "int32"
        },
        "suiteId": {
          "type": "integer",
          "format": "int32"
        },
        "testCaseId": {
          "type": "integer",
          "format": "int32"
        },
        "workItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemReference"
          }
        }
      }
    },
    "ModuleCoverage": {
      "description": "",
      "type": "object",
      "properties": {
        "blockCount": {
          "type": "integer",
          "format": "int32"
        },
        "blockData": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "fileUrl": {
          "description": "Code Coverage File Url",
          "type": "string"
        },
        "functions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunctionCoverage"
          }
        },
        "name": {
          "type": "string"
        },
        "signature": {
          "type": "string",
          "format": "uuid"
        },
        "signatureAge": {
          "type": "integer",
          "format": "int32"
        },
        "statistics": {
          "$ref": "#/definitions/CoverageStatistics"
        }
      }
    },
    "ModuleCoverage2": {
      "description": "",
      "type": "object",
      "properties": {
        "blockCount": {
          "type": "integer",
          "format": "int32"
        },
        "blockData": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "blockDataLength": {
          "type": "integer",
          "format": "int32"
        },
        "blocksCovered": {
          "type": "integer",
          "format": "int32"
        },
        "blocksNotCovered": {
          "type": "integer",
          "format": "int32"
        },
        "coverageFileUrl": {
          "type": "string"
        },
        "coverageId": {
          "type": "integer",
          "format": "int32"
        },
        "linesCovered": {
          "type": "integer",
          "format": "int32"
        },
        "linesNotCovered": {
          "type": "integer",
          "format": "int32"
        },
        "linesPartiallyCovered": {
          "type": "integer",
          "format": "int32"
        },
        "moduleId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "signature": {
          "type": "string",
          "format": "uuid"
        },
        "signatureAge": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NameValuePair": {
      "description": "Name value pair",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "value": {
          "description": "Value",
          "type": "string"
        }
      }
    },
    "NewTestResultLoggingSettings": {
      "description": "",
      "type": "object",
      "properties": {
        "logNewTests": {
          "description": "LogNewTests defines whether or not we will record new test cases coming into the system",
          "type": "boolean"
        }
      }
    },
    "PhaseReference": {
      "description": "Phase in pipeline",
      "type": "object",
      "properties": {
        "attempt": {
          "description": "Attempt number of the phase",
          "type": "integer",
          "format": "int32"
        },
        "phaseName": {
          "description": "Name of the phase. Maximum supported length for name is 256 character.",
          "type": "string"
        }
      }
    },
    "PipelineReference": {
      "description": "Pipeline reference",
      "type": "object",
      "properties": {
        "jobReference": {
          "description": "Reference of the job",
          "$ref": "#/definitions/JobReference"
        },
        "phaseReference": {
          "description": "Reference of the phase.",
          "$ref": "#/definitions/PhaseReference"
        },
        "pipelineId": {
          "description": "Reference of the pipeline with which this pipeline instance is related.",
          "type": "integer",
          "format": "int32"
        },
        "stageReference": {
          "description": "Reference of the stage.",
          "$ref": "#/definitions/StageReference"
        }
      }
    },
    "PipelineTestMetrics": {
      "description": "Test summary of a pipeline instance.",
      "type": "object",
      "properties": {
        "currentContext": {
          "description": "Reference of Pipeline instance for which test summary is calculated.",
          "$ref": "#/definitions/PipelineReference"
        },
        "resultsAnalysis": {
          "description": "This is the return value for metric ResultsAnalysis Results insights which include failure analysis, increase/decrease in results count analysis.",
          "$ref": "#/definitions/ResultsAnalysis"
        },
        "resultSummary": {
          "description": "This is the return value for metric ResultSummary Results summary based on results outcome.",
          "$ref": "#/definitions/ResultSummary"
        },
        "runSummary": {
          "description": "This is the return value for metric RunSummary Run summary.",
          "$ref": "#/definitions/RunSummary"
        },
        "summaryAtChild": {
          "description": "Summary at child node.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineTestMetrics"
          }
        }
      }
    },
    "PlanUpdateModel": {
      "description": "A model class used for creating and updating test plans.",
      "type": "object",
      "properties": {
        "area": {
          "description": "Area path to which the test plan belongs. This should be set to area path of the team that works on this test plan.",
          "$ref": "#/definitions/ShallowReference"
        },
        "build": {
          "description": "Build ID of the build whose quality is tested by the tests in this test plan. For automated testing, this build ID is used to find the test binaries that contain automated test methods.",
          "$ref": "#/definitions/ShallowReference"
        },
        "buildDefinition": {
          "description": "The Build Definition that generates a build associated with this test plan.",
          "$ref": "#/definitions/ShallowReference"
        },
        "configurationIds": {
          "description": "IDs of configurations to be applied when new test suites and test cases are added to the test plan.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": {
          "description": "Description of the test plan.",
          "type": "string"
        },
        "endDate": {
          "description": "End date for the test plan.",
          "type": "string"
        },
        "iteration": {
          "description": "Iteration path assigned to the test plan. This indicates when the target iteration by which the testing in this plan is supposed to be complete and the product is ready to be released.",
          "type": "string"
        },
        "name": {
          "description": "Name of the test plan.",
          "type": "string"
        },
        "owner": {
          "description": "Owner of the test plan.",
          "$ref": "#/definitions/IdentityRef"
        },
        "releaseEnvironmentDefinition": {
          "description": "Release Environment to be used to deploy the build and run automated tests from this test plan.",
          "$ref": "#/definitions/ReleaseEnvironmentDefinitionReference"
        },
        "startDate": {
          "description": "Start date for the test plan.",
          "type": "string"
        },
        "state": {
          "description": "State of the test plan.",
          "type": "string"
        },
        "testOutcomeSettings": {
          "description": "Test Outcome settings",
          "$ref": "#/definitions/TestOutcomeSettings"
        }
      }
    },
    "PointAssignment": {
      "description": "Adding test cases to a suite creates one of more test points based on the default configurations and testers assigned to the test suite. PointAssignment is the list of test points that were created for each of the test cases that were added to the test suite.",
      "type": "object",
      "properties": {
        "configuration": {
          "description": "Configuration that was assigned to the test case.",
          "$ref": "#/definitions/ShallowReference"
        },
        "tester": {
          "description": "Tester that was assigned to the test case",
          "$ref": "#/definitions/IdentityRef"
        }
      }
    },
    "PointLastResult": {
      "description": "",
      "type": "object",
      "properties": {
        "lastUpdatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "pointId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PointsFilter": {
      "description": "Filter class for test point.",
      "type": "object",
      "properties": {
        "configurationNames": {
          "description": "List of Configurations for filtering.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "testcaseIds": {
          "description": "List of test case id for filtering.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "testers": {
          "description": "List of tester for filtering.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityRef"
          }
        }
      }
    },
    "PointsReference2": {
      "description": "",
      "type": "object",
      "properties": {
        "planId": {
          "type": "integer",
          "format": "int32"
        },
        "pointId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PointsResults2": {
      "description": "",
      "type": "object",
      "properties": {
        "changeNumber": {
          "type": "integer",
          "format": "int32"
        },
        "lastFailureType": {
          "type": "string",
          "format": "byte"
        },
        "lastResolutionStateId": {
          "type": "integer",
          "format": "int32"
        },
        "lastResultOutcome": {
          "type": "string",
          "format": "byte"
        },
        "lastResultState": {
          "type": "string",
          "format": "byte"
        },
        "lastTestResultId": {
          "type": "integer",
          "format": "int32"
        },
        "lastTestRunId": {
          "type": "integer",
          "format": "int32"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "planId": {
          "type": "integer",
          "format": "int32"
        },
        "pointId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PointUpdateModel": {
      "description": "Model to update test point.",
      "type": "object",
      "properties": {
        "outcome": {
          "description": "Outcome to update.",
          "type": "string"
        },
        "resetToActive": {
          "description": "Reset test point to active.",
          "type": "boolean"
        },
        "tester": {
          "description": "Tester to update. Type IdentityRef.",
          "$ref": "#/definitions/IdentityRef"
        }
      }
    },
    "PointWorkItemProperty": {
      "description": "Test point workitem property.",
      "type": "object",
      "properties": {
        "workItem": {
          "description": "key value pair of test point work item property.",
          "type": "object"
        }
      }
    },
    "PropertyBag": {
      "description": "The class to represent a Generic store for test session data.",
      "type": "object",
      "properties": {
        "bag": {
          "description": "Generic store for test session data",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "QueryByPointRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "testPlanId": {
          "type": "integer",
          "format": "int32"
        },
        "testPointId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "QueryByRunRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "includeActionResults": {
          "type": "boolean"
        },
        "outcome": {
          "type": "string",
          "format": "byte"
        },
        "owner": {
          "type": "string",
          "format": "uuid"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "projectName": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "format": "byte"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "QueryModel": {
      "description": "",
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      }
    },
    "QueryTestActionResultRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "identifier": {
          "$ref": "#/definitions/LegacyTestCaseResultIdentifier"
        },
        "projectName": {
          "type": "string"
        }
      }
    },
    "QueryTestActionResultResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "testActionResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestActionResult"
          }
        },
        "testAttachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultAttachment"
          }
        },
        "testResultParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultParameter"
          }
        }
      }
    },
    "QueryTestMessageLogEntryRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "testMessageLogId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "QueryTestRuns2Request": {
      "description": "",
      "type": "object",
      "properties": {
        "includeStatistics": {
          "type": "boolean"
        },
        "query": {
          "$ref": "#/definitions/ResultsStoreQuery"
        }
      }
    },
    "QueryTestRunsRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "buildUri": {
          "type": "string"
        },
        "owner": {
          "type": "string",
          "format": "uuid"
        },
        "planId": {
          "type": "integer",
          "format": "int32"
        },
        "skip": {
          "type": "integer",
          "format": "int32"
        },
        "teamProjectName": {
          "type": "string"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        },
        "top": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "QueryTestRunStatsRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "teamProjectName": {
          "type": "string"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ReleaseEnvironmentDefinitionReference": {
      "description": "Reference to release environment resource.",
      "type": "object",
      "properties": {
        "definitionId": {
          "description": "ID of the release definition that contains the release environment definition.",
          "type": "integer",
          "format": "int32"
        },
        "environmentDefinitionId": {
          "description": "ID of the release environment definition.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReleaseReference": {
      "description": "Reference to a release.",
      "type": "object",
      "properties": {
        "attempt": {
          "description": "Number of Release Attempt.",
          "type": "integer",
          "format": "int32"
        },
        "creationDate": {
          "description": "Release Creation Date(UTC).",
          "type": "string",
          "format": "date-time"
        },
        "definitionId": {
          "description": "Release definition ID.",
          "type": "integer",
          "format": "int32"
        },
        "environmentCreationDate": {
          "description": "Environment creation Date(UTC).",
          "type": "string",
          "format": "date-time"
        },
        "environmentDefinitionId": {
          "description": "Release environment definition ID.",
          "type": "integer",
          "format": "int32"
        },
        "environmentDefinitionName": {
          "description": "Release environment definition name.",
          "type": "string"
        },
        "environmentId": {
          "description": "Release environment ID.",
          "type": "integer",
          "format": "int32"
        },
        "environmentName": {
          "description": "Release environment name.",
          "type": "string"
        },
        "id": {
          "description": "Release ID.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Release name.",
          "type": "string"
        }
      }
    },
    "ReleaseReference2": {
      "description": "",
      "type": "object",
      "properties": {
        "attempt": {
          "type": "integer",
          "format": "int32"
        },
        "environmentCreationDate": {
          "type": "string",
          "format": "date-time"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "releaseCreationDate": {
          "type": "string",
          "format": "date-time"
        },
        "releaseDefId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseEnvDefId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseEnvId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseEnvName": {
          "type": "string"
        },
        "releaseEnvUri": {
          "type": "string"
        },
        "releaseId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseName": {
          "type": "string"
        },
        "releaseRefId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseUri": {
          "type": "string"
        }
      }
    },
    "RequirementsToTestsMapping2": {
      "description": "",
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletedBy": {
          "type": "string",
          "format": "uuid"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "isMigratedToWIT": {
          "type": "boolean"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "testMetadataId": {
          "type": "integer",
          "format": "int32"
        },
        "workItemId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResetTestResultsRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegacyTestCaseResultIdentifier"
          }
        },
        "projectName": {
          "type": "string"
        }
      }
    },
    "Response": {
      "description": "",
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "enum": [
            "continue",
            "switchingProtocols",
            "ok",
            "created",
            "accepted",
            "nonAuthoritativeInformation",
            "noContent",
            "resetContent",
            "partialContent",
            "multipleChoices",
            "ambiguous",
            "movedPermanently",
            "moved",
            "found",
            "redirect",
            "seeOther",
            "redirectMethod",
            "notModified",
            "useProxy",
            "unused",
            "temporaryRedirect",
            "redirectKeepVerb",
            "badRequest",
            "unauthorized",
            "paymentRequired",
            "forbidden",
            "notFound",
            "methodNotAllowed",
            "notAcceptable",
            "proxyAuthenticationRequired",
            "requestTimeout",
            "conflict",
            "gone",
            "lengthRequired",
            "preconditionFailed",
            "requestEntityTooLarge",
            "requestUriTooLong",
            "unsupportedMediaType",
            "requestedRangeNotSatisfiable",
            "expectationFailed",
            "upgradeRequired",
            "internalServerError",
            "notImplemented",
            "badGateway",
            "serviceUnavailable",
            "gatewayTimeout",
            "httpVersionNotSupported"
          ],
          "x-ms-enum": {
            "name": "HttpStatusCode",
            "values": [
              {
                "value": "continue",
                "description": ""
              },
              {
                "value": "switchingProtocols",
                "description": ""
              },
              {
                "value": "ok",
                "description": ""
              },
              {
                "value": "created",
                "description": ""
              },
              {
                "value": "accepted",
                "description": ""
              },
              {
                "value": "nonAuthoritativeInformation",
                "description": ""
              },
              {
                "value": "noContent",
                "description": ""
              },
              {
                "value": "resetContent",
                "description": ""
              },
              {
                "value": "partialContent",
                "description": ""
              },
              {
                "value": "multipleChoices",
                "description": ""
              },
              {
                "value": "ambiguous",
                "description": ""
              },
              {
                "value": "movedPermanently",
                "description": ""
              },
              {
                "value": "moved",
                "description": ""
              },
              {
                "value": "found",
                "description": ""
              },
              {
                "value": "redirect",
                "description": ""
              },
              {
                "value": "seeOther",
                "description": ""
              },
              {
                "value": "redirectMethod",
                "description": ""
              },
              {
                "value": "notModified",
                "description": ""
              },
              {
                "value": "useProxy",
                "description": ""
              },
              {
                "value": "unused",
                "description": ""
              },
              {
                "value": "temporaryRedirect",
                "description": ""
              },
              {
                "value": "redirectKeepVerb",
                "description": ""
              },
              {
                "value": "badRequest",
                "description": ""
              },
              {
                "value": "unauthorized",
                "description": ""
              },
              {
                "value": "paymentRequired",
                "description": ""
              },
              {
                "value": "forbidden",
                "description": ""
              },
              {
                "value": "notFound",
                "description": ""
              },
              {
                "value": "methodNotAllowed",
                "description": ""
              },
              {
                "value": "notAcceptable",
                "description": ""
              },
              {
                "value": "proxyAuthenticationRequired",
                "description": ""
              },
              {
                "value": "requestTimeout",
                "description": ""
              },
              {
                "value": "conflict",
                "description": ""
              },
              {
                "value": "gone",
                "description": ""
              },
              {
                "value": "lengthRequired",
                "description": ""
              },
              {
                "value": "preconditionFailed",
                "description": ""
              },
              {
                "value": "requestEntityTooLarge",
                "description": ""
              },
              {
                "value": "requestUriTooLong",
                "description": ""
              },
              {
                "value": "unsupportedMediaType",
                "description": ""
              },
              {
                "value": "requestedRangeNotSatisfiable",
                "description": ""
              },
              {
                "value": "expectationFailed",
                "description": ""
              },
              {
                "value": "upgradeRequired",
                "description": ""
              },
              {
                "value": "internalServerError",
                "description": ""
              },
              {
                "value": "notImplemented",
                "description": ""
              },
              {
                "value": "badGateway",
                "description": ""
              },
              {
                "value": "serviceUnavailable",
                "description": ""
              },
              {
                "value": "gatewayTimeout",
                "description": ""
              },
              {
                "value": "httpVersionNotSupported",
                "description": ""
              }
            ]
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ResultRetentionSettings": {
      "description": "Test result retention settings",
      "type": "object",
      "properties": {
        "automatedResultsRetentionDuration": {
          "description": "Automated test result retention duration in days",
          "type": "integer",
          "format": "int32"
        },
        "lastUpdatedBy": {
          "description": "Last Updated by identity",
          "$ref": "#/definitions/IdentityRef"
        },
        "lastUpdatedDate": {
          "description": "Last updated date",
          "type": "string",
          "format": "date-time"
        },
        "manualResultsRetentionDuration": {
          "description": "Manual test result retention duration in days",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResultsAnalysis": {
      "description": "Results insights for runs with state completed and NeedInvestigation.",
      "type": "object",
      "properties": {
        "previousContext": {
          "description": "Reference of pipeline instance from which to compare the results.",
          "$ref": "#/definitions/PipelineReference"
        },
        "resultsDifference": {
          "description": "Increase/Decrease in counts of results for a different outcome with respect to PreviousContext.",
          "$ref": "#/definitions/AggregatedResultsDifference"
        },
        "testFailuresAnalysis": {
          "description": "Failure analysis of results with respect to PreviousContext",
          "$ref": "#/definitions/TestResultFailuresAnalysis"
        }
      }
    },
    "ResultsByQueryRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "$ref": "#/definitions/ResultsStoreQuery"
        }
      }
    },
    "ResultsByQueryResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "excessIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegacyTestCaseResultIdentifier"
          }
        },
        "testResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegacyTestCaseResult"
          }
        }
      }
    },
    "ResultsFilter": {
      "description": "",
      "type": "object",
      "properties": {
        "automatedTestName": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "executedIn": {
          "enum": [
            "any",
            "tcm",
            "tfs"
          ],
          "x-ms-enum": {
            "name": "Service",
            "values": [
              {
                "value": "any",
                "description": ""
              },
              {
                "value": "tcm",
                "description": ""
              },
              {
                "value": "tfs",
                "description": ""
              }
            ]
          }
        },
        "groupBy": {
          "type": "string"
        },
        "maxCompleteDate": {
          "type": "string",
          "format": "date-time"
        },
        "resultsCount": {
          "type": "integer",
          "format": "int32"
        },
        "testCaseId": {
          "type": "integer",
          "format": "int32"
        },
        "testCaseReferenceIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "testPlanId": {
          "type": "integer",
          "format": "int32"
        },
        "testPointIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "testResultsContext": {
          "$ref": "#/definitions/TestResultsContext"
        },
        "trendDays": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResultsStoreQuery": {
      "description": "",
      "type": "object",
      "properties": {
        "dayPrecision": {
          "type": "boolean"
        },
        "queryText": {
          "type": "string"
        },
        "teamProjectName": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      }
    },
    "ResultsSummaryByOutcome": {
      "description": "Result summary by the outcome of test results.",
      "type": "object",
      "properties": {
        "aggregatedResultDetailsByOutcome": {
          "description": "Aggregated result details for each test result outcome.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AggregatedResultDetailsByOutcome"
          }
        },
        "duration": {
          "description": "Time taken by results.",
          "type": "string",
          "format": "TimeSpan"
        },
        "notReportedTestCount": {
          "description": "Total number of not reported test results.",
          "type": "integer",
          "format": "int32"
        },
        "totalTestCount": {
          "description": "Total number of test results. (It includes NotImpacted test results as well which need to exclude while calculating pass/fail test result percentage).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResultSummary": {
      "description": "Summary of results for a pipeline instance.",
      "type": "object",
      "properties": {
        "resultSummaryByRunState": {
          "description": "Result summary of pipeline, group by TestRun state.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResultsSummaryByOutcome"
          }
        }
      }
    },
    "ResultUpdateRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "actionResultDeletes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestActionResult"
          }
        },
        "actionResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestActionResult"
          }
        },
        "attachmentDeletes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultAttachmentIdentity"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultAttachment"
          }
        },
        "parameterDeletes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultParameter"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultParameter"
          }
        },
        "testCaseResult": {
          "$ref": "#/definitions/LegacyTestCaseResult"
        },
        "testResultId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResultUpdateRequestModel": {
      "description": "",
      "type": "object",
      "properties": {
        "actionResultDeletes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestActionResultModel"
          }
        },
        "actionResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestActionResultModel"
          }
        },
        "parameterDeletes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultParameterModel"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultParameterModel"
          }
        },
        "testCaseResult": {
          "$ref": "#/definitions/TestCaseResultUpdateModel"
        }
      }
    },
    "ResultUpdateResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "attachmentIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "lastUpdatedByName": {
          "type": "string"
        },
        "maxReservedSubResultId": {
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "testPlanId": {
          "type": "integer",
          "format": "int32"
        },
        "testResultId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResultUpdateResponseModel": {
      "description": "",
      "type": "object",
      "properties": {
        "revision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RunCreateModel": {
      "description": "Test run create details.",
      "type": "object",
      "properties": {
        "automated": {
          "description": "true if test run is automated, false otherwise. By default it will be false.",
          "type": "boolean"
        },
        "build": {
          "description": "An abstracted reference to the build that it belongs.",
          "$ref": "#/definitions/ShallowReference"
        },
        "buildDropLocation": {
          "description": "Drop location of the build used for test run.",
          "type": "string"
        },
        "buildFlavor": {
          "description": "Flavor of the build used for test run. (E.g: Release, Debug)",
          "type": "string"
        },
        "buildPlatform": {
          "description": "Platform of the build used for test run. (E.g.: x86, amd64)",
          "type": "string"
        },
        "buildReference": {
          "description": "BuildReference of the test run.",
          "$ref": "#/definitions/BuildConfiguration"
        },
        "comment": {
          "description": "Comments entered by those analyzing the run.",
          "type": "string"
        },
        "completeDate": {
          "description": "Completed date time of the run.",
          "type": "string"
        },
        "configurationIds": {
          "description": "IDs of the test configurations associated with the run.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "controller": {
          "description": "Name of the test controller used for automated run.",
          "type": "string"
        },
        "customTestFields": {
          "description": "Additional properties of test Run.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomTestField"
          }
        },
        "dtlAutEnvironment": {
          "description": "An abstracted reference to DtlAutEnvironment.",
          "$ref": "#/definitions/ShallowReference"
        },
        "dtlTestEnvironment": {
          "description": "An abstracted reference to DtlTestEnvironment.",
          "$ref": "#/definitions/ShallowReference"
        },
        "dueDate": {
          "description": "Due date and time for test run.",
          "type": "string"
        },
        "environmentDetails": {
          "$ref": "#/definitions/DtlEnvironmentDetails"
        },
        "errorMessage": {
          "description": "Error message associated with the run.",
          "type": "string"
        },
        "filter": {
          "description": "Filter used for discovering the Run.",
          "$ref": "#/definitions/RunFilter"
        },
        "iteration": {
          "description": "The iteration in which to create the run. Root iteration of the team project will be default",
          "type": "string"
        },
        "name": {
          "description": "Name of the test run.",
          "type": "string"
        },
        "owner": {
          "description": "Display name of the owner of the run.",
          "$ref": "#/definitions/IdentityRef"
        },
        "pipelineReference": {
          "description": "Reference of the pipeline to which this test run belongs. PipelineReference.PipelineId should be equal to RunCreateModel.Build.Id",
          "$ref": "#/definitions/PipelineReference"
        },
        "plan": {
          "description": "An abstracted reference to the plan that it belongs.",
          "$ref": "#/definitions/ShallowReference"
        },
        "pointIds": {
          "description": "IDs of the test points to use in the run.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "releaseEnvironmentUri": {
          "description": "URI of release environment associated with the run.",
          "type": "string"
        },
        "releaseReference": {
          "description": "Reference to release associated with test run.",
          "$ref": "#/definitions/ReleaseReference"
        },
        "releaseUri": {
          "description": "URI of release associated with the run.",
          "type": "string"
        },
        "runSummary": {
          "description": "Run summary for run Type = NoConfigRun.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RunSummaryModel"
          }
        },
        "runTimeout": {
          "description": "Timespan till the run times out.",
          "type": "string",
          "format": "TimeSpan"
        },
        "sourceWorkflow": {
          "description": "SourceWorkFlow(CI/CD) of the test run.",
          "type": "string"
        },
        "startDate": {
          "description": "Start date time of the run.",
          "type": "string"
        },
        "state": {
          "description": "The state of the run. Type TestRunState Valid states - NotStarted, InProgress, Waiting",
          "type": "string"
        },
        "tags": {
          "description": "Tags to attach with the test run, maximum of 5 tags can be added to run.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestTag"
          }
        },
        "testConfigurationsMapping": {
          "description": "TestConfigurationMapping of the test run.",
          "type": "string"
        },
        "testEnvironmentId": {
          "description": "ID of the test environment associated with the run.",
          "type": "string"
        },
        "testSettings": {
          "description": "An abstracted reference to the test settings resource.",
          "$ref": "#/definitions/ShallowReference"
        },
        "type": {
          "description": "Type of the run(RunType) Valid Values : (Unspecified, Normal, Blocking, Web, MtrRunInitiatedFromWeb, RunWithDtlEnv, NoConfigRun)",
          "type": "string"
        }
      }
    },
    "RunFilter": {
      "description": "This class is used to provide the filters used for discovery",
      "type": "object",
      "properties": {
        "sourceFilter": {
          "description": "filter for the test case sources (test containers)",
          "type": "string"
        },
        "testCaseFilter": {
          "description": "filter for the test cases",
          "type": "string"
        }
      }
    },
    "RunStatistic": {
      "description": "Test run statistics per outcome.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Test result count fo the given outcome.",
          "type": "integer",
          "format": "int32"
        },
        "outcome": {
          "description": "Test result outcome",
          "type": "string"
        },
        "resolutionState": {
          "description": "Test run Resolution State.",
          "$ref": "#/definitions/TestResolutionState"
        },
        "resultMetadata": {
          "description": "ResultMetadata for the given outcome/count.",
          "enum": [
            "rerun",
            "flaky"
          ],
          "x-ms-enum": {
            "name": "ResultMetadata",
            "values": [
              {
                "value": "rerun",
                "description": "Rerun metadata"
              },
              {
                "value": "flaky",
                "description": "Flaky metadata"
              }
            ]
          }
        },
        "state": {
          "description": "State of the test run",
          "type": "string"
        }
      }
    },
    "RunSummary": {
      "description": "Summary of runs for a pipeline instance.",
      "type": "object",
      "properties": {
        "duration": {
          "description": "Total time taken by runs with state completed and NeedInvestigation.",
          "type": "string",
          "format": "TimeSpan"
        },
        "noConfigRunsCount": {
          "description": "NoConfig runs count.",
          "type": "integer",
          "format": "int32"
        },
        "runSummaryByOutcome": {
          "description": "Runs count by outcome for runs with state completed and NeedInvestigation runs.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "runSummaryByState": {
          "description": "Runs count by state.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "totalRunsCount": {
          "description": "Total runs count.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RunSummaryModel": {
      "description": "Run summary for each output type of test.",
      "type": "object",
      "properties": {
        "duration": {
          "description": "Total time taken in milliseconds.",
          "type": "integer",
          "format": "int64"
        },
        "resultCount": {
          "description": "Number of results for Outcome TestOutcome",
          "type": "integer",
          "format": "int32"
        },
        "testOutcome": {
          "description": "Summary is based on outcome",
          "enum": [
            "unspecified",
            "none",
            "passed",
            "failed",
            "inconclusive",
            "timeout",
            "aborted",
            "blocked",
            "notExecuted",
            "warning",
            "error",
            "notApplicable",
            "paused",
            "inProgress",
            "notImpacted"
          ],
          "x-ms-enum": {
            "name": "TestOutcome",
            "values": [
              {
                "value": "unspecified",
                "description": "Only used during an update to preserve the existing value."
              },
              {
                "value": "none",
                "description": "Test has not been completed, or the test type does not report pass/failure."
              },
              {
                "value": "passed",
                "description": "Test was executed w/o any issues."
              },
              {
                "value": "failed",
                "description": "Test was executed, but there were issues. Issues may involve exceptions or failed assertions."
              },
              {
                "value": "inconclusive",
                "description": "Test has completed, but we can't say if it passed or failed. May be used for aborted tests..."
              },
              {
                "value": "timeout",
                "description": "The test timed out"
              },
              {
                "value": "aborted",
                "description": "Test was aborted. This was not caused by a user gesture, but rather by a framework decision."
              },
              {
                "value": "blocked",
                "description": "Test had it chance for been executed but was not, as ITestElement.IsRunnable == false."
              },
              {
                "value": "notExecuted",
                "description": "Test was not executed. This was caused by a user gesture - e.g. user hit stop button."
              },
              {
                "value": "warning",
                "description": "To be used by Run level results. This is not a failure."
              },
              {
                "value": "error",
                "description": "There was a system error while we were trying to execute a test."
              },
              {
                "value": "notApplicable",
                "description": "Test is Not Applicable for execution."
              },
              {
                "value": "paused",
                "description": "Test is paused."
              },
              {
                "value": "inProgress",
                "description": "Test is currently executing. Added this for TCM charts"
              },
              {
                "value": "notImpacted",
                "description": "Test is not impacted. Added fot TIA."
              }
            ]
          }
        }
      }
    },
    "RunUpdateModel": {
      "description": "",
      "type": "object",
      "properties": {
        "build": {
          "description": "An abstracted reference to the build that it belongs.",
          "$ref": "#/definitions/ShallowReference"
        },
        "buildDropLocation": {
          "description": "Drop location of the build used for test run.",
          "type": "string"
        },
        "buildFlavor": {
          "description": "Flavor of the build used for test run. (E.g: Release, Debug)",
          "type": "string"
        },
        "buildPlatform": {
          "description": "Platform of the build used for test run. (E.g.: x86, amd64)",
          "type": "string"
        },
        "comment": {
          "description": "Comments entered by those analyzing the run.",
          "type": "string"
        },
        "completedDate": {
          "description": "Completed date time of the run.",
          "type": "string"
        },
        "controller": {
          "description": "Name of the test controller used for automated run.",
          "type": "string"
        },
        "deleteInProgressResults": {
          "description": "true to delete inProgess Results , false otherwise.",
          "type": "boolean"
        },
        "dtlAutEnvironment": {
          "description": "An abstracted reference to DtlAutEnvironment.",
          "$ref": "#/definitions/ShallowReference"
        },
        "dtlEnvironment": {
          "description": "An abstracted reference to DtlEnvironment.",
          "$ref": "#/definitions/ShallowReference"
        },
        "dtlEnvironmentDetails": {
          "$ref": "#/definitions/DtlEnvironmentDetails"
        },
        "dueDate": {
          "description": "Due date and time for test run.",
          "type": "string"
        },
        "errorMessage": {
          "description": "Error message associated with the run.",
          "type": "string"
        },
        "iteration": {
          "description": "The iteration in which to create the run.",
          "type": "string"
        },
        "logEntries": {
          "description": "Log entries associated with the run. Use a comma-separated list of multiple log entry objects. { logEntry }, { logEntry }, ...",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestMessageLogDetails"
          }
        },
        "name": {
          "description": "Name of the test run.",
          "type": "string"
        },
        "releaseEnvironmentUri": {
          "description": "URI of release environment associated with the run.",
          "type": "string"
        },
        "releaseUri": {
          "description": "URI of release associated with the run.",
          "type": "string"
        },
        "runSummary": {
          "description": "Run summary for run Type = NoConfigRun.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RunSummaryModel"
          }
        },
        "sourceWorkflow": {
          "description": "SourceWorkFlow(CI/CD) of the test run.",
          "type": "string"
        },
        "startedDate": {
          "description": "Start date time of the run.",
          "type": "string"
        },
        "state": {
          "description": "The state of the test run Below are the valid values - NotStarted, InProgress, Completed, Aborted, Waiting",
          "type": "string"
        },
        "substate": {
          "description": "The types of sub states for test run.",
          "enum": [
            "none",
            "creatingEnvironment",
            "runningTests",
            "canceledByUser",
            "abortedBySystem",
            "timedOut",
            "pendingAnalysis",
            "analyzed",
            "cancellationInProgress"
          ],
          "x-ms-enum": {
            "name": "TestRunSubstate",
            "values": [
              {
                "value": "none",
                "description": "Run with noState."
              },
              {
                "value": "creatingEnvironment",
                "description": "Run state while Creating Environment."
              },
              {
                "value": "runningTests",
                "description": "Run state while Running Tests."
              },
              {
                "value": "canceledByUser",
                "description": "Run state while Creating Environment."
              },
              {
                "value": "abortedBySystem",
                "description": "Run state when it is Aborted By the System."
              },
              {
                "value": "timedOut",
                "description": "Run state when run has timedOut."
              },
              {
                "value": "pendingAnalysis",
                "description": "Run state while Pending Analysis."
              },
              {
                "value": "analyzed",
                "description": "Run state after being Analysed."
              },
              {
                "value": "cancellationInProgress",
                "description": "Run state when cancellation is in Progress."
              }
            ]
          }
        },
        "tags": {
          "description": "Tags to attach with the test run.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestTag"
          }
        },
        "testEnvironmentId": {
          "description": "ID of the test environment associated with the run.",
          "type": "string"
        },
        "testSettings": {
          "description": "An abstracted reference to test setting resource.",
          "$ref": "#/definitions/ShallowReference"
        }
      }
    },
    "ShallowReference": {
      "description": "An abstracted reference to some other resource. This class is used to provide the build data contracts with a uniform way to reference other resources in a way that provides easy traversal through links.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the resource",
          "type": "string"
        },
        "name": {
          "description": "Name of the linked resource (definition name, controller name, etc.)",
          "type": "string"
        },
        "url": {
          "description": "Full http link to the resource",
          "type": "string"
        }
      }
    },
    "ShallowTestCaseResult": {
      "description": "",
      "type": "object",
      "properties": {
        "automatedTestName": {
          "type": "string"
        },
        "automatedTestStorage": {
          "type": "string"
        },
        "durationInMs": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "isReRun": {
          "type": "boolean"
        },
        "outcome": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "refId": {
          "type": "integer",
          "format": "int32"
        },
        "runId": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "testCaseTitle": {
          "type": "string"
        }
      }
    },
    "SharedStepModel": {
      "description": "Reference to shared step workitem.",
      "type": "object",
      "properties": {
        "id": {
          "description": "WorkItem shared step ID.",
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "description": "Shared step workitem revision.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "StageReference": {
      "description": "Stage in pipeline",
      "type": "object",
      "properties": {
        "attempt": {
          "description": "Attempt number of stage",
          "type": "integer",
          "format": "int32"
        },
        "stageName": {
          "description": "Name of the stage. Maximum supported length for name is 256 character.",
          "type": "string"
        }
      }
    },
    "SuiteCreateModel": {
      "description": "Suite create model",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of test suite.",
          "type": "string"
        },
        "queryString": {
          "description": "For query based suites, query string that defines the suite.",
          "type": "string"
        },
        "requirementIds": {
          "description": "For requirements test suites, the IDs of the requirements.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "suiteType": {
          "description": "Type of test suite to create. It can have value from DynamicTestSuite, StaticTestSuite and RequirementTestSuite.",
          "type": "string"
        }
      }
    },
    "SuiteEntry": {
      "description": "A suite entry defines properties for a test suite.",
      "type": "object",
      "properties": {
        "childSuiteId": {
          "description": "Id of child suite in the test suite.",
          "type": "integer",
          "format": "int32"
        },
        "sequenceNumber": {
          "description": "Sequence number for the test case or child test suite in the test suite.",
          "type": "integer",
          "format": "int32"
        },
        "suiteId": {
          "description": "Id for the test suite.",
          "type": "integer",
          "format": "int32"
        },
        "testCaseId": {
          "description": "Id of a test case in the test suite.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SuiteEntryUpdateModel": {
      "description": "A model to define sequence of test suite entries in a test suite.",
      "type": "object",
      "properties": {
        "childSuiteId": {
          "description": "Id of the child suite in the test suite.",
          "type": "integer",
          "format": "int32"
        },
        "sequenceNumber": {
          "description": "Updated sequence number for the test case or child test suite in the test suite.",
          "type": "integer",
          "format": "int32"
        },
        "testCaseId": {
          "description": "Id of the test case in the test suite.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SuiteTestCase": {
      "description": "Test case for the suite.",
      "type": "object",
      "properties": {
        "pointAssignments": {
          "description": "Point Assignment for test suite's test case.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PointAssignment"
          }
        },
        "testCase": {
          "description": "Test case workItem reference.",
          "$ref": "#/definitions/WorkItemReference"
        }
      }
    },
    "SuiteTestCaseUpdateModel": {
      "description": "Test suite update model.",
      "type": "object",
      "properties": {
        "configurations": {
          "description": "Shallow reference of configurations for the test cases in the suite.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShallowReference"
          }
        }
      }
    },
    "SuiteUpdateModel": {
      "description": "Test suite update model.",
      "type": "object",
      "properties": {
        "defaultConfigurations": {
          "description": "Shallow reference of default configurations for the suite.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShallowReference"
          }
        },
        "defaultTesters": {
          "description": "Shallow reference of test suite.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShallowReference"
          }
        },
        "inheritDefaultConfigurations": {
          "description": "Specifies if the default configurations have to be inherited from the parent test suite in which the test suite is created.",
          "type": "boolean"
        },
        "name": {
          "description": "Test suite name",
          "type": "string"
        },
        "parent": {
          "description": "Shallow reference of the parent.",
          "$ref": "#/definitions/ShallowReference"
        },
        "queryString": {
          "description": "For query based suites, the new query string.",
          "type": "string"
        }
      }
    },
    "TCMPropertyBag2": {
      "description": "",
      "type": "object",
      "properties": {
        "artifactId": {
          "type": "integer",
          "format": "int32"
        },
        "artifactType": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "TeamContext": {
      "description": "The Team Context for an operation.",
      "type": "object",
      "properties": {
        "project": {
          "description": "The team project Id or name.  Ignored if ProjectId is set.",
          "type": "string"
        },
        "projectId": {
          "description": "The Team Project ID.  Required if Project is not set.",
          "type": "string",
          "format": "uuid"
        },
        "team": {
          "description": "The Team Id or name.  Ignored if TeamId is set.",
          "type": "string"
        },
        "teamId": {
          "description": "The Team Id",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TeamProjectReference": {
      "description": "Represents a shallow reference to a TeamProject.",
      "type": "object",
      "properties": {
        "abbreviation": {
          "description": "Project abbreviation.",
          "type": "string"
        },
        "defaultTeamImageUrl": {
          "description": "Url to default team identity image.",
          "type": "string"
        },
        "description": {
          "description": "The project's description (if any).",
          "type": "string"
        },
        "id": {
          "description": "Project identifier.",
          "type": "string",
          "format": "uuid"
        },
        "lastUpdateTime": {
          "description": "Project last update time.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Project name.",
          "type": "string"
        },
        "revision": {
          "description": "Project revision.",
          "type": "integer",
          "format": "int64"
        },
        "state": {
          "description": "Project state.",
          "enum": [
            "deleting",
            "new",
            "wellFormed",
            "createPending",
            "all",
            "unchanged",
            "deleted"
          ],
          "x-ms-enum": {
            "name": "ProjectState",
            "values": [
              {
                "value": "deleting",
                "description": "Project is in the process of being deleted."
              },
              {
                "value": "new",
                "description": "Project is in the process of being created."
              },
              {
                "value": "wellFormed",
                "description": "Project is completely created and ready to use."
              },
              {
                "value": "createPending",
                "description": "Project has been queued for creation, but the process has not yet started."
              },
              {
                "value": "all",
                "description": "All projects regardless of state except Deleted."
              },
              {
                "value": "unchanged",
                "description": "Project has not been changed."
              },
              {
                "value": "deleted",
                "description": "Project has been deleted."
              }
            ]
          }
        },
        "url": {
          "description": "Url to the full version of the object.",
          "type": "string"
        },
        "visibility": {
          "description": "Project visibility.",
          "enum": [
            "private",
            "public"
          ],
          "x-ms-enum": {
            "name": "ProjectVisibility",
            "values": [
              {
                "value": "private",
                "description": "The project is only visible to users with explicit access."
              },
              {
                "value": "public",
                "description": "The project is visible to all."
              }
            ]
          }
        }
      }
    },
    "TestActionResult": {
      "description": "",
      "type": "object",
      "properties": {
        "actionPath": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "dateCompleted": {
          "type": "string",
          "format": "date-time"
        },
        "dateStarted": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "errorMessage": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/LegacyTestCaseResultIdentifier"
        },
        "iterationId": {
          "type": "integer",
          "format": "int32"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "outcome": {
          "type": "string",
          "format": "byte"
        },
        "sharedStepId": {
          "type": "integer",
          "format": "int32"
        },
        "sharedStepRevision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestActionResult2": {
      "description": "",
      "type": "object",
      "properties": {
        "actionPath": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "dateCompleted": {
          "type": "string",
          "format": "date-time"
        },
        "dateStarted": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "errorMessage": {
          "type": "string"
        },
        "iterationId": {
          "type": "integer",
          "format": "int32"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "outcome": {
          "type": "string",
          "format": "byte"
        },
        "sharedStepId": {
          "type": "integer",
          "format": "int32"
        },
        "sharedStepRevision": {
          "type": "integer",
          "format": "int32"
        },
        "testResultId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestActionResultModel": {
      "description": "Represents a test step result.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TestResultModelBase"
        }
      ],
      "properties": {
        "actionPath": {
          "description": "Path identifier for test step in test case workitem. Note: 1) It is represented in Hexadecimal format with 8 digits for a step. 2) Internally, the step ID value for first step starts with 2 so actionPath = 00000002 step 9, will have an ID = 10 and actionPath = 0000000a step 15, will have an ID =16 and actionPath = 00000010 3) actionPath of shared step is concatenated with the parent step of test case. Example, it would be something of type -  0000000300000001 where 00000003 denotes action path of test step and 00000001 denotes action path for shared step",
          "type": "string"
        },
        "iterationId": {
          "description": "Iteration ID of test action result.",
          "type": "integer",
          "format": "int32"
        },
        "sharedStepModel": {
          "description": "Reference to shared step workitem.",
          "$ref": "#/definitions/SharedStepModel"
        },
        "stepIdentifier": {
          "description": "This is step Id of test case. For shared step, it is step Id of shared step in test case workitem; step Id in shared step. Example: TestCase workitem has two steps: 1) Normal step with Id = 1 2) Shared Step with Id = 2. Inside shared step: a) Normal Step with Id = 1 Value for StepIdentifier for First step: \"1\" Second step: \"2;1\"",
          "type": "string"
        },
        "url": {
          "description": "Url of test action result. Deprecated in hosted environment.",
          "type": "string"
        }
      }
    },
    "TestAttachment": {
      "description": "",
      "type": "object",
      "properties": {
        "attachmentType": {
          "description": "Attachment type.",
          "enum": [
            "generalAttachment",
            "codeCoverage",
            "consoleLog"
          ],
          "x-ms-enum": {
            "name": "AttachmentType",
            "values": [
              {
                "value": "generalAttachment",
                "description": "Attachment type GeneralAttachment , use this as default type unless you have other type."
              },
              {
                "value": "codeCoverage",
                "description": "Attachment type CodeCoverage."
              },
              {
                "value": "consoleLog",
                "description": "Attachment type ConsoleLog."
              }
            ]
          }
        },
        "comment": {
          "description": "Comment associated with attachment.",
          "type": "string"
        },
        "createdDate": {
          "description": "Attachment created date.",
          "type": "string",
          "format": "date-time"
        },
        "fileName": {
          "description": "Attachment file name",
          "type": "string"
        },
        "id": {
          "description": "ID of the attachment.",
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "description": "Attachment size.",
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "description": "Attachment Url.",
          "type": "string"
        }
      }
    },
    "TestAttachmentReference": {
      "description": "Reference to test attachment.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the attachment.",
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "description": "Url to download the attachment.",
          "type": "string"
        }
      }
    },
    "TestAttachmentRequestModel": {
      "description": "Test attachment request model",
      "type": "object",
      "properties": {
        "attachmentType": {
          "description": "Attachment type By Default it will be GeneralAttachment. It can be one of the following type. { GeneralAttachment, AfnStrip, BugFilingData, CodeCoverage, IntermediateCollectorData, RunConfig, TestImpactDetails, TmiTestRunDeploymentFiles, TmiTestRunReverseDeploymentFiles, TmiTestResultDetail, TmiTestRunSummary }",
          "type": "string"
        },
        "comment": {
          "description": "Comment associated with attachment",
          "type": "string"
        },
        "fileName": {
          "description": "Attachment filename",
          "type": "string"
        },
        "stream": {
          "description": "Base64 encoded file stream",
          "type": "string"
        }
      }
    },
    "TestAuthoringDetails": {
      "description": "",
      "type": "object",
      "properties": {
        "configurationId": {
          "type": "integer",
          "format": "int32"
        },
        "isAutomated": {
          "type": "boolean"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "pointId": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "string",
          "format": "byte"
        },
        "runBy": {
          "type": "string",
          "format": "uuid"
        },
        "state": {
          "enum": [
            "none",
            "ready",
            "completed",
            "notReady",
            "inProgress",
            "maxValue"
          ],
          "x-ms-enum": {
            "name": "TestPointState",
            "values": [
              {
                "value": "none",
                "description": "Default"
              },
              {
                "value": "ready",
                "description": "The test point needs to be executed in order for the test pass to be considered complete.  Either the test has not been run before or the previous run failed."
              },
              {
                "value": "completed",
                "description": "The test has passed successfully and does not need to be re-run for the test pass to be considered complete."
              },
              {
                "value": "notReady",
                "description": "The test point needs to be executed but is not able to."
              },
              {
                "value": "inProgress",
                "description": "The test is being executed."
              },
              {
                "value": "maxValue",
                "description": ""
              }
            ]
          }
        },
        "suiteId": {
          "type": "integer",
          "format": "int32"
        },
        "testerId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TestCaseMetadata2": {
      "description": "",
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "testMetadataId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestCaseReference2": {
      "description": "",
      "type": "object",
      "properties": {
        "areaId": {
          "type": "integer",
          "format": "int32"
        },
        "automatedTestId": {
          "type": "string"
        },
        "automatedTestName": {
          "type": "string"
        },
        "automatedTestNameHash": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "automatedTestStorage": {
          "type": "string"
        },
        "automatedTestStorageHash": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "automatedTestType": {
          "type": "string"
        },
        "configurationId": {
          "type": "integer",
          "format": "int32"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastRefTestRunDate": {
          "type": "string",
          "format": "date-time"
        },
        "owner": {
          "type": "string"
        },
        "priority": {
          "type": "string",
          "format": "byte"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "testCaseId": {
          "type": "integer",
          "format": "int32"
        },
        "testCaseRefId": {
          "type": "integer",
          "format": "int32"
        },
        "testCaseRevision": {
          "type": "integer",
          "format": "int32"
        },
        "testCaseTitle": {
          "type": "string"
        },
        "testPointId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestCaseResult": {
      "description": "Represents a test result.",
      "type": "object",
      "properties": {
        "afnStripId": {
          "description": "Test attachment ID of action recording.",
          "type": "integer",
          "format": "int32"
        },
        "area": {
          "description": "Reference to area path of test.",
          "$ref": "#/definitions/ShallowReference"
        },
        "associatedBugs": {
          "description": "Reference to bugs linked to test result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShallowReference"
          }
        },
        "automatedTestId": {
          "description": "ID representing test method in a dll.",
          "type": "string"
        },
        "automatedTestName": {
          "description": "Fully qualified name of test executed.",
          "type": "string"
        },
        "automatedTestStorage": {
          "description": "Container to which test belongs.",
          "type": "string"
        },
        "automatedTestType": {
          "description": "Type of automated test.",
          "type": "string"
        },
        "automatedTestTypeId": {
          "description": "TypeId of automated test.",
          "type": "string"
        },
        "build": {
          "description": "Shallow reference to build associated with test result.",
          "$ref": "#/definitions/ShallowReference"
        },
        "buildReference": {
          "description": "Reference to build associated with test result.",
          "$ref": "#/definitions/BuildReference"
        },
        "comment": {
          "description": "Comment in a test result with maxSize= 1000 chars.",
          "type": "string"
        },
        "completedDate": {
          "description": "Time when test execution completed(UTC). Completed date should be greater than StartedDate.",
          "type": "string",
          "format": "date-time"
        },
        "computerName": {
          "description": "Machine name where test executed.",
          "type": "string"
        },
        "configuration": {
          "description": "Reference to test configuration. Type ShallowReference.",
          "$ref": "#/definitions/ShallowReference"
        },
        "createdDate": {
          "description": "Timestamp when test result created(UTC).",
          "type": "string",
          "format": "date-time"
        },
        "customFields": {
          "description": "Additional properties of test result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomTestField"
          }
        },
        "durationInMs": {
          "description": "Duration of test execution in milliseconds. If not provided value will be set as CompletedDate - StartedDate",
          "type": "number",
          "format": "double"
        },
        "errorMessage": {
          "description": "Error message in test execution.",
          "type": "string"
        },
        "failingSince": {
          "description": "Information when test results started failing.",
          "$ref": "#/definitions/FailingSince"
        },
        "failureType": {
          "description": "Failure type of test result. Valid Value= (Known Issue, New Issue, Regression, Unknown, None)",
          "type": "string"
        },
        "id": {
          "description": "ID of a test result.",
          "type": "integer",
          "format": "int32"
        },
        "iterationDetails": {
          "description": "Test result details of test iterations used only for Manual Testing.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestIterationDetailsModel"
          }
        },
        "lastUpdatedBy": {
          "description": "Reference to identity last updated test result.",
          "$ref": "#/definitions/IdentityRef"
        },
        "lastUpdatedDate": {
          "description": "Last updated datetime of test result(UTC).",
          "type": "string",
          "format": "date-time"
        },
        "outcome": {
          "description": "Test outcome of test result. Valid values = (Unspecified, None, Passed, Failed, Inconclusive, Timeout, Aborted, Blocked, NotExecuted, Warning, Error, NotApplicable, Paused, InProgress, NotImpacted)",
          "type": "string"
        },
        "owner": {
          "description": "Reference to test owner.",
          "$ref": "#/definitions/IdentityRef"
        },
        "priority": {
          "description": "Priority of test executed.",
          "type": "integer",
          "format": "int32"
        },
        "project": {
          "description": "Reference to team project.",
          "$ref": "#/definitions/ShallowReference"
        },
        "release": {
          "description": "Shallow reference to release associated with test result.",
          "$ref": "#/definitions/ShallowReference"
        },
        "releaseReference": {
          "description": "Reference to release associated with test result.",
          "$ref": "#/definitions/ReleaseReference"
        },
        "resetCount": {
          "description": "ResetCount.",
          "type": "integer",
          "format": "int32"
        },
        "resolutionState": {
          "description": "Resolution state of test result.",
          "type": "string"
        },
        "resolutionStateId": {
          "description": "ID of resolution state.",
          "type": "integer",
          "format": "int32"
        },
        "resultGroupType": {
          "description": "Hierarchy type of the result, default value of None means its leaf node.",
          "enum": [
            "none",
            "rerun",
            "dataDriven",
            "orderedTest",
            "generic"
          ],
          "x-ms-enum": {
            "name": "ResultGroupType",
            "values": [
              {
                "value": "none",
                "description": "Leaf node of test result."
              },
              {
                "value": "rerun",
                "description": "Hierarchy type of test result."
              },
              {
                "value": "dataDriven",
                "description": "Hierarchy type of test result."
              },
              {
                "value": "orderedTest",
                "description": "Hierarchy type of test result."
              },
              {
                "value": "generic",
                "description": "Unknown hierarchy type."
              }
            ]
          }
        },
        "revision": {
          "description": "Revision number of test result.",
          "type": "integer",
          "format": "int32"
        },
        "runBy": {
          "description": "Reference to identity executed the test.",
          "$ref": "#/definitions/IdentityRef"
        },
        "stackTrace": {
          "description": "Stacktrace with maxSize= 1000 chars.",
          "type": "string"
        },
        "startedDate": {
          "description": "Time when test execution started(UTC).",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "State of test result. Type TestRunState.",
          "type": "string"
        },
        "subResults": {
          "description": "List of sub results inside a test result, if ResultGroupType is not None, it holds corresponding type sub results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestSubResult"
          }
        },
        "testCase": {
          "description": "Reference to the test executed.",
          "$ref": "#/definitions/ShallowReference"
        },
        "testCaseReferenceId": {
          "description": "Reference ID of test used by test result. Type TestResultMetaData",
          "type": "integer",
          "format": "int32"
        },
        "testCaseRevision": {
          "description": "TestCaseRevision Number.",
          "type": "integer",
          "format": "int32"
        },
        "testCaseTitle": {
          "description": "Name of test.",
          "type": "string"
        },
        "testPlan": {
          "description": "Reference to test plan test case workitem is part of.",
          "$ref": "#/definitions/ShallowReference"
        },
        "testPoint": {
          "description": "Reference to the test point executed.",
          "$ref": "#/definitions/ShallowReference"
        },
        "testRun": {
          "description": "Reference to test run.",
          "$ref": "#/definitions/ShallowReference"
        },
        "testSuite": {
          "description": "Reference to test suite test case workitem is part of.",
          "$ref": "#/definitions/ShallowReference"
        },
        "url": {
          "description": "Url of test result.",
          "type": "string"
        }
      }
    },
    "TestCaseResultAttachmentModel": {
      "description": "Test attachment information in a test iteration.",
      "type": "object",
      "properties": {
        "actionPath": {
          "description": "Path identifier test step in test case workitem.",
          "type": "string"
        },
        "id": {
          "description": "Attachment ID.",
          "type": "integer",
          "format": "int32"
        },
        "iterationId": {
          "description": "Iteration ID.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name of attachment.",
          "type": "string"
        },
        "size": {
          "description": "Attachment size.",
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "description": "Url to attachment.",
          "type": "string"
        }
      }
    },
    "TestCaseResultIdAndRev": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/LegacyTestCaseResultIdentifier"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestCaseResultIdentifier": {
      "description": "Reference to a test result.",
      "type": "object",
      "properties": {
        "testResultId": {
          "description": "Test result ID.",
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "description": "Test run ID.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestCaseResultUpdateModel": {
      "description": "",
      "type": "object",
      "properties": {
        "associatedWorkItems": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "automatedTestTypeId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "completedDate": {
          "type": "string"
        },
        "computerName": {
          "type": "string"
        },
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomTestField"
          }
        },
        "durationInMs": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "failureType": {
          "type": "string"
        },
        "outcome": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/IdentityRef"
        },
        "resolutionState": {
          "type": "string"
        },
        "runBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "stackTrace": {
          "type": "string"
        },
        "startedDate": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "testCasePriority": {
          "type": "string"
        },
        "testResult": {
          "$ref": "#/definitions/ShallowReference"
        }
      }
    },
    "TestConfiguration": {
      "description": "Test configuration",
      "type": "object",
      "properties": {
        "area": {
          "description": "Area of the configuration",
          "$ref": "#/definitions/ShallowReference"
        },
        "description": {
          "description": "Description of the configuration",
          "type": "string"
        },
        "id": {
          "description": "Id of the configuration",
          "type": "integer",
          "format": "int32"
        },
        "isDefault": {
          "description": "Is the configuration a default for the test plans",
          "type": "boolean"
        },
        "lastUpdatedBy": {
          "description": "Last Updated By  Reference",
          "$ref": "#/definitions/IdentityRef"
        },
        "lastUpdatedDate": {
          "description": "Last Updated Data",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Name of the configuration",
          "type": "string"
        },
        "project": {
          "description": "Project to which the configuration belongs",
          "$ref": "#/definitions/ShallowReference"
        },
        "revision": {
          "description": "Revision of the configuration",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "State of the configuration",
          "enum": [
            "active",
            "inactive"
          ],
          "x-ms-enum": {
            "name": "TestConfigurationState",
            "values": [
              {
                "value": "active",
                "description": "The configuration can be used for new test runs."
              },
              {
                "value": "inactive",
                "description": "The configuration has been retired and should not be used for new test runs."
              }
            ]
          }
        },
        "url": {
          "description": "Url of Configuration Resource",
          "type": "string"
        },
        "values": {
          "description": "Dictionary of Test Variable, Selected Value",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        }
      }
    },
    "TestEnvironment": {
      "description": "Test environment Detail.",
      "type": "object",
      "properties": {
        "environmentId": {
          "description": "Test Environment Id.",
          "type": "string",
          "format": "uuid"
        },
        "environmentName": {
          "description": "Test Environment Name.",
          "type": "string"
        }
      }
    },
    "TestExecutionReportData": {
      "description": "",
      "type": "object",
      "properties": {
        "reportData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatedTestFieldData"
          }
        }
      }
    },
    "TestExtensionField": {
      "description": "",
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/TestExtensionFieldDetails"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "TestExtensionFieldDetails": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "isResultScoped": {
          "type": "boolean"
        },
        "isRunScoped": {
          "type": "boolean"
        },
        "isSystemField": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "enum": [
            "bigInt",
            "binary",
            "bit",
            "char",
            "dateTime",
            "decimal",
            "float",
            "image",
            "int",
            "money",
            "nChar",
            "nText",
            "nVarChar",
            "real",
            "uniqueIdentifier",
            "smallDateTime",
            "smallInt",
            "smallMoney",
            "text",
            "timestamp",
            "tinyInt",
            "varBinary",
            "varChar",
            "variant",
            "xml",
            "udt",
            "structured",
            "date",
            "time",
            "dateTime2",
            "dateTimeOffset"
          ],
          "x-ms-enum": {
            "name": "SqlDbType",
            "values": [
              {
                "value": "bigInt",
                "description": ""
              },
              {
                "value": "binary",
                "description": ""
              },
              {
                "value": "bit",
                "description": ""
              },
              {
                "value": "char",
                "description": ""
              },
              {
                "value": "dateTime",
                "description": ""
              },
              {
                "value": "decimal",
                "description": ""
              },
              {
                "value": "float",
                "description": ""
              },
              {
                "value": "image",
                "description": ""
              },
              {
                "value": "int",
                "description": ""
              },
              {
                "value": "money",
                "description": ""
              },
              {
                "value": "nChar",
                "description": ""
              },
              {
                "value": "nText",
                "description": ""
              },
              {
                "value": "nVarChar",
                "description": ""
              },
              {
                "value": "real",
                "description": ""
              },
              {
                "value": "uniqueIdentifier",
                "description": ""
              },
              {
                "value": "smallDateTime",
                "description": ""
              },
              {
                "value": "smallInt",
                "description": ""
              },
              {
                "value": "smallMoney",
                "description": ""
              },
              {
                "value": "text",
                "description": ""
              },
              {
                "value": "timestamp",
                "description": ""
              },
              {
                "value": "tinyInt",
                "description": ""
              },
              {
                "value": "varBinary",
                "description": ""
              },
              {
                "value": "varChar",
                "description": ""
              },
              {
                "value": "variant",
                "description": ""
              },
              {
                "value": "xml",
                "description": ""
              },
              {
                "value": "udt",
                "description": ""
              },
              {
                "value": "structured",
                "description": ""
              },
              {
                "value": "date",
                "description": ""
              },
              {
                "value": "time",
                "description": ""
              },
              {
                "value": "dateTime2",
                "description": ""
              },
              {
                "value": "dateTimeOffset",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "TestFailureDetails": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "testResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestCaseResultIdentifier"
          }
        }
      }
    },
    "TestFailuresAnalysis": {
      "description": "",
      "type": "object",
      "properties": {
        "existingFailures": {
          "$ref": "#/definitions/TestFailureDetails"
        },
        "fixedTests": {
          "$ref": "#/definitions/TestFailureDetails"
        },
        "newFailures": {
          "$ref": "#/definitions/TestFailureDetails"
        },
        "previousContext": {
          "$ref": "#/definitions/TestResultsContext"
        }
      }
    },
    "TestFailureType": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/ShallowReference"
        }
      }
    },
    "TestFieldData": {
      "description": "",
      "type": "object",
      "properties": {
        "dimensions": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "measure": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TestFieldsEx2": {
      "description": "",
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "integer",
          "format": "int32"
        },
        "fieldName": {
          "type": "string"
        },
        "fieldType": {
          "type": "string",
          "format": "byte"
        },
        "isResultScoped": {
          "type": "boolean"
        },
        "isRunScoped": {
          "type": "boolean"
        },
        "isSystemField": {
          "type": "boolean"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TestFlakyIdentifier": {
      "description": "Test Flaky Identifier",
      "type": "object",
      "properties": {
        "branchName": {
          "description": "Branch Name where Flakiness has to be Marked/Unmarked",
          "type": "string"
        },
        "isFlaky": {
          "description": "State for Flakiness",
          "type": "boolean"
        }
      }
    },
    "TestHistoryQuery": {
      "description": "Filter to get TestCase result history.",
      "type": "object",
      "properties": {
        "automatedTestName": {
          "description": "Automated test name of the TestCase.",
          "type": "string"
        },
        "branch": {
          "description": "Results to be get for a particular branches.",
          "type": "string"
        },
        "buildDefinitionId": {
          "description": "Get the results history only for this BuildDefinitionId. This to get used in query GroupBy should be Branch. If this is provided, Branch will have no use.",
          "type": "integer",
          "format": "int32"
        },
        "continuationToken": {
          "description": "It will be filled by server. If not null means there are some results still to be get, and we need to call this REST API with this ContinuousToken. It is not supposed to be created (or altered, if received from server in last batch) by user.",
          "type": "string"
        },
        "groupBy": {
          "description": "Group the result on the basis of TestResultGroupBy. This can be Branch, Environment or null(if results are fetched by BuildDefinitionId)",
          "enum": [
            "branch",
            "environment"
          ],
          "x-ms-enum": {
            "name": "TestResultGroupBy",
            "values": [
              {
                "value": "branch",
                "description": "Group the results by branches"
              },
              {
                "value": "environment",
                "description": "Group the results by environment"
              }
            ]
          }
        },
        "maxCompleteDate": {
          "description": "History to get between time interval MaxCompleteDate and  (MaxCompleteDate - TrendDays). Default is current date time.",
          "type": "string",
          "format": "date-time"
        },
        "releaseEnvDefinitionId": {
          "description": "Get the results history only for this ReleaseEnvDefinitionId. This to get used in query GroupBy should be Environment.",
          "type": "integer",
          "format": "int32"
        },
        "resultsForGroup": {
          "description": "List of TestResultHistoryForGroup which are grouped by GroupBy",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultHistoryForGroup"
          }
        },
        "testCaseId": {
          "description": "Get the results history only for this testCaseId. This to get used in query to filter the result along with automatedtestname",
          "type": "integer",
          "format": "int32"
        },
        "trendDays": {
          "description": "Number of days for which history to collect. Maximum supported value is 7 days. Default is 7 days.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestIterationDetailsModel": {
      "description": "Represents a test iteration result.",
      "type": "object",
      "properties": {
        "actionResults": {
          "description": "Test step results in an iteration.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestActionResultModel"
          }
        },
        "attachments": {
          "description": "Reference to attachments in test iteration result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestCaseResultAttachmentModel"
          }
        },
        "comment": {
          "description": "Comment in test iteration result.",
          "type": "string"
        },
        "completedDate": {
          "description": "Time when execution completed(UTC).",
          "type": "string",
          "format": "date-time"
        },
        "durationInMs": {
          "description": "Duration of execution.",
          "type": "number",
          "format": "double"
        },
        "errorMessage": {
          "description": "Error message in test iteration result execution.",
          "type": "string"
        },
        "id": {
          "description": "ID of test iteration result.",
          "type": "integer",
          "format": "int32"
        },
        "outcome": {
          "description": "Test outcome if test iteration result.",
          "type": "string"
        },
        "parameters": {
          "description": "Test parameters in an iteration.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultParameterModel"
          }
        },
        "startedDate": {
          "description": "Time when execution started(UTC).",
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "description": "Url to test iteration result.",
          "type": "string"
        }
      }
    },
    "TestLog": {
      "description": "Represents Test Log Result object.",
      "type": "object",
      "properties": {
        "logReference": {
          "description": "Test Log Context run, build",
          "$ref": "#/definitions/TestLogReference"
        },
        "metaData": {
          "description": "Meta data for Log file",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "modifiedOn": {
          "description": "LastUpdatedDate for Log file",
          "type": "string",
          "format": "date-time"
        },
        "size": {
          "description": "Size in Bytes for Log file",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TestLogReference": {
      "description": "Test Log Reference object",
      "type": "object",
      "properties": {
        "buildId": {
          "description": "BuildId for test log, if context is build",
          "type": "integer",
          "format": "int32"
        },
        "filePath": {
          "description": "FileName for log file",
          "type": "string"
        },
        "releaseEnvId": {
          "description": "ReleaseEnvId for test log, if context is Release",
          "type": "integer",
          "format": "int32"
        },
        "releaseId": {
          "description": "ReleaseId for test log, if context is Release",
          "type": "integer",
          "format": "int32"
        },
        "resultId": {
          "description": "Resultid for test log, if context is run and log is related to result",
          "type": "integer",
          "format": "int32"
        },
        "runId": {
          "description": "runid for test log, if context is run",
          "type": "integer",
          "format": "int32"
        },
        "scope": {
          "description": "Test Log Scope",
          "enum": [
            "run"
          ],
          "x-ms-enum": {
            "name": "TestLogScope",
            "values": [
              {
                "value": "run",
                "description": "Log file is associated with Run, result, subresult"
              }
            ]
          }
        },
        "subResultId": {
          "description": "SubResultid for test log, if context is run and log is related to subresult",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Log Type",
          "enum": [
            "generalAttachment"
          ],
          "x-ms-enum": {
            "name": "TestLogType",
            "values": [
              {
                "value": "generalAttachment",
                "description": "Any gereric attachment."
              }
            ]
          }
        }
      }
    },
    "TestLogStatus": {
      "description": "Represents Test Log Status object.",
      "type": "object",
      "properties": {
        "exception": {
          "description": "Exception message",
          "type": "string"
        },
        "status": {
          "description": "Test Log Status code",
          "enum": [
            "success",
            "failed",
            "fileAlreadyExists",
            "invalidInput",
            "invalidFileName",
            "invalidContainer",
            "transferFailed",
            "featureDisabled",
            "buildDoesNotExist",
            "runDoesNotExist",
            "containerNotCreated",
            "apiNotSupported",
            "fileSizeExceeds",
            "containerNotFound",
            "fileNotFound",
            "directoryNotFound",
            "storageCapacityExceeded"
          ],
          "x-ms-enum": {
            "name": "TestLogStatusCode",
            "values": [
              {
                "value": "success",
                "description": "Operation is successful"
              },
              {
                "value": "failed",
                "description": "Operation failed"
              },
              {
                "value": "fileAlreadyExists",
                "description": "Operation failed due to file already exist"
              },
              {
                "value": "invalidInput",
                "description": "Invalid input provided by user"
              },
              {
                "value": "invalidFileName",
                "description": "Invalid file name provided by user"
              },
              {
                "value": "invalidContainer",
                "description": "Error occurred while operating on container"
              },
              {
                "value": "transferFailed",
                "description": "Blob Transfer Error"
              },
              {
                "value": "featureDisabled",
                "description": "TestLogStore feature is not enabled"
              },
              {
                "value": "buildDoesNotExist",
                "description": "Build for which operation is requested does not exist"
              },
              {
                "value": "runDoesNotExist",
                "description": "Run for which operation is requested does not exist"
              },
              {
                "value": "containerNotCreated",
                "description": "Container cannot be created"
              },
              {
                "value": "apiNotSupported",
                "description": "Api is not supported"
              },
              {
                "value": "fileSizeExceeds",
                "description": "File size is greater than the limitation"
              },
              {
                "value": "containerNotFound",
                "description": "Container is not found for which operation is requested"
              },
              {
                "value": "fileNotFound",
                "description": "File cannot be found"
              },
              {
                "value": "directoryNotFound",
                "description": "Directory cannot be found"
              },
              {
                "value": "storageCapacityExceeded",
                "description": "Storage capacity exceeded"
              }
            ]
          }
        },
        "transferFailureType": {
          "description": "Blob Transfer Error code",
          "type": "string"
        }
      }
    },
    "TestLogStoreAttachment": {
      "description": "Attachment metadata for test attachments from LogStore.",
      "type": "object",
      "properties": {
        "attachmentType": {
          "description": "Attachment type.",
          "enum": [
            "generalAttachment",
            "codeCoverage",
            "consoleLog"
          ],
          "x-ms-enum": {
            "name": "AttachmentType",
            "values": [
              {
                "value": "generalAttachment",
                "description": "Attachment type GeneralAttachment , use this as default type unless you have other type."
              },
              {
                "value": "codeCoverage",
                "description": "Attachment type CodeCoverage."
              },
              {
                "value": "consoleLog",
                "description": "Attachment type ConsoleLog."
              }
            ]
          }
        },
        "comment": {
          "description": "Comment associated with attachment.",
          "type": "string"
        },
        "createdDate": {
          "description": "Attachment created date.",
          "type": "string",
          "format": "date-time"
        },
        "fileName": {
          "description": "Attachment file name.",
          "type": "string"
        },
        "size": {
          "description": "Attachment size.",
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "description": "Attachment Url.",
          "type": "string"
        }
      }
    },
    "TestLogStoreAttachmentReference": {
      "description": "Reference to test attachment.",
      "type": "object",
      "properties": {
        "url": {
          "description": "Url to download the attachment.",
          "type": "string"
        }
      }
    },
    "TestLogStoreEndpointDetails": {
      "description": "Represents Test Log store endpoint details.",
      "type": "object",
      "properties": {
        "endpointSASUri": {
          "description": "Test log store connection Uri.",
          "type": "string"
        },
        "endpointType": {
          "description": "Test log store endpoint type.",
          "enum": [
            "root",
            "file"
          ],
          "x-ms-enum": {
            "name": "TestLogStoreEndpointType",
            "values": [
              {
                "value": "root",
                "description": "Endpoint type is scoped to root"
              },
              {
                "value": "file",
                "description": "Endpoint type is scoped to file"
              }
            ]
          }
        },
        "status": {
          "description": "Test log store status code",
          "enum": [
            "success",
            "failed",
            "fileAlreadyExists",
            "invalidInput",
            "invalidFileName",
            "invalidContainer",
            "transferFailed",
            "featureDisabled",
            "buildDoesNotExist",
            "runDoesNotExist",
            "containerNotCreated",
            "apiNotSupported",
            "fileSizeExceeds",
            "containerNotFound",
            "fileNotFound",
            "directoryNotFound",
            "storageCapacityExceeded"
          ],
          "x-ms-enum": {
            "name": "TestLogStatusCode",
            "values": [
              {
                "value": "success",
                "description": "Operation is successful"
              },
              {
                "value": "failed",
                "description": "Operation failed"
              },
              {
                "value": "fileAlreadyExists",
                "description": "Operation failed due to file already exist"
              },
              {
                "value": "invalidInput",
                "description": "Invalid input provided by user"
              },
              {
                "value": "invalidFileName",
                "description": "Invalid file name provided by user"
              },
              {
                "value": "invalidContainer",
                "description": "Error occurred while operating on container"
              },
              {
                "value": "transferFailed",
                "description": "Blob Transfer Error"
              },
              {
                "value": "featureDisabled",
                "description": "TestLogStore feature is not enabled"
              },
              {
                "value": "buildDoesNotExist",
                "description": "Build for which operation is requested does not exist"
              },
              {
                "value": "runDoesNotExist",
                "description": "Run for which operation is requested does not exist"
              },
              {
                "value": "containerNotCreated",
                "description": "Container cannot be created"
              },
              {
                "value": "apiNotSupported",
                "description": "Api is not supported"
              },
              {
                "value": "fileSizeExceeds",
                "description": "File size is greater than the limitation"
              },
              {
                "value": "containerNotFound",
                "description": "Container is not found for which operation is requested"
              },
              {
                "value": "fileNotFound",
                "description": "File cannot be found"
              },
              {
                "value": "directoryNotFound",
                "description": "Directory cannot be found"
              },
              {
                "value": "storageCapacityExceeded",
                "description": "Storage capacity exceeded"
              }
            ]
          }
        }
      }
    },
    "TestMessageLog2": {
      "description": "",
      "type": "object",
      "properties": {
        "testMessageLogId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestMessageLogDetails": {
      "description": "An abstracted reference to some other resource. This class is used to provide the build data contracts with a uniform way to reference other resources in a way that provides easy traversal through links.",
      "type": "object",
      "properties": {
        "dateCreated": {
          "description": "Date when the resource is created",
          "type": "string",
          "format": "date-time"
        },
        "entryId": {
          "description": "Id of the resource",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "Message of the resource",
          "type": "string"
        }
      }
    },
    "TestMessageLogEntry": {
      "description": "",
      "type": "object",
      "properties": {
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "entryId": {
          "type": "integer",
          "format": "int32"
        },
        "logLevel": {
          "type": "string",
          "format": "byte"
        },
        "logUser": {
          "type": "string",
          "format": "uuid"
        },
        "logUserName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "testMessageLogId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestMessageLogEntry2": {
      "description": "",
      "type": "object",
      "properties": {
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "entryId": {
          "type": "integer",
          "format": "int32"
        },
        "logLevel": {
          "type": "string",
          "format": "byte"
        },
        "logUser": {
          "type": "string",
          "format": "uuid"
        },
        "message": {
          "type": "string"
        },
        "testMessageLogId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestMethod": {
      "description": "",
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TestOperationReference": {
      "description": "Class representing a reference to an operation.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "TestOutcomeSettings": {
      "description": "Test outcome settings",
      "type": "object",
      "properties": {
        "syncOutcomeAcrossSuites": {
          "description": "Value to configure how test outcomes for the same tests across suites are shown",
          "type": "boolean"
        }
      }
    },
    "TestParameter2": {
      "description": "",
      "type": "object",
      "properties": {
        "actionPath": {
          "type": "string"
        },
        "actual": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "dataType": {
          "type": "string",
          "format": "byte"
        },
        "dateModified": {
          "type": "string",
          "format": "date-time"
        },
        "expected": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "iterationId": {
          "type": "integer",
          "format": "int32"
        },
        "parameterName": {
          "type": "string"
        },
        "testResultId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestPlan": {
      "description": "The test plan resource.",
      "type": "object",
      "properties": {
        "area": {
          "description": "Area of the test plan.",
          "$ref": "#/definitions/ShallowReference"
        },
        "build": {
          "description": "Build to be tested.",
          "$ref": "#/definitions/ShallowReference"
        },
        "buildDefinition": {
          "description": "The Build Definition that generates a build associated with this test plan.",
          "$ref": "#/definitions/ShallowReference"
        },
        "description": {
          "description": "Description of the test plan.",
          "type": "string"
        },
        "endDate": {
          "description": "End date for the test plan.",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "ID of the test plan.",
          "type": "integer",
          "format": "int32"
        },
        "iteration": {
          "description": "Iteration path of the test plan.",
          "type": "string"
        },
        "name": {
          "description": "Name of the test plan.",
          "type": "string"
        },
        "owner": {
          "description": "Owner of the test plan.",
          "$ref": "#/definitions/IdentityRef"
        },
        "previousBuild": {
          "$ref": "#/definitions/ShallowReference"
        },
        "project": {
          "description": "Project which contains the test plan.",
          "$ref": "#/definitions/ShallowReference"
        },
        "releaseEnvironmentDefinition": {
          "description": "Release Environment to be used to deploy the build and run automated tests from this test plan.",
          "$ref": "#/definitions/ReleaseEnvironmentDefinitionReference"
        },
        "revision": {
          "description": "Revision of the test plan.",
          "type": "integer",
          "format": "int32"
        },
        "rootSuite": {
          "description": "Root test suite of the test plan.",
          "$ref": "#/definitions/ShallowReference"
        },
        "startDate": {
          "description": "Start date for the test plan.",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "State of the test plan.",
          "type": "string"
        },
        "testOutcomeSettings": {
          "description": "Value to configure how same tests across test suites under a test plan need to behave",
          "$ref": "#/definitions/TestOutcomeSettings"
        },
        "updatedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "description": "URL of the test plan resource.",
          "type": "string"
        }
      }
    },
    "TestPlanCloneRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "destinationTestPlan": {
          "$ref": "#/definitions/TestPlan"
        },
        "options": {
          "$ref": "#/definitions/CloneOptions"
        },
        "suiteIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "TestPlanHubData": {
      "description": "",
      "type": "object",
      "properties": {
        "selectedSuiteId": {
          "type": "integer",
          "format": "int32"
        },
        "testPlan": {
          "$ref": "#/definitions/TestPlan"
        },
        "testPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestPoint"
          }
        },
        "testSuites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestSuite"
          }
        },
        "totalTestPoints": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestPlansWithSelection": {
      "description": "",
      "type": "object",
      "properties": {
        "lastSelectedPlan": {
          "type": "integer",
          "format": "int32"
        },
        "lastSelectedSuite": {
          "type": "integer",
          "format": "int32"
        },
        "plans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestPlan"
          }
        }
      }
    },
    "TestPoint": {
      "description": "Test point.",
      "type": "object",
      "properties": {
        "assignedTo": {
          "description": "AssignedTo. Type IdentityRef.",
          "$ref": "#/definitions/IdentityRef"
        },
        "automated": {
          "description": "Automated.",
          "type": "boolean"
        },
        "comment": {
          "description": "Comment associated with test point.",
          "type": "string"
        },
        "configuration": {
          "description": "Configuration. Type ShallowReference.",
          "$ref": "#/definitions/ShallowReference"
        },
        "failureType": {
          "description": "Failure type of test point.",
          "type": "string"
        },
        "id": {
          "description": "ID of the test point.",
          "type": "integer",
          "format": "int32"
        },
        "lastResetToActive": {
          "description": "Last date when test point was reset to Active.",
          "type": "string",
          "format": "date-time"
        },
        "lastResolutionStateId": {
          "description": "Last resolution state id of test point.",
          "type": "integer",
          "format": "int32"
        },
        "lastResult": {
          "description": "Last result of test point. Type ShallowReference.",
          "$ref": "#/definitions/ShallowReference"
        },
        "lastResultDetails": {
          "description": "Last result details of test point. Type LastResultDetails.",
          "$ref": "#/definitions/LastResultDetails"
        },
        "lastResultState": {
          "description": "Last result state of test point.",
          "type": "string"
        },
        "lastRunBuildNumber": {
          "description": "LastRun build number of test point.",
          "type": "string"
        },
        "lastTestRun": {
          "description": "Last testRun of test point. Type ShallowReference.",
          "$ref": "#/definitions/ShallowReference"
        },
        "lastUpdatedBy": {
          "description": "Test point last updated by. Type IdentityRef.",
          "$ref": "#/definitions/IdentityRef"
        },
        "lastUpdatedDate": {
          "description": "Last updated date of test point.",
          "type": "string",
          "format": "date-time"
        },
        "outcome": {
          "description": "Outcome of test point.",
          "type": "string"
        },
        "revision": {
          "description": "Revision number.",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "State of test point.",
          "type": "string"
        },
        "suite": {
          "description": "Suite of test point. Type ShallowReference.",
          "$ref": "#/definitions/ShallowReference"
        },
        "testCase": {
          "description": "TestCase associated to test point. Type WorkItemReference.",
          "$ref": "#/definitions/WorkItemReference"
        },
        "testPlan": {
          "description": "TestPlan of test point. Type ShallowReference.",
          "$ref": "#/definitions/ShallowReference"
        },
        "url": {
          "description": "Test point Url.",
          "type": "string"
        },
        "workItemProperties": {
          "description": "Work item properties of test point.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "TestPointReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "enum": [
            "none",
            "ready",
            "completed",
            "notReady",
            "inProgress",
            "maxValue"
          ],
          "x-ms-enum": {
            "name": "TestPointState",
            "values": [
              {
                "value": "none",
                "description": "Default"
              },
              {
                "value": "ready",
                "description": "The test point needs to be executed in order for the test pass to be considered complete.  Either the test has not been run before or the previous run failed."
              },
              {
                "value": "completed",
                "description": "The test has passed successfully and does not need to be re-run for the test pass to be considered complete."
              },
              {
                "value": "notReady",
                "description": "The test point needs to be executed but is not able to."
              },
              {
                "value": "inProgress",
                "description": "The test is being executed."
              },
              {
                "value": "maxValue",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "TestPointsEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "testPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestPointReference"
          }
        }
      }
    },
    "TestPointsQuery": {
      "description": "Test point query class.",
      "type": "object",
      "properties": {
        "orderBy": {
          "description": "Order by results.",
          "type": "string"
        },
        "points": {
          "description": "List of test points",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestPoint"
          }
        },
        "pointsFilter": {
          "description": "Filter",
          "$ref": "#/definitions/PointsFilter"
        },
        "witFields": {
          "description": "List of workitem fields to get.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestPointsUpdatedEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TestPointsEvent"
        }
      ],
      "properties": {}
    },
    "TestResolutionState": {
      "description": "Test Resolution State Details.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Test Resolution state Id.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Test Resolution State Name.",
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/ShallowReference"
        }
      }
    },
    "TestResult2": {
      "description": "",
      "type": "object",
      "properties": {
        "afnStripId": {
          "type": "integer",
          "format": "int32"
        },
        "computerName": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "dateCompleted": {
          "type": "string",
          "format": "date-time"
        },
        "dateStarted": {
          "type": "string",
          "format": "date-time"
        },
        "effectivePointState": {
          "type": "string",
          "format": "byte"
        },
        "failureType": {
          "type": "string",
          "format": "byte"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "outcome": {
          "type": "string",
          "format": "byte"
        },
        "owner": {
          "type": "string",
          "format": "uuid"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "resetCount": {
          "type": "integer",
          "format": "int32"
        },
        "resolutionStateId": {
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "runBy": {
          "type": "string",
          "format": "uuid"
        },
        "state": {
          "type": "string",
          "format": "byte"
        },
        "testCaseRefId": {
          "type": "integer",
          "format": "int32"
        },
        "testResultId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestResultAcrossProjectResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "testResult": {
          "$ref": "#/definitions/LegacyTestCaseResult"
        }
      }
    },
    "TestResultAttachment": {
      "description": "",
      "type": "object",
      "properties": {
        "actionPath": {
          "type": "string"
        },
        "attachmentType": {
          "enum": [
            "generalAttachment",
            "codeCoverage",
            "consoleLog"
          ],
          "x-ms-enum": {
            "name": "AttachmentType",
            "values": [
              {
                "value": "generalAttachment",
                "description": "Attachment type GeneralAttachment , use this as default type unless you have other type."
              },
              {
                "value": "codeCoverage",
                "description": "Attachment type CodeCoverage."
              },
              {
                "value": "consoleLog",
                "description": "Attachment type ConsoleLog."
              }
            ]
          }
        },
        "comment": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "downloadQueryString": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "isComplete": {
          "type": "boolean"
        },
        "iterationId": {
          "type": "integer",
          "format": "int32"
        },
        "length": {
          "type": "integer",
          "format": "int64"
        },
        "sessionId": {
          "type": "integer",
          "format": "int32"
        },
        "testResultId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        },
        "tmiRunId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TestResultAttachmentIdentity": {
      "description": "",
      "type": "object",
      "properties": {
        "attachmentId": {
          "type": "integer",
          "format": "int32"
        },
        "sessionId": {
          "type": "integer",
          "format": "int32"
        },
        "testResultId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestResultCreateModel": {
      "description": "",
      "type": "object",
      "properties": {
        "area": {
          "$ref": "#/definitions/ShallowReference"
        },
        "associatedWorkItems": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "automatedTestId": {
          "type": "string"
        },
        "automatedTestName": {
          "type": "string"
        },
        "automatedTestStorage": {
          "type": "string"
        },
        "automatedTestType": {
          "type": "string"
        },
        "automatedTestTypeId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "completedDate": {
          "type": "string"
        },
        "computerName": {
          "type": "string"
        },
        "configuration": {
          "$ref": "#/definitions/ShallowReference"
        },
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomTestField"
          }
        },
        "durationInMs": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "failureType": {
          "type": "string"
        },
        "outcome": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/IdentityRef"
        },
        "resolutionState": {
          "type": "string"
        },
        "runBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "stackTrace": {
          "type": "string"
        },
        "startedDate": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "testCase": {
          "$ref": "#/definitions/ShallowReference"
        },
        "testCasePriority": {
          "type": "string"
        },
        "testCaseTitle": {
          "type": "string"
        },
        "testPoint": {
          "$ref": "#/definitions/ShallowReference"
        }
      }
    },
    "TestResultDocument": {
      "description": "",
      "type": "object",
      "properties": {
        "operationReference": {
          "$ref": "#/definitions/TestOperationReference"
        },
        "payload": {
          "$ref": "#/definitions/TestResultPayload"
        }
      }
    },
    "TestResultFailuresAnalysis": {
      "description": "",
      "type": "object",
      "properties": {
        "existingFailures": {
          "$ref": "#/definitions/TestFailureDetails"
        },
        "fixedTests": {
          "$ref": "#/definitions/TestFailureDetails"
        },
        "newFailures": {
          "$ref": "#/definitions/TestFailureDetails"
        }
      }
    },
    "TestResultFailureType": {
      "description": "The test failure type resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the test failure type",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name of the test failure type",
          "type": "string"
        }
      }
    },
    "TestResultFailureTypeRequestModel": {
      "description": "The test failure type request model",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the test failure type",
          "type": "string"
        }
      }
    },
    "TestResultHistory": {
      "description": "",
      "type": "object",
      "properties": {
        "groupByField": {
          "type": "string"
        },
        "resultsForGroup": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultHistoryDetailsForGroup"
          }
        }
      }
    },
    "TestResultHistoryDetailsForGroup": {
      "description": "",
      "type": "object",
      "properties": {
        "groupByValue": {
          "type": "object"
        },
        "latestResult": {
          "$ref": "#/definitions/TestCaseResult"
        }
      }
    },
    "TestResultHistoryForGroup": {
      "description": "List of test results filtered on the basis of GroupByValue",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the group.",
          "type": "string"
        },
        "groupByValue": {
          "description": "Name or Id of the group identifier by which results are grouped together.",
          "type": "string"
        },
        "results": {
          "description": "List of results for GroupByValue",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestCaseResult"
          }
        }
      }
    },
    "TestResultMetaData": {
      "description": "Represents a Meta Data of a test result.",
      "type": "object",
      "properties": {
        "automatedTestName": {
          "description": "AutomatedTestName of test result.",
          "type": "string"
        },
        "automatedTestStorage": {
          "description": "AutomatedTestStorage of test result.",
          "type": "string"
        },
        "flakyIdentifiers": {
          "description": "List of Flaky Identifier for TestCaseReferenceId",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestFlakyIdentifier"
          }
        },
        "owner": {
          "description": "Owner of test result.",
          "type": "string"
        },
        "priority": {
          "description": "Priority of test result.",
          "type": "integer",
          "format": "int32"
        },
        "testCaseReferenceId": {
          "description": "ID of TestCaseReference.",
          "type": "integer",
          "format": "int32"
        },
        "testCaseTitle": {
          "description": "TestCaseTitle of test result.",
          "type": "string"
        }
      }
    },
    "TestResultMetaDataUpdateInput": {
      "description": "Represents a TestResultMetaData Input",
      "type": "object",
      "properties": {
        "flakyIdentifiers": {
          "description": "List of Flaky Identifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestFlakyIdentifier"
          }
        }
      }
    },
    "TestResultMetaDataUpdateResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "TestResultModelBase": {
      "description": "",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment in result.",
          "type": "string"
        },
        "completedDate": {
          "description": "Time when execution completed(UTC).",
          "type": "string",
          "format": "date-time"
        },
        "durationInMs": {
          "description": "Duration of execution.",
          "type": "number",
          "format": "double"
        },
        "errorMessage": {
          "description": "Error message in result.",
          "type": "string"
        },
        "outcome": {
          "description": "Test outcome of result.",
          "type": "string"
        },
        "startedDate": {
          "description": "Time when execution started(UTC).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TestResultParameter": {
      "description": "",
      "type": "object",
      "properties": {
        "actionPath": {
          "type": "string"
        },
        "actual": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "expected": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "iterationId": {
          "type": "integer",
          "format": "int32"
        },
        "parameterName": {
          "type": "string"
        },
        "testResultId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestResultParameterModel": {
      "description": "Test parameter information in a test iteration.",
      "type": "object",
      "properties": {
        "actionPath": {
          "description": "Test step path where parameter is referenced.",
          "type": "string"
        },
        "iterationId": {
          "description": "Iteration ID.",
          "type": "integer",
          "format": "int32"
        },
        "parameterName": {
          "description": "Name of parameter.",
          "type": "string"
        },
        "stepIdentifier": {
          "description": "This is step Id of test case. For shared step, it is step Id of shared step in test case workitem; step Id in shared step. Example: TestCase workitem has two steps: 1) Normal step with Id = 1 2) Shared Step with Id = 2. Inside shared step: a) Normal Step with Id = 1 Value for StepIdentifier for First step: \"1\" Second step: \"2;1\"",
          "type": "string"
        },
        "url": {
          "description": "Url of test parameter. Deprecated in hosted environment.",
          "type": "string"
        },
        "value": {
          "description": "Value of parameter.",
          "type": "string"
        }
      }
    },
    "TestResultPayload": {
      "description": "",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stream": {
          "type": "string"
        }
      }
    },
    "TestResultReset2": {
      "description": "",
      "type": "object",
      "properties": {
        "auditIdentity": {
          "type": "string",
          "format": "uuid"
        },
        "dateModified": {
          "type": "string",
          "format": "date-time"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "testResultId": {
          "type": "integer",
          "format": "int32"
        },
        "testResultRV": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestResultsContext": {
      "description": "",
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/BuildReference"
        },
        "contextType": {
          "enum": [
            "build",
            "release",
            "pipeline"
          ],
          "x-ms-enum": {
            "name": "TestResultsContextType",
            "values": [
              {
                "value": "build",
                "description": ""
              },
              {
                "value": "release",
                "description": ""
              },
              {
                "value": "pipeline",
                "description": ""
              }
            ]
          }
        },
        "pipelineReference": {
          "$ref": "#/definitions/PipelineReference"
        },
        "release": {
          "$ref": "#/definitions/ReleaseReference"
        }
      }
    },
    "TestResultsDetails": {
      "description": "",
      "type": "object",
      "properties": {
        "groupByField": {
          "type": "string"
        },
        "resultsForGroup": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultsDetailsForGroup"
          }
        }
      }
    },
    "TestResultsDetailsForGroup": {
      "description": "",
      "type": "object",
      "properties": {
        "groupByValue": {
          "type": "object"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestCaseResult"
          }
        },
        "resultsCountByOutcome": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AggregatedResultsByOutcome"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestResultsEx2": {
      "description": "",
      "type": "object",
      "properties": {
        "bitValue": {
          "type": "boolean"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeValue": {
          "type": "string",
          "format": "date-time"
        },
        "fieldId": {
          "type": "integer",
          "format": "int32"
        },
        "fieldName": {
          "type": "string"
        },
        "floatValue": {
          "type": "number",
          "format": "double"
        },
        "guidValue": {
          "type": "string",
          "format": "uuid"
        },
        "intValue": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "stringValue": {
          "type": "string"
        },
        "testResultId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestResultsGroupsForBuild": {
      "description": "",
      "type": "object",
      "properties": {
        "buildId": {
          "description": "BuildId for which groupby result is fetched.",
          "type": "integer",
          "format": "int32"
        },
        "fields": {
          "description": "The group by results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDetailsForTestResults"
          }
        }
      }
    },
    "TestResultsGroupsForRelease": {
      "description": "",
      "type": "object",
      "properties": {
        "fields": {
          "description": "The group by results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDetailsForTestResults"
          }
        },
        "releaseEnvId": {
          "description": "Release Environment Id for which groupby result is fetched.",
          "type": "integer",
          "format": "int32"
        },
        "releaseId": {
          "description": "ReleaseId for which groupby result is fetched.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestResultsQuery": {
      "description": "",
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestCaseResult"
          }
        },
        "resultsFilter": {
          "$ref": "#/definitions/ResultsFilter"
        }
      }
    },
    "TestResultsSettings": {
      "description": "",
      "type": "object",
      "properties": {
        "flakySettings": {
          "description": "IsRequired and EmitDefaultValue are passed as false as if users doesn't pass anything, should not come for serialisation and deserialisation.",
          "$ref": "#/definitions/FlakySettings"
        },
        "newTestResultLoggingSettings": {
          "$ref": "#/definitions/NewTestResultLoggingSettings"
        }
      }
    },
    "TestResultSummary": {
      "description": "",
      "type": "object",
      "properties": {
        "aggregatedResultsAnalysis": {
          "$ref": "#/definitions/AggregatedResultsAnalysis"
        },
        "noConfigRunsCount": {
          "type": "integer",
          "format": "int32"
        },
        "teamProject": {
          "$ref": "#/definitions/TeamProjectReference"
        },
        "testFailures": {
          "$ref": "#/definitions/TestFailuresAnalysis"
        },
        "testResultsContext": {
          "$ref": "#/definitions/TestResultsContext"
        },
        "totalRunsCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestResultsUpdateSettings": {
      "description": "",
      "type": "object",
      "properties": {
        "flakySettings": {
          "description": "FlakySettings defines Flaky Settings Data.",
          "$ref": "#/definitions/FlakySettings"
        },
        "newTestResultLoggingSettings": {
          "description": "NewTestResultLoggingSettings defines the setting for logging new test results",
          "$ref": "#/definitions/NewTestResultLoggingSettings"
        }
      }
    },
    "TestResultsWithWatermark": {
      "description": "",
      "type": "object",
      "properties": {
        "changedDate": {
          "type": "string",
          "format": "date-time"
        },
        "pointsResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PointsResults2"
          }
        },
        "resultId": {
          "type": "integer",
          "format": "int32"
        },
        "runId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestResultTrendFilter": {
      "description": "",
      "type": "object",
      "properties": {
        "branchNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "buildCount": {
          "type": "integer",
          "format": "int32"
        },
        "definitionIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "envDefinitionIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "maxCompleteDate": {
          "type": "string",
          "format": "date-time"
        },
        "publishContext": {
          "type": "string"
        },
        "testRunTitles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "trendDays": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestRun": {
      "description": "Test run details.",
      "type": "object",
      "properties": {
        "build": {
          "description": "Build associated with this test run.",
          "$ref": "#/definitions/ShallowReference"
        },
        "buildConfiguration": {
          "description": "Build configuration details associated with this test run.",
          "$ref": "#/definitions/BuildConfiguration"
        },
        "comment": {
          "description": "Comments entered by those analyzing the run.",
          "type": "string"
        },
        "completedDate": {
          "description": "Completed date time of the run.",
          "type": "string",
          "format": "date-time"
        },
        "controller": {
          "description": "Test Run Controller.",
          "type": "string"
        },
        "createdDate": {
          "description": "Test Run CreatedDate.",
          "type": "string",
          "format": "date-time"
        },
        "customFields": {
          "description": "List of Custom Fields for TestRun.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomTestField"
          }
        },
        "dropLocation": {
          "description": "Drop Location for the test Run.",
          "type": "string"
        },
        "dtlAutEnvironment": {
          "$ref": "#/definitions/ShallowReference"
        },
        "dtlEnvironment": {
          "$ref": "#/definitions/ShallowReference"
        },
        "dtlEnvironmentCreationDetails": {
          "$ref": "#/definitions/DtlEnvironmentDetails"
        },
        "dueDate": {
          "description": "Due date and time for test run.",
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "description": "Error message associated with the run.",
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/RunFilter"
        },
        "id": {
          "description": "ID of the test run.",
          "type": "integer",
          "format": "int32"
        },
        "incompleteTests": {
          "description": "Number of Incomplete Tests.",
          "type": "integer",
          "format": "int32"
        },
        "isAutomated": {
          "description": "true if test run is automated, false otherwise.",
          "type": "boolean"
        },
        "iteration": {
          "description": "The iteration to which the run belongs.",
          "type": "string"
        },
        "lastUpdatedBy": {
          "description": "Team foundation ID of the last updated the test run.",
          "$ref": "#/definitions/IdentityRef"
        },
        "lastUpdatedDate": {
          "description": "Last updated date and time",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Name of the test run.",
          "type": "string"
        },
        "notApplicableTests": {
          "description": "Number of Not Applicable Tests.",
          "type": "integer",
          "format": "int32"
        },
        "owner": {
          "description": "Team Foundation ID of the owner of the runs.",
          "$ref": "#/definitions/IdentityRef"
        },
        "passedTests": {
          "description": "Number of passed tests in the run",
          "type": "integer",
          "format": "int32"
        },
        "phase": {
          "description": "Phase/State for the testRun.",
          "type": "string"
        },
        "pipelineReference": {
          "description": "Reference of the pipeline to which this test run belongs.",
          "$ref": "#/definitions/PipelineReference"
        },
        "plan": {
          "description": "Test plan associated with this test run.",
          "$ref": "#/definitions/ShallowReference"
        },
        "postProcessState": {
          "description": "Post Process State.",
          "type": "string"
        },
        "project": {
          "description": "Project associated with this run.",
          "$ref": "#/definitions/ShallowReference"
        },
        "release": {
          "description": "Release Reference for the Test Run.",
          "$ref": "#/definitions/ReleaseReference"
        },
        "releaseEnvironmentUri": {
          "description": "Release Environment Uri for TestRun.",
          "type": "string"
        },
        "releaseUri": {
          "description": "Release Uri for TestRun.",
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "runStatistics": {
          "description": "RunSummary by outcome.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RunStatistic"
          }
        },
        "startedDate": {
          "description": "Start date time of the run.",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "The state of the run. Type TestRunState Valid states - Unspecified ,NotStarted, InProgress, Completed, Waiting, Aborted, NeedsInvestigation",
          "type": "string"
        },
        "substate": {
          "description": "TestRun Substate.",
          "enum": [
            "none",
            "creatingEnvironment",
            "runningTests",
            "canceledByUser",
            "abortedBySystem",
            "timedOut",
            "pendingAnalysis",
            "analyzed",
            "cancellationInProgress"
          ],
          "x-ms-enum": {
            "name": "TestRunSubstate",
            "values": [
              {
                "value": "none",
                "description": "Run with noState."
              },
              {
                "value": "creatingEnvironment",
                "description": "Run state while Creating Environment."
              },
              {
                "value": "runningTests",
                "description": "Run state while Running Tests."
              },
              {
                "value": "canceledByUser",
                "description": "Run state while Creating Environment."
              },
              {
                "value": "abortedBySystem",
                "description": "Run state when it is Aborted By the System."
              },
              {
                "value": "timedOut",
                "description": "Run state when run has timedOut."
              },
              {
                "value": "pendingAnalysis",
                "description": "Run state while Pending Analysis."
              },
              {
                "value": "analyzed",
                "description": "Run state after being Analysed."
              },
              {
                "value": "cancellationInProgress",
                "description": "Run state when cancellation is in Progress."
              }
            ]
          }
        },
        "tags": {
          "description": "Tags attached with this test run.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestTag"
          }
        },
        "testEnvironment": {
          "description": "Test environment associated with the run.",
          "$ref": "#/definitions/TestEnvironment"
        },
        "testMessageLogId": {
          "type": "integer",
          "format": "int32"
        },
        "testSettings": {
          "$ref": "#/definitions/ShallowReference"
        },
        "totalTests": {
          "description": "Total tests in the run",
          "type": "integer",
          "format": "int32"
        },
        "unanalyzedTests": {
          "description": "Number of failed tests in the run.",
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "description": "Url of the test run",
          "type": "string"
        },
        "webAccessUrl": {
          "description": "Web Access Url for TestRun.",
          "type": "string"
        }
      }
    },
    "TestRun2": {
      "description": "",
      "type": "object",
      "properties": {
        "buildConfigurationId": {
          "type": "integer",
          "format": "int32"
        },
        "buildNumber": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "completeDate": {
          "type": "string",
          "format": "date-time"
        },
        "controller": {
          "type": "string"
        },
        "coverageId": {
          "type": "integer",
          "format": "int32"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletedOn": {
          "type": "string",
          "format": "date-time"
        },
        "dropLocation": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "type": "string"
        },
        "incompleteTests": {
          "type": "integer",
          "format": "int32"
        },
        "isAutomated": {
          "type": "boolean"
        },
        "isBvt": {
          "type": "boolean"
        },
        "isMigrated": {
          "type": "boolean"
        },
        "iterationId": {
          "type": "integer",
          "format": "int32"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "legacySharePath": {
          "type": "string"
        },
        "maxReservedResultId": {
          "type": "integer",
          "format": "int32"
        },
        "notApplicableTests": {
          "type": "integer",
          "format": "int32"
        },
        "owner": {
          "type": "string",
          "format": "uuid"
        },
        "passedTests": {
          "type": "integer",
          "format": "int32"
        },
        "postProcessState": {
          "type": "string",
          "format": "byte"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "publicTestSettingsId": {
          "type": "integer",
          "format": "int32"
        },
        "releaseEnvironmentUri": {
          "type": "string"
        },
        "releaseUri": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string",
          "format": "byte"
        },
        "testEnvironmentId": {
          "type": "string",
          "format": "uuid"
        },
        "testMessageLogId": {
          "type": "integer",
          "format": "int32"
        },
        "testPlanId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunContextId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        },
        "testSettingsId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "totalTests": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string",
          "format": "byte"
        },
        "unanalyzedTests": {
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestRunCanceledEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TestRunEvent"
        }
      ],
      "properties": {}
    },
    "TestRunContext2": {
      "description": "",
      "type": "object",
      "properties": {
        "buildRefId": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "releaseRefId": {
          "type": "integer",
          "format": "int32"
        },
        "sourceWorkflow": {
          "type": "string"
        },
        "testRunContextId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestRunCoverage": {
      "description": "Test Run Code Coverage Details",
      "type": "object",
      "properties": {
        "lastError": {
          "description": "Last Error",
          "type": "string"
        },
        "modules": {
          "description": "List of Modules Coverage",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModuleCoverage"
          }
        },
        "state": {
          "description": "State",
          "type": "string"
        },
        "testRun": {
          "description": "Reference of test Run.",
          "$ref": "#/definitions/ShallowReference"
        }
      }
    },
    "TestRunCreatedEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TestRunEvent"
        }
      ],
      "properties": {}
    },
    "TestRunEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "testRun": {
          "$ref": "#/definitions/TestRun"
        }
      }
    },
    "TestRunEx2": {
      "description": "",
      "type": "object",
      "properties": {
        "bitValue": {
          "type": "boolean"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeValue": {
          "type": "string",
          "format": "date-time"
        },
        "fieldId": {
          "type": "integer",
          "format": "int32"
        },
        "fieldName": {
          "type": "string"
        },
        "floatValue": {
          "type": "number",
          "format": "double"
        },
        "guidValue": {
          "type": "string",
          "format": "uuid"
        },
        "intValue": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "stringValue": {
          "type": "string"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestRunExtended2": {
      "description": "",
      "type": "object",
      "properties": {
        "autEnvironmentUrl": {
          "type": "string"
        },
        "csmContent": {
          "type": "string"
        },
        "csmParameters": {
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "sourceFilter": {
          "type": "string"
        },
        "subscriptionName": {
          "type": "string"
        },
        "substate": {
          "type": "string",
          "format": "byte"
        },
        "testCaseFilter": {
          "type": "string"
        },
        "testEnvironmentUrl": {
          "type": "string"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestRunStartedEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TestRunEvent"
        }
      ],
      "properties": {}
    },
    "TestRunStatistic": {
      "description": "Test run statistics.",
      "type": "object",
      "properties": {
        "run": {
          "$ref": "#/definitions/ShallowReference"
        },
        "runStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RunStatistic"
          }
        }
      }
    },
    "TestRunSummary2": {
      "description": "",
      "type": "object",
      "properties": {
        "isRerun": {
          "type": "boolean"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "resultCount": {
          "type": "integer",
          "format": "int32"
        },
        "resultDuration": {
          "type": "integer",
          "format": "int64"
        },
        "runDuration": {
          "type": "integer",
          "format": "int64"
        },
        "testOutcome": {
          "type": "string",
          "format": "byte"
        },
        "testRunCompletedDate": {
          "type": "string",
          "format": "date-time"
        },
        "testRunContextId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunStatsId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TestRunWithDtlEnvEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TestRunEvent"
        }
      ],
      "properties": {
        "configurationIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "mappedTestRunEventType": {
          "type": "string"
        },
        "runTimeout": {
          "type": "string",
          "format": "TimeSpan"
        },
        "testConfigurationsMapping": {
          "type": "string"
        }
      }
    },
    "TestSession": {
      "description": "Test Session",
      "type": "object",
      "properties": {
        "area": {
          "description": "Area path of the test session",
          "$ref": "#/definitions/ShallowReference"
        },
        "comment": {
          "description": "Comments in the test session",
          "type": "string"
        },
        "endDate": {
          "description": "Duration of the session",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "Id of the test session",
          "type": "integer",
          "format": "int32"
        },
        "lastUpdatedBy": {
          "description": "Last Updated By  Reference",
          "$ref": "#/definitions/IdentityRef"
        },
        "lastUpdatedDate": {
          "description": "Last updated date",
          "type": "string",
          "format": "date-time"
        },
        "owner": {
          "description": "Owner of the test session",
          "$ref": "#/definitions/IdentityRef"
        },
        "project": {
          "description": "Project to which the test session belongs",
          "$ref": "#/definitions/ShallowReference"
        },
        "propertyBag": {
          "description": "Generic store for test session data",
          "$ref": "#/definitions/PropertyBag"
        },
        "revision": {
          "description": "Revision of the test session",
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "description": "Source of the test session",
          "enum": [
            "unknown",
            "xtDesktop",
            "feedbackDesktop",
            "xtWeb",
            "feedbackWeb",
            "xtDesktop2",
            "sessionInsightsForAll"
          ],
          "x-ms-enum": {
            "name": "TestSessionSource",
            "values": [
              {
                "value": "unknown",
                "description": "Source of test session uncertain as it is stale"
              },
              {
                "value": "xtDesktop",
                "description": "The session was created from Microsoft Test Manager exploratory desktop tool."
              },
              {
                "value": "feedbackDesktop",
                "description": "The session was created from feedback client."
              },
              {
                "value": "xtWeb",
                "description": "The session was created from browser extension."
              },
              {
                "value": "feedbackWeb",
                "description": "The session was created from browser extension."
              },
              {
                "value": "xtDesktop2",
                "description": "The session was created from web access using Microsoft Test Manager exploratory desktop tool."
              },
              {
                "value": "sessionInsightsForAll",
                "description": "To show sessions from all supported sources."
              }
            ]
          }
        },
        "startDate": {
          "description": "Start date",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "State of the test session",
          "enum": [
            "unspecified",
            "notStarted",
            "inProgress",
            "paused",
            "completed",
            "declined"
          ],
          "x-ms-enum": {
            "name": "TestSessionState",
            "values": [
              {
                "value": "unspecified",
                "description": "Only used during an update to preserve the existing value."
              },
              {
                "value": "notStarted",
                "description": "The session is still being created."
              },
              {
                "value": "inProgress",
                "description": "The session is running."
              },
              {
                "value": "paused",
                "description": "The session has paused."
              },
              {
                "value": "completed",
                "description": "The session has completed."
              },
              {
                "value": "declined",
                "description": "This is required for Feedback session which are declined"
              }
            ]
          }
        },
        "title": {
          "description": "Title of the test session",
          "type": "string"
        },
        "url": {
          "description": "Url of Test Session Resource",
          "type": "string"
        }
      }
    },
    "TestSessionExploredWorkItemReference": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TestSessionWorkItemReference"
        }
      ],
      "properties": {
        "associatedWorkItems": {
          "description": "Workitem references of workitems filed as a part of the current workitem exploration.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestSessionWorkItemReference"
          }
        },
        "endTime": {
          "description": "Time when exploration of workitem ended.",
          "type": "string",
          "format": "date-time"
        },
        "startTime": {
          "description": "Time when explore of workitem was started.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TestSessionWorkItemReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the workitem",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Type of the workitem",
          "type": "string"
        }
      }
    },
    "TestSettings": {
      "description": "Represents the test settings of the run. Used to create test settings and fetch test settings",
      "type": "object",
      "properties": {
        "areaPath": {
          "description": "Area path required to create test settings",
          "type": "string"
        },
        "description": {
          "description": "Description of the test settings. Used in create test settings.",
          "type": "string"
        },
        "isPublic": {
          "description": "Indicates if the tests settings is public or private.Used in create test settings.",
          "type": "boolean"
        },
        "machineRoles": {
          "description": "Xml string of machine roles. Used in create test settings.",
          "type": "string"
        },
        "testSettingsContent": {
          "description": "Test settings content.",
          "type": "string"
        },
        "testSettingsId": {
          "description": "Test settings id.",
          "type": "integer",
          "format": "int32"
        },
        "testSettingsName": {
          "description": "Test settings name.",
          "type": "string"
        }
      }
    },
    "TestSettings2": {
      "description": "Represents the test settings of the run. Used to create test settings and fetch test settings",
      "type": "object",
      "properties": {
        "areaPath": {
          "description": "Area path required to create test settings",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Description of the test settings. Used in create test settings.",
          "type": "string"
        },
        "isPublic": {
          "description": "Indicates if the tests settings is public or private.Used in create test settings.",
          "type": "boolean"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "lastUpdatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "machineRoles": {
          "description": "Xml string of machine roles. Used in create test settings.",
          "type": "string"
        },
        "testSettingsContent": {
          "description": "Test settings content.",
          "type": "string"
        },
        "testSettingsId": {
          "description": "Test settings id.",
          "type": "integer",
          "format": "int32"
        },
        "testSettingsName": {
          "description": "Test settings name.",
          "type": "string"
        }
      }
    },
    "TestSettingsMachineRole": {
      "description": "",
      "type": "object",
      "properties": {
        "isExecution": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TestSubResult": {
      "description": "Represents a sub result of a test result.",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment in sub result.",
          "type": "string"
        },
        "completedDate": {
          "description": "Time when test execution completed(UTC).",
          "type": "string",
          "format": "date-time"
        },
        "computerName": {
          "description": "Machine where test executed.",
          "type": "string"
        },
        "configuration": {
          "description": "Reference to test configuration.",
          "$ref": "#/definitions/ShallowReference"
        },
        "customFields": {
          "description": "Additional properties of sub result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomTestField"
          }
        },
        "displayName": {
          "description": "Name of sub result.",
          "type": "string"
        },
        "durationInMs": {
          "description": "Duration of test execution.",
          "type": "integer",
          "format": "int64"
        },
        "errorMessage": {
          "description": "Error message in sub result.",
          "type": "string"
        },
        "id": {
          "description": "ID of sub result.",
          "type": "integer",
          "format": "int32"
        },
        "lastUpdatedDate": {
          "description": "Time when result last updated(UTC).",
          "type": "string",
          "format": "date-time"
        },
        "outcome": {
          "description": "Outcome of sub result.",
          "type": "string"
        },
        "parentId": {
          "description": "Immediate parent ID of sub result.",
          "type": "integer",
          "format": "int32"
        },
        "resultGroupType": {
          "description": "Hierarchy type of the result, default value of None means its leaf node.",
          "enum": [
            "none",
            "rerun",
            "dataDriven",
            "orderedTest",
            "generic"
          ],
          "x-ms-enum": {
            "name": "ResultGroupType",
            "values": [
              {
                "value": "none",
                "description": "Leaf node of test result."
              },
              {
                "value": "rerun",
                "description": "Hierarchy type of test result."
              },
              {
                "value": "dataDriven",
                "description": "Hierarchy type of test result."
              },
              {
                "value": "orderedTest",
                "description": "Hierarchy type of test result."
              },
              {
                "value": "generic",
                "description": "Unknown hierarchy type."
              }
            ]
          }
        },
        "sequenceId": {
          "description": "Index number of sub result.",
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "description": "Stacktrace.",
          "type": "string"
        },
        "startedDate": {
          "description": "Time when test execution started(UTC).",
          "type": "string",
          "format": "date-time"
        },
        "subResults": {
          "description": "List of sub results inside a sub result, if ResultGroupType is not None, it holds corresponding type sub results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestSubResult"
          }
        },
        "testResult": {
          "description": "Reference to test result.",
          "$ref": "#/definitions/TestCaseResultIdentifier"
        },
        "url": {
          "description": "Url of sub result.",
          "type": "string"
        }
      }
    },
    "TestSuite": {
      "description": "Test suite",
      "type": "object",
      "properties": {
        "areaUri": {
          "description": "Area uri of the test suite.",
          "type": "string"
        },
        "children": {
          "description": "Child test suites of current test suite.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestSuite"
          }
        },
        "defaultConfigurations": {
          "description": "Test suite default configuration.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShallowReference"
          }
        },
        "defaultTesters": {
          "description": "Test suite default testers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShallowReference"
          }
        },
        "id": {
          "description": "Id of test suite.",
          "type": "integer",
          "format": "int32"
        },
        "inheritDefaultConfigurations": {
          "description": "Default configuration was inherited or not.",
          "type": "boolean"
        },
        "lastError": {
          "description": "Last error for test suite.",
          "type": "string"
        },
        "lastPopulatedDate": {
          "description": "Last populated date.",
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "description": "IdentityRef of user who has updated test suite recently.",
          "$ref": "#/definitions/IdentityRef"
        },
        "lastUpdatedDate": {
          "description": "Last update date.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Name of test suite.",
          "type": "string"
        },
        "parent": {
          "description": "Test suite parent shallow reference.",
          "$ref": "#/definitions/ShallowReference"
        },
        "plan": {
          "description": "Test plan to which the test suite belongs.",
          "$ref": "#/definitions/ShallowReference"
        },
        "project": {
          "description": "Test suite project shallow reference.",
          "$ref": "#/definitions/ShallowReference"
        },
        "queryString": {
          "description": "Test suite query string, for dynamic suites.",
          "type": "string"
        },
        "requirementId": {
          "description": "Test suite requirement id.",
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "description": "Test suite revision.",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "State of test suite.",
          "type": "string"
        },
        "suites": {
          "description": "List of shallow reference of suites.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShallowReference"
          }
        },
        "suiteType": {
          "description": "Test suite type.",
          "type": "string"
        },
        "testCaseCount": {
          "description": "Test cases count.",
          "type": "integer",
          "format": "int32"
        },
        "testCasesUrl": {
          "description": "Test case url.",
          "type": "string"
        },
        "text": {
          "description": "Used in tree view. If test suite is root suite then, it is name of plan otherwise title of the suite.",
          "type": "string"
        },
        "url": {
          "description": "Url of test suite.",
          "type": "string"
        }
      }
    },
    "TestSuiteCloneRequest": {
      "description": "Test suite clone request",
      "type": "object",
      "properties": {
        "cloneOptions": {
          "description": "Clone options for cloning the test suite.",
          "$ref": "#/definitions/CloneOptions"
        },
        "destinationSuiteId": {
          "description": "Suite id under which, we have to clone the suite.",
          "type": "integer",
          "format": "int32"
        },
        "destinationSuiteProjectName": {
          "description": "Destination suite project name.",
          "type": "string"
        }
      }
    },
    "TestSummaryForWorkItem": {
      "description": "",
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/AggregatedDataForResultTrend"
        },
        "workItem": {
          "$ref": "#/definitions/WorkItemReference"
        }
      }
    },
    "TestTag": {
      "description": "Tag attached to a run or result.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the tag, alphanumeric value less than 30 chars",
          "type": "string"
        }
      }
    },
    "TestTagSummary": {
      "description": "Test tag summary for build or release grouped by test run.",
      "type": "object",
      "properties": {
        "tagsGroupByTestArtifact": {
          "description": "Dictionary which contains tags associated with a test run.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TestTag"
            }
          }
        }
      }
    },
    "TestTagsUpdateModel": {
      "description": "Tags to update to a run or result.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "TestToWorkItemLinks": {
      "description": "",
      "type": "object",
      "properties": {
        "test": {
          "$ref": "#/definitions/TestMethod"
        },
        "workItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemReference"
          }
        }
      }
    },
    "TestVariable": {
      "description": "",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the test variable",
          "type": "string"
        },
        "id": {
          "description": "Id of the test variable",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name of the test variable",
          "type": "string"
        },
        "project": {
          "description": "Project to which the test variable belongs",
          "$ref": "#/definitions/ShallowReference"
        },
        "revision": {
          "description": "Revision",
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "description": "Url of the test variable",
          "type": "string"
        },
        "values": {
          "description": "List of allowed values",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdatedProperties": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "lastUpdatedByName": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UpdateTestRunRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "attachmentsToAdd": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultAttachment"
          }
        },
        "attachmentsToDelete": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestResultAttachmentIdentity"
          }
        },
        "projectName": {
          "type": "string"
        },
        "shouldHyderate": {
          "type": "boolean"
        },
        "testRun": {
          "$ref": "#/definitions/LegacyTestRun"
        }
      }
    },
    "UpdateTestRunResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "attachmentIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "updatedProperties": {
          "$ref": "#/definitions/UpdatedProperties"
        }
      }
    },
    "UploadAttachmentsRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HttpPostedTcmAttachment"
          }
        },
        "requestParams": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialize collections as a single JSON object on the wire.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "description": "The serialized item.",
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "description": "The number of serialized items.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WorkItemReference": {
      "description": "WorkItem reference Details.",
      "type": "object",
      "properties": {
        "id": {
          "description": "WorkItem Id.",
          "type": "string"
        },
        "name": {
          "description": "WorkItem Name.",
          "type": "string"
        },
        "type": {
          "description": "WorkItem Type.",
          "type": "string"
        },
        "url": {
          "description": "WorkItem Url. Valid Values : (Bug, Task, User Story, Test Case)",
          "type": "string"
        },
        "webUrl": {
          "description": "WorkItem WebUrl.",
          "type": "string"
        }
      }
    },
    "WorkItemToTestLinks": {
      "description": "",
      "type": "object",
      "properties": {
        "executedIn": {
          "enum": [
            "any",
            "tcm",
            "tfs"
          ],
          "x-ms-enum": {
            "name": "Service",
            "values": [
              {
                "value": "any",
                "description": ""
              },
              {
                "value": "tcm",
                "description": ""
              },
              {
                "value": "tfs",
                "description": ""
              }
            ]
          }
        },
        "tests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestMethod"
          }
        },
        "workItem": {
          "$ref": "#/definitions/WorkItemReference"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.2": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1-preview.2' to use this version of the api.",
      "required": true,
      "type": "string"
    },
    "api-Version-preview.3": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.1-preview.3' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.test_write": "Grants the ability to read, create, and update test plans, cases, results and other test management related artifacts.",
        "vso.test": "Grants the ability to read test plans, cases, results and other test management related artifacts."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "https://{instance}",
    "parameters": [
      {
        "name": "instance",
        "description": "TFS server name ({server:port})",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  }
}